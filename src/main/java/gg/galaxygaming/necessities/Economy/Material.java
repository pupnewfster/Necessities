package gg.galaxygaming.necessities.Economy;

import gg.galaxygaming.necessities.Utils;
import org.bukkit.entity.EntityType;
import org.bukkit.material.MaterialData;

import java.util.*;

public enum Material {//http://minecraft.gamepedia.com/Id
    AIR("AIR", org.bukkit.Material.AIR, 0),
    STONE("STONE", org.bukkit.Material.STONE, 1),
    GRANITE("GRANITE", STONE, (short) 1),
    POLISHED_GRANITE("POLISHED_GRANITE", STONE, (short) 2),
    DIORITE("DIORITE", STONE, (short) 3),
    POLISHED_DIORITE("POLISHED_DIORITE", STONE, (short) 4),
    ANDESITE("ANDESITE", STONE, (short) 5),
    POLISHED_ANDESITE("POLISHED_ANDESITE", STONE, (short) 6),
    GRASS("GRASS", org.bukkit.Material.GRASS, 2, Collections.singletonList("GRASS_BLOCK")),
    DIRT("DIRT", org.bukkit.Material.DIRT, 3),
    COARSE_DIRT("COURSE_DIRT", DIRT, (short) 1),
    PODZOL("PODZOL", DIRT, (short) 2),
    COBBLESTONE("COBBLESTONE", org.bukkit.Material.COBBLESTONE, 4, "COBBLE", Collections.singletonList("COBBLE")),
    PLANKS("PLANKS", org.bukkit.Material.WOOD, "PLANKS", 5, "PLANK", Arrays.asList("WOOD", "PLANK")),
    OAK_PLANKS("OAK_PLANKS", "OAK PLANKS", PLANKS, (short) 0, "OAK PLANK", Collections.singletonList("OAK_WOOD")),
    SPRUCE_PLANKS("SPRUCE_PLANKS", "SPRUCE PLANKS", PLANKS, (short) 1, "SPRUCE PLANK", Collections.singletonList("SPRUCE_WOOD")),
    BIRCH_PLANKS("BIRCH_PLANKS", "BIRCH PLANKS", PLANKS, (short) 2, "BIRCH PLANK", Collections.singletonList("BIRCH_WOOD")),
    JUNGLE_PLANKS("JUNGLE_PLANKS", "JUNGLE PLANKS", PLANKS, (short) 3, "JUNGLE PLANK", Collections.singletonList("JUNGLE_WOOD")),
    ACACIA_PLANKS("ACACIA_PLANKS", "ACACIA PLANKS", PLANKS, (short) 4, "ACACIA PLANK", Collections.singletonList("ACACIA_WOOD")),
    DARK_OAK_PLANKS("DARK_OAK_PLANKS", "DARK OAK PLANKS", PLANKS, (short) 5, "DARK OAK PLANK", Collections.singletonList("DARK_OAK_WOOD")),
    SAPLING("SAPLING", org.bukkit.Material.SAPLING, "SAPLINGS", 6),
    OAK_SAPLING("OAK_SAPLING", "OAK SAPLINGS", SAPLING, (short) 0),
    SPRUCE_SAPLING("SPRUCE_SAPLING", "SPRUCE SAPLINGS", SAPLING, (short) 1),
    BIRCH_SAPLING("BIRCH_SAPLING", "BIRCH SAPLINGS", SAPLING, (short) 2),
    JUNGLE_SAPLING("JUNGLE_SAPLING", "JUNGLE SAPLINGS", SAPLING, (short) 3),
    ACACIA_SAPLING("ACACIA_SAPLING", "ACACIA SAPLINGS", SAPLING, (short) 4),
    DARK_OAK_SAPLING("DARK_OAK_SAPLING", "DARK OAK SAPLINGS", SAPLING, (short) 5),
    BEDROCK("BEDROCK", org.bukkit.Material.BEDROCK, 7, Collections.singletonList("ADMINIUM")),
    FLOWING_WATER("FLOWING_WATER", org.bukkit.Material.WATER, 8),
    WATER("WATER", org.bukkit.Material.STATIONARY_WATER, 9, Arrays.asList("STILL_WATER", "STATIONARY_WATER", "WATER_SOURCE")),
    WATER_8_8("WATER_8_8", WATER, (short) 0),
    WATER_7_8("WATER_7_8", WATER, (short) 1),
    WATER_6_8("WATER_6_8", WATER, (short) 2),
    WATER_5_8("WATER_5_8", WATER, (short) 3),
    WATER_4_8("WATER_4_8", WATER, (short) 4),
    WATER_3_8("WATER_3_8", WATER, (short) 5),
    WATER_2_8("WATER_2_8", WATER, (short) 6),
    WATER_1_8("WATER_1_8", WATER, (short) 7),
    FLOWING_LAVA("FLOWING_LAVA", org.bukkit.Material.LAVA, 10),
    LAVA("LAVA", org.bukkit.Material.STATIONARY_LAVA, 11, Arrays.asList("STILL_LAVA", "STATIONARY_LAVA", "LAVA_SOURCE")),
    LAVA_8_8("LAVA_8_8", LAVA, (short) 0),
    LAVA_7_8("LAVA_7_8", LAVA, (short) 1),
    LAVA_6_8("LAVA_6_8", LAVA, (short) 2),
    LAVA_5_8("LAVA_5_8", LAVA, (short) 3),
    LAVA_4_8("LAVA_4_8", LAVA, (short) 4),
    LAVA_3_8("LAVA_3_8", LAVA, (short) 5),
    LAVA_2_8("LAVA_2_8", LAVA, (short) 6),
    LAVA_1_8("LAVA_1_8", LAVA, (short) 7),
    SAND("SAND", org.bukkit.Material.SAND, 12),
    RED_SAND("RED_SAND", SAND, (short) 1),
    GRAVEL("GRAVEL", org.bukkit.Material.GRAVEL, 13),
    GOLD_ORE("GOLD_ORE", org.bukkit.Material.GOLD_ORE, 14),
    IRON_ORE("IRON_ORE", org.bukkit.Material.IRON_ORE, 15),
    COAL_ORE("COAL_ORE", org.bukkit.Material.COAL_ORE, 16),
    LOG("LOG", org.bukkit.Material.LOG, "LOGS", 17, Collections.singletonList("BARK")),
    OAK_LOG_UP("OAK_LOG_UP", "OAK LOGS", LOG, (short) 0, "OAK LOG", Arrays.asList("OAK_LOG", "OAK_BARK")),
    SPRUCE_LOG_UP("SPRUCE_LOG_UP", "SPRUCE LOGS", LOG, (short) 1, "SPRUCE LOG", Arrays.asList("SPRUCE_LOG", "SPRUCE_BARK")),
    BIRCH_LOG_UP("BIRCH_LOG_UP", "BIRCH LOGS", LOG, (short) 2, "BIRCH LOG", Arrays.asList("BIRCH_LOG", "BIRCH_BARK")),
    JUNGLE_LOG_UP("JUNGLE_LOG_UP", "JUNGLE LOGS", LOG, (short) 3, "JUNGLE LOG", Arrays.asList("JUNGLE_LOG", "JUNGLE_BARK")),
    OAK_LOG_EAST("OAK_LOG_EAST", LOG, (short) 4),
    SPRUCE_LOG_EAST("SPRUCE_LOG_EAST", LOG, (short) 5),
    BIRCH_LOG_EAST("BIRCH_LOG_EAST", LOG, (short) 6),
    JUNGLE_LOG_EAST("JUNGLE_LOG_EAST", LOG, (short) 7),
    OAK_LOG_NORTH("OAK_LOG_NORTH", LOG, (short) 8),
    SPRUCE_LOG_NORTH("SPRUCE_LOG_NORTH", LOG, (short) 9),
    BIRCH_LOG_NORTH("BIRCH_LOG_NORTH", LOG, (short) 10),
    JUNGLE_LOG_NORTH("JUNGLE_LOG_NORTH", LOG, (short) 11),
    OAK_LOG_ALL_BARK("OAK_LOG_ALL_BARK", LOG, (short) 12),
    SPRUCE_LOG_ALL_BARK("SPRUCE_LOG_ALL_BARK", LOG, (short) 13),
    BIRCH_LOG_ALL_BARK("BIRCH_LOG_ALL_BARK", LOG, (short) 14),
    JUNGLE_LOG_ALL_BARK("JUNGLE_LOG_ALL_BARK", LOG, (short) 15),
    LEAVES("LEAVES", org.bukkit.Material.LEAVES, 18),
    OAK_LEAVES("OAK_LEAVES", LEAVES, (short) 0),
    SPRUCE_LEAVES("SPRUCE_LEAVES", LEAVES, (short) 1),
    BIRCH_LEAVES("BIRCH_LEAVES", LEAVES, (short) 2),
    JUNGLE_LEAVES("JUNGLE_LEAVES", LEAVES, (short) 3),
    OAK_LEAVES_NO_DECAY("OAK_LEAVES_NO_DECAY", LEAVES, (short) 4),
    SPRUCE_LEAVES_NO_DECAY("SPRUCE_LEAVES_NO_DECAY", LEAVES, (short) 5),
    BIRCH_LEAVES_NO_DECAY("BIRCH_LEAVES_NO_DECAY", LEAVES, (short) 6),
    JUNGLE_LEAVES_NO_DECAY("JUNGLE_LEAVES_NO_DECAY", LEAVES, (short) 7),
    OAK_LEAVES_DECAY("OAK_LEAVES_DECAY", LEAVES, (short) 8),
    SPRUCE_LEAVES_DECAY("SPRUCE_LEAVES_DECAY", LEAVES, (short) 9),
    BIRCH_LEAVES_DECAY("BIRCH_LEAVES_DECAY", LEAVES, (short) 10),
    JUNGLE_LEAVES_DECAY("JUNGLE_LEAVES_DECAY", LEAVES, (short) 11),
    SPONGE("SPONGE", org.bukkit.Material.SPONGE, "SPONGES", 19),
    WET_SPONGE("WET_SPONGE", "WET SPONGES", SPONGE, (short) 1),
    GLASS("GLASS", org.bukkit.Material.GLASS, 20),
    LAPIS_ORE("LAPIS_ORE", org.bukkit.Material.LAPIS_ORE, 21, "LAPIS LAZULI ORE", Collections.singletonList("LAPIS_LAZULI_ORE")),
    LAPIS_BLOCK("LAPIS_BLOCK", org.bukkit.Material.LAPIS_BLOCK, "LAPIS LAZULI BLOCKS", 22, "LAPIS LAZULI BLOCK", Arrays.asList("LAPIS_LAZULI_BLOCK", "BLOCK_OF_LAPIS", "BLOCK_OF_LAPIS_LAZULI")),
    DISPENSER("DISPENSER", org.bukkit.Material.DISPENSER, "DISPENSERS", 23),
    SANDSTONE("SANDSTONE", org.bukkit.Material.SANDSTONE, 24),
    CHISELED_SANDSTONE("CHISELED_SANDSTONE", SANDSTONE, (short) 1),
    SMOOTH_SANDSTONE("SMOOTH_SANDSTONE", SANDSTONE, (short) 2),
    NOTEBLOCK("NOTEBLOCK", org.bukkit.Material.NOTE_BLOCK, "NOTE BLOCKS", 25, "NOTE BLOCK"),
    BED_BLOCK("BED_BLOCK", org.bukkit.Material.BED_BLOCK, 26),//Unobtainable
    GOLDEN_RAIL("GOLDEN_RAIL", org.bukkit.Material.POWERED_RAIL, "POWERED RAILS", 27, "POWERED RAIL", Collections.singletonList("POWERED_RAIL")),
    DETECTOR_RAIL("DETECTOR_RAIL", org.bukkit.Material.DETECTOR_RAIL, "DETECTOR RAILS", 28),
    STICKY_PISTON("STICKY_PISTON", org.bukkit.Material.PISTON_STICKY_BASE, "STICKY PISTONS", 29, Collections.singletonList("PISTON_STICKY_BASE")),
    WEB("WEB", org.bukkit.Material.WEB, "COBWEBS", 30, "COBWEB", Arrays.asList("COBWEB", "SPIDER_WEB")),
    TALLGRASS("TALLGRASS", org.bukkit.Material.LONG_GRASS, 31, Collections.singletonList("LONG_GRASS")),
    DEAD_BUSH("DEAD_BUSH", TALLGRASS, (short) 0),
    TALL_GRASS("TALL_GRASS", TALLGRASS, (short) 1),
    FERN("FERN", "FERNS", TALLGRASS, (short) 2),
    DEADBUSH("DEADBUSH", org.bukkit.Material.DEAD_BUSH, 32, "DEAD BUSH"),
    PISTON("PISTON", org.bukkit.Material.PISTON_BASE, "PISTONS", 33, Collections.singletonList("PISTON_BASE")),
    PISTON_HEAD("PISTON_HEAD", org.bukkit.Material.PISTON_MOVING_PIECE, 34, Collections.singletonList("PISTON_MOVING_PIECE")),//Unobtainable
    WOOL("WOOL", org.bukkit.Material.WOOL, 35),
    WHITE_WOOL("WHITE_WOOL", WOOL, (short) 0),
    ORANGE_WOOL("ORANGE_WOOL", WOOL, (short) 1),
    MAGENTA_WOOL("MAGENTA_WOOL", WOOL, (short) 2),
    LIGHT_BLUE_WOOL("LIGHT_BLUE_WOOL", WOOL, (short) 3),
    YELLOW_WOOL("YELLOW_WOOL", WOOL, (short) 4),
    LIME_WOOL("LIME_WOOL", WOOL, (short) 5),
    PINK_WOOL("PINK_WOOL", WOOL, (short) 6),
    GRAY_WOOL("GRAY_WOOL", WOOL, (short) 7),
    LIGHT_GRAY_WOOL("LIGHT_GRAY_WOOL", WOOL, (short) 8),
    CYAN_WOOL("CYAN_WOOL", WOOL, (short) 9),
    PURPLE_WOOL("PURPLE_WOOL", WOOL, (short) 10),
    BLUE_WOOL("BLUE_WOOL", WOOL, (short) 11),
    BROWN_WOOL("BROWN_WOOL", WOOL, (short) 12),
    GREEN_WOOL("GREEN_WOOL", WOOL, (short) 13),
    RED_WOOL("RED_WOOL", WOOL, (short) 14),
    BLACK_WOOL("BLACK_WOOL", WOOL, (short) 15),
    PISTON_EXTENSION("PISTON_EXTENSION", org.bukkit.Material.PISTON_EXTENSION, 36),//Unobtainable
    YELLOW_FLOWER("YELLOW_FLOWER", org.bukkit.Material.YELLOW_FLOWER, "DANDELIONS", 37, "DANDELION", Collections.singletonList("DANDELION")),
    RED_FLOWER("RED_FLOWER", org.bukkit.Material.RED_ROSE, 38),
    POPPY("POPPY", "POPPIES", RED_FLOWER, (short) 0, Arrays.asList("ROSE", "RED_ROSE")),
    BLUE_ORCHID("BLUE_ORCHID", "BLUE ORCHIDS", RED_FLOWER, (short) 1),
    ALLIUM("ALLIUM", "ALLIUMS", RED_FLOWER, (short) 2),
    AZURE_BLUET("AZURE_BLUET", RED_FLOWER, (short) 3),
    RED_TULIP("RED_TULIP", "RED TULIPS", RED_FLOWER, (short) 4),
    ORANGE_TULIP("ORANGE_TULIP", "ORANGE TULIPS", RED_FLOWER, (short) 5),
    WHITE_TULIP("WHITE_TULIP", "WHITE TULIPS", RED_FLOWER, (short) 6),
    PINK_TULIP("PINK_TULIP", "PINK TULIPS", RED_FLOWER, (short) 7),
    OXEYE_DAISY("OXEYE_DAISY", "OXEYE DAISIES", RED_FLOWER, (short) 8),
    BROWN_MUSHROOM("BROWN_MUSHROOM", org.bukkit.Material.BROWN_MUSHROOM, "BROWN MUSHROOMS", 39),
    RED_MUSHROOM("RED_MUSHROOM", org.bukkit.Material.RED_MUSHROOM, "RED MUSHROOMS", 40),
    GOLD_BLOCK("GOLD_BLOCK", org.bukkit.Material.GOLD_BLOCK, "BLOCKS OF GOLD", 41, "BLOCK OF GOLD", Collections.singletonList("BLOCK_OF_GOLD")),
    IRON_BLOCK("IRON_BLOCK", org.bukkit.Material.IRON_BLOCK, "BLOCKS OF IRON", 42, "BLOCK OF IRON", Collections.singletonList("BLOCK_OF_IRON")),
    DOUBLE_STONE_SLAB("DOUBLE_STONE_SLAB", org.bukkit.Material.DOUBLE_STEP, "DOUBLE STONE SLABS", 43, Collections.singletonList("DOUBLE_STEP")),//Unobtainable
    DOUBLE_SANDSTONE_SLAB("DOUBLE_SANDSTONE_SLAB", "DOUBLE SANDSTONE SLABS", DOUBLE_STONE_SLAB, (short) 1),
    DOUBLE_STONE_WOODEN_SLAB("DOUBLE_STONE_WOODEN_SLAB", "DOUBLE STONE WOODEN SLABS", DOUBLE_STONE_SLAB, (short) 2),
    DOUBLE_COBBLESTONE_SLAB("DOUBLE_COBBLESTONE_SLAB", "DOUBLE COBBLESTONE SLABS", DOUBLE_STONE_SLAB, (short) 3),
    DOUBLE_BRICKS_SLAB("DOUBLE_BRICKS_SLAB", "DOUBLE BRICK SLABS", DOUBLE_STONE_SLAB, (short) 4, "DOUBLE BRICK SLAB", Collections.singletonList("DOUBLE_BRICK_SLAB")),
    DOUBLE_STONE_BRICK_SLAB("DOUBLE_STONE_BRICK_SLAB", "DOUBLE STONE BRICK SLABS", DOUBLE_STONE_SLAB, (short) 5),
    DOUBLE_NETHER_BRICK_SLAB("DOUBLE_NETHER_BRICK_SLAB", "DOUBLE NETHER BRICK SLABS", DOUBLE_STONE_SLAB, (short) 6),
    DOUBLE_QUARTZ_SLAB("DOUBLE_QUARTZ_SLAB", "DOUBLE QUARTZ SLABS", DOUBLE_STONE_SLAB, (short) 7),
    FULL_STONE_SLAB("FULL_STONE_SLAB", "FULL STONE SLABS", DOUBLE_STONE_SLAB, (short) 8),
    FULL_SANDSTONE_SLAB("FULL_SANDSTONE_SLAB", "FULL SANDSTONE SLABS", DOUBLE_STONE_SLAB, (short) 9),
    TILE_QUARTZ_SLAB("TILE_QUARTZ_SLAB", "QUARTZ SLABS", DOUBLE_STONE_SLAB, (short) 10, "QUARTZ SLAB", Collections.singletonList("QUARTZ_SLAB")),
    STONE_SLAB("STONE_SLAB", org.bukkit.Material.STEP, "STONE SLABS", 44, Arrays.asList("SLAB", "STEP")),
    SANDSTONE_SLAB("SANDSTONE_SLAB", "SANDSTONE SLABS", STONE_SLAB, (short) 1, Collections.singletonList("SANDSTONE_STEP")),
    STONE_WOODEN_SLAB("STONE_WOODEN_SLAB", "STONE WOODEN SLABS", STONE_SLAB, (short) 2, Collections.singletonList("STONE_WOODEN_STEP")),
    COBBLESTONE_SLAB("COBBLESTONE_SLAB", "COBBLESTONE SLABS", STONE_SLAB, (short) 3, Arrays.asList("COBBLESTONE_STEP", "COBBLE_SLAB", "COBBLE_STEP")),
    BRICKS_SLAB("BRICKS_SLAB", "BRICK SLABS", STONE_SLAB, (short) 4, "BRICK SLAB", Arrays.asList("BRICK_SLAB", "BRICKS_STEP", "BRICK_STEP")),
    STONE_BRICK_SLAB("STONE_BRICK_SLAB", "STONE BRICK SLABS", STONE_SLAB, (short) 5, Collections.singletonList("STONE_BRICK_STEP")),
    NETHER_BRICK_SLAB("NETHER_BRICK_SLAB", "NETHER BRICK SLABS", STONE_SLAB, (short) 6, Collections.singletonList("NETHER_BRICK_STEP")),
    QUARTZ_SLAB("QUARTZ_SLAB", "QUARTZ SLABS", STONE_SLAB, (short) 7, Collections.singletonList("QUARTZ_STEP")),
    UPPER_STONE_SLAB("UPPER_STONE_SLAB", "UPPER STONE SLABS", STONE_SLAB, (short) 8, Collections.singletonList("UPPER_SANDSTONE_STEP")),
    UPPER_SANDSTONE_SLAB("UPPER_SANDSTONE_SLAB", "UPPER SANDSTONE SLABS", STONE_SLAB, (short) 9, Collections.singletonList("UPPER_STONE_STEP")),
    UPPER_STONE_WOODEN_SLAB("UPPER_STONE_WOODEN_SLAB", "UPPER STONE WOODEN SLABS", STONE_SLAB, (short) 10, Collections.singletonList("UPPER_STONE_WOODEN_STEP")),
    UPPER_COBBLESTONE_SLAB("UPPER_COBBLESTONE_SLAB", "UPPER COBBLESTONE SLABS", STONE_SLAB, (short) 11, Arrays.asList("UPPER_COBBLESTONE_STEP", "UPPER_COBBLE_SLAB", "UPPER_COBBLE_STEP")),
    UPPER_BRICKS_SLAB("UPPER_BRICKS_SLAB", "UPPER BRICK SLABS", STONE_SLAB, (short) 12, "UPPER BRICK SLAB", Arrays.asList("UPPER_BRICK_SLAB", "UPPER_BRICKS_STEP", "UPPER_BRICK_STEP")),
    UPPER_STONE_BRICK_SLAB("UPPER_STONE_BRICK_SLAB", "UPPER STONE BRICK SLABS", STONE_SLAB, (short) 13, Collections.singletonList("UPPER_STONE_BRICK_STEP")),
    UPPER_NETHER_BRICK_SLAB("UPPER_NETHER_BRICK_SLAB", "UPPER NETHER BRICK SLABS", STONE_SLAB, (short) 14, Collections.singletonList("UPPER_NETHER_BRICK_STEP")),
    UPPER_QUARTZ_SLAB("UPPER_QUARTZ_SLAB", "UPPER QUARTZ SLABS", STONE_SLAB, (short) 15, Collections.singletonList("UPPER_QUARTZ_STEP")),
    BRICK_BLOCK("BRICK_BLOCK", org.bukkit.Material.BRICK, 45, "BRICK BLOCKS"),
    TNT("TNT", org.bukkit.Material.TNT, 46),
    BOOKSHELF("BOOKSHELF", org.bukkit.Material.BOOKSHELF, "BOOKSHELVES", 47),
    MOSSY_COBBLESTONE("MOSSY_COBBLESTONE", org.bukkit.Material.MOSSY_COBBLESTONE, 48, "MOSSY COBBLE", Arrays.asList("MOSSY_COBBLE", "MOSS_STONE")),
    OBSIDIAN("OBSIDIAN", org.bukkit.Material.OBSIDIAN, 49),
    TORCH("TORCH", org.bukkit.Material.TORCH, "TORCHES", 50),
    EAST_TORCH("EAST_TORCH", TORCH, (short) 1),
    WEST_TORCH("WEST_TORCH", TORCH, (short) 2),
    SOUTH_TORCH("SOUTH_TORCH", TORCH, (short) 3),
    NORTH_TORCH("NORTH_TORCH", TORCH, (short) 4),
    UP_TORCH("UP_TORCH", TORCH, (short) 5),
    FIRE("FIRE", org.bukkit.Material.FIRE, 51),//Unobtainable
    MOB_SPAWNER("MOB_SPAWNER", org.bukkit.Material.MOB_SPAWNER, "MONSTER SPAWNERS", 52, "MONSTER SPAWNER", Arrays.asList("SPAWNER", "MONSTER_SPAWNER")),
    BAT_SPAWNER("BAT_SPAWNER", "BAT SPAWNERS", MOB_SPAWNER, EntityType.BAT.toString()),
    BLAZE_SPAWNER("BLAZE_SPAWNER", "BLAZE SPAWNERS", MOB_SPAWNER, EntityType.BLAZE.toString()),
    CAVE_SPIDER_SPAWNER("CAVE_SPIDER_SPAWNER", "CAVE SPIDER SPAWNERS", MOB_SPAWNER, EntityType.CAVE_SPIDER.toString()),
    CHICKEN_SPAWNER("CHICKEN_SPAWNER", "CHICKEN SPAWNERS", MOB_SPAWNER, EntityType.CHICKEN.toString()),
    COW_SPAWNER("COW_SPAWNER", "COW SPAWNERS", MOB_SPAWNER, EntityType.COW.toString()),
    CREEPER_SPAWNER("CREEPER_SPAWNER", "CREEPER SPAWNERS", MOB_SPAWNER, EntityType.CREEPER.toString()),
    DONKEY_SPAWNER("DONKEY_SPAWNER", "DONKEY SPAWNERS", MOB_SPAWNER, EntityType.DONKEY.toString()),
    ELDER_GUARDIAN_SPAWNER("ELDER_GUARDIAN_SPAWNER", "ELDER GUARDIAN SPAWNERS", MOB_SPAWNER, EntityType.ELDER_GUARDIAN.toString()),
    ENDERMAN_SPAWNER("ENDERMAN_SPAWNER", "ENDERMAN SPAWNERS", MOB_SPAWNER, EntityType.ENDERMAN.toString()),
    ENDERMITE_SPAWNER("ENDERMITE_SPAWNER", "ENDERMITE SPAWNERS", MOB_SPAWNER, EntityType.ENDERMITE.toString()),
    EVOKER_SPAWNER("EVOKER_SPAWNER", "EVOKER SPAWNERS", MOB_SPAWNER, EntityType.EVOKER.toString()),
    GHAST_SPAWNER("GHAST_SPAWNER", "GHAST SPAWNERS", MOB_SPAWNER, EntityType.GHAST.toString()),
    GUARDIAN_SPAWNER("GUARDIAN_SPAWNER", "GUARDIAN SPAWNERS", MOB_SPAWNER, EntityType.GUARDIAN.toString()),
    HORSE_SPAWNER("HORSE_SPAWNER", "HORSE SPAWNERS", MOB_SPAWNER, EntityType.HORSE.toString()),
    HUSK_SPAWNER("HUSK_SPAWNER", "HUSK SPAWNERS", MOB_SPAWNER, EntityType.HUSK.toString()),
    LLAMA_SPAWNER("LLAMA_SPAWNER", "LLAMA SPAWNERS", MOB_SPAWNER, EntityType.LLAMA.toString()),
    MAGMA_CUBE_SPAWNER("MAGMA_CUBE_SPAWNER", "MAGMA CUBE SPAWNERS", MOB_SPAWNER, EntityType.MAGMA_CUBE.toString()),
    MUSHROOM_COW_SPAWNER("MUSHROOM_COW_SPAWNER", "MUSHROOM COW SPAWNERS", MOB_SPAWNER, EntityType.MUSHROOM_COW.toString()),
    MULE_SPAWNER("MULE_SPAWNER", "MULE SPAWNERS", MOB_SPAWNER, EntityType.MULE.toString()),
    OCELOT_SPAWNER("OCELOT_SPAWNER", "OCELOT SPAWNERS", MOB_SPAWNER, EntityType.OCELOT.toString()),
    PARROT_SPAWNER("PARROT_SPAWNER", "PARROT SPAWNERS", MOB_SPAWNER, EntityType.PARROT.toString()),
    PIG_SPAWNER("PIG_SPAWNER", "PIG SPAWNERS", MOB_SPAWNER, EntityType.PIG.toString()),
    POLAR_BEAR_SPAWNER("POLAR_BEAR_SPAWNER", "POLAR BEAR SPAWNERS", MOB_SPAWNER, EntityType.POLAR_BEAR.toString()),
    RABBIT_SPAWNER("RABBIT_SPAWNER", "RABBIT SPAWNERS", MOB_SPAWNER, EntityType.RABBIT.toString()),
    SHEEP_SPAWNER("SHEEP_SPAWNER", "SHEEP SPAWNERS", MOB_SPAWNER, EntityType.SHEEP.toString()),
    SHULKER_SPAWNER("SHULKER_SPAWNER", "SHULKER SPAWNERS", MOB_SPAWNER, EntityType.SHULKER.toString()),
    SILVERFISH_SPAWNER("SILVERFISH_SPAWNER", "SILVERFISH SPAWNERS", MOB_SPAWNER, EntityType.SILVERFISH.toString()),
    SKELETON_SPAWNER("SKELETON_SPAWNER", "SKELETON SPAWNERS", MOB_SPAWNER, EntityType.SKELETON.toString()),
    SKELETON_HORSE_SPAWNER("SKELETON_HORSE_SPAWNER", "SKELETON HORSE SPAWNERS", MOB_SPAWNER, EntityType.SKELETON_HORSE.toString()),
    SLIME_SPAWNER("SLIME_SPAWNER", "SLIME SPAWNERS", MOB_SPAWNER, EntityType.SLIME.toString()),
    SPIDER_SPAWNER("SPIDER_SPAWNER", "SPIDER SPAWNERS", MOB_SPAWNER, EntityType.SPIDER.toString()),
    SQUID_SPAWNER("SQUID_SPAWNER", "SQUID SPAWNERS", MOB_SPAWNER, EntityType.SQUID.toString()),
    STRAY_SPAWNER("STRAY_SPAWNER", "STRAY SPAWNERS", MOB_SPAWNER, EntityType.STRAY.toString()),
    VEX_SPAWNER("VEX_SPAWNER", "VEX SPAWNERS", MOB_SPAWNER, EntityType.VEX.toString()),
    VILLAGER_SPAWNER("VILLAGER_SPAWNER", "VILLAGER SPAWNERS", MOB_SPAWNER, EntityType.VILLAGER.toString()),
    VINDICATOR_SPAWNER("VINDICATOR_SPAWNER", "VINDICATOR SPAWNERS", MOB_SPAWNER, EntityType.VINDICATOR.toString()),
    WITCH_SPAWNER("WITCH_SPAWNER", "WITCH SPAWNERS", MOB_SPAWNER, EntityType.WITCH.toString()),
    WITHER_SKELETON_SPAWNER("WITHER_SKELETON_SPAWNER", "WITHER SKELETON SPAWNERS", MOB_SPAWNER, EntityType.WITHER_SKELETON.toString()),
    WOLF_SPAWNER("WOLF_SPAWNER", "WOLF SPAWNERS", MOB_SPAWNER, EntityType.WOLF.toString()),
    ZOMBIE_SPAWNER("ZOMBIE_SPAWNER", "ZOMBIE SPAWNERS", MOB_SPAWNER, EntityType.ZOMBIE.toString()),
    ZOMBIE_HORSE_SPAWNER("ZOMBIE_HORSE_SPAWNER", "ZOMBIE HORSE SPAWNERS", MOB_SPAWNER, EntityType.ZOMBIE_HORSE.toString()),
    ZOMBIE_PIGMAN_SPAWNER("ZOMBIE_PIGMAN_SPAWNER", "ZOMBIE PIGMAN SPAWNERS", MOB_SPAWNER, EntityType.PIG_ZOMBIE.toString(), Collections.singletonList("PIG_ZOMBIE_SPAWNER")),
    ZOMBIE_VILLAGER_SPAWNER("ZOMBIE_VILLAGER_SPAWNER", "ZOMBIE VILLAGER SPAWNERS", MOB_SPAWNER, EntityType.ZOMBIE_VILLAGER.toString()),
    IRON_GOLEM_SPAWNER("IRON_GOLEM_SPAWNER", "IRON GOLEM SPAWNERS", MOB_SPAWNER, EntityType.IRON_GOLEM.toString()),
    SNOWMAN_SPAWNER("SNOWMAN_SPAWNER", "SNOWMAN SPAWNERS", MOB_SPAWNER, EntityType.SNOWMAN.toString()),
    OAK_STAIRS("OAK_STAIRS", org.bukkit.Material.WOOD_STAIRS, "OAK STAIRS", 53, "OAK STAIR", Collections.singletonList("WOOD_STAIRS")),
    CHEST("CHEST", org.bukkit.Material.CHEST, "CHESTS", 54, Collections.singletonList("CRATE")),
    REDSTONE_WIRE("REDSTONE_WIRE", org.bukkit.Material.REDSTONE_WIRE, 55),//Unobtainable
    DIAMOND_ORE("DIAMOND_ORE", org.bukkit.Material.DIAMOND_ORE, 56),
    DIAMOND_BLOCK("DIAMOND_BLOCK", org.bukkit.Material.DIAMOND_BLOCK, "BLOCKS OF DIAMOND", 57, "BLOCK OF DIAMOND", Collections.singletonList("BLOCK_OF_DIAMOND")),
    CRAFTING_TABLE("CRAFTING_TABLE", org.bukkit.Material.WORKBENCH, "CRAFTING TABLES", 58, Collections.singletonList("WORKBENCH")),
    WHEAT_BLOCK("WHEAT_BLOCK", org.bukkit.Material.CROPS, 59, "CROPS", Collections.singletonList("CROPS")),//Unobtainable
    WHEAT_BLOCK_1_8("WHEAT_BLOCK_1_8", WHEAT_BLOCK, (short) 0),
    WHEAT_BLOCK_2_8("WHEAT_BLOCK_2_8", WHEAT_BLOCK, (short) 1),
    WHEAT_BLOCK_3_8("WHEAT_BLOCK_3_8", WHEAT_BLOCK, (short) 2),
    WHEAT_BLOCK_4_8("WHEAT_BLOCK_4_8", WHEAT_BLOCK, (short) 3),
    WHEAT_BLOCK_5_8("WHEAT_BLOCK_5_8", WHEAT_BLOCK, (short) 4),
    WHEAT_BLOCK_6_8("WHEAT_BLOCK_6_8", WHEAT_BLOCK, (short) 5),
    WHEAT_BLOCK_7_8("WHEAT_BLOCK_7_8", WHEAT_BLOCK, (short) 6),
    WHEAT_BLOCK_FULL("WHEAT_BLOCK_FULL", WHEAT_BLOCK, (short) 7),
    FARMLAND("FARMLAND", org.bukkit.Material.SOIL, 60, Arrays.asList("SOIL", "TILLED_SOIL", "TILLED_GROUND", "TILLED_LAND")),
    WET_FARMLAND("WET_FARMLAND", FARMLAND, (short) 1, Arrays.asList("WET_SOIL", "WET_GROUND", "WET_LAND")),
    FURNACE("FURNACE", org.bukkit.Material.FURNACE, "FURNACES", 61),
    LIT_FURNACE("LIT_FURNACE", org.bukkit.Material.BURNING_FURNACE, "BURNING FURNACES", 62, "BURNING FURNACE", Collections.singletonList("BURNING_FURNACE")),
    STANDING_SIGN("STANDING_SIGN", org.bukkit.Material.SIGN_POST, 63, Collections.singletonList("SIGN_POST")),//Unobtainable
    WOODEN_DOOR_BLOCK("WOODEN_DOOR_BLOCK", org.bukkit.Material.WOODEN_DOOR, 64),//Unobtainable
    LADDER("LADDER", org.bukkit.Material.LADDER, "LADDERS", 65),
    RAIL("RAIL", org.bukkit.Material.RAILS, "RAILS", 66, Collections.singletonList("RAILS")),
    STONE_STAIRS("STONE_STAIRS", org.bukkit.Material.COBBLESTONE_STAIRS, "COBBLESTONE STAIRS", 67, "COBBLESTONE STAIR", Arrays.asList("COBBLESTONE_STAIRS", "COBBLE_STAIRS")),
    WALL_SIGN("WALL_SIGN", org.bukkit.Material.SIGN_POST, 68),//Unobtainable
    LEVER("LEVER", org.bukkit.Material.LEVER, "LEVERS", 69),
    STONE_PRESSURE_PLATE("STONE_PRESSURE_PLATE", org.bukkit.Material.STONE_PLATE, "STONE PRESSURE PLATES", 70, Arrays.asList("PRESSURE_PLATE", "STONE_PLATE")),
    IRON_DOOR_BLOCK("IRON_DOOR_BLOCK", org.bukkit.Material.IRON_DOOR_BLOCK, 71),//Unobtainable
    WOODEN_PRESSURE_PLATE("WOODEN_PRESSURE_PLATE", org.bukkit.Material.WOOD_PLATE, "WOODEN PRESSURE PLATES", 72, Arrays.asList("WOOD_PRESSURE_PLATE", "WOODEN_PLATE", "WOOD_PLATE")),
    REDSTONE_ORE("REDSTONE_ORE", org.bukkit.Material.REDSTONE_ORE, 73),
    LIT_REDSTONE_ORE("LIT_REDSTONE_ORE", org.bukkit.Material.GLOWING_REDSTONE_ORE, 74, Collections.singletonList("GLOWING_REDSTONE_ORE")),//Unobtainable
    UNLIT_REDSTONE_TORCH("UNLIT_REDSTONE_TORCH", org.bukkit.Material.REDSTONE_TORCH_OFF, 75, Collections.singletonList("REDSTONE_TORCH_OFF")),//Unobtainable
    EAST_UNLIT_REDSTONE_TORCH("EAST_UNLIT_REDSTONE_TORCH", UNLIT_REDSTONE_TORCH, (short) 1),
    WEST_UNLIT_REDSTONE_TORCH("WEST_UNLIT_REDSTONE_TORCH", UNLIT_REDSTONE_TORCH, (short) 2),
    SOUTH_UNLIT_REDSTONE_TORCH("SOUTH_UNLIT_REDSTONE_TORCH", UNLIT_REDSTONE_TORCH, (short) 3),
    NORTH_UNLIT_REDSTONE_TORCH("NORTH_UNLIT_REDSTONE_TORCH", UNLIT_REDSTONE_TORCH, (short) 4),
    UP_UNLIT_REDSTONE_TORCH("UP_UNLIT_REDSTONE_TORCH", UNLIT_REDSTONE_TORCH, (short) 5),
    REDSTONE_TORCH("REDSTONE_TORCH", org.bukkit.Material.REDSTONE_TORCH_ON, "REDSTONE TORCHES", 76, Arrays.asList("LIT_REDSTONE_TORCH", "REDSTONE_TORCH_ON")),
    EAST_REDSTONE_TORCH("EAST_REDSTONE_TORCH", REDSTONE_TORCH, (short) 1),
    WEST_REDSTONE_TORCH("WEST_REDSTONE_TORCH", REDSTONE_TORCH, (short) 2),
    SOUTH_REDSTONE_TORCH("SOUTH_REDSTONE_TORCH", REDSTONE_TORCH, (short) 3),
    NORTH_REDSTONE_TORCH("NORTH_REDSTONE_TORCH", REDSTONE_TORCH, (short) 4),
    UP_REDSTONE_TORCH("UP_REDSTONE_TORCH", REDSTONE_TORCH, (short) 5),
    STONE_BUTTON("STONE_BUTTON", org.bukkit.Material.STONE_BUTTON, "BUTTONS", 77, "BUTTON", Collections.singletonList("BUTTON")),
    SNOW_LAYER("SNOW_LAYER", org.bukkit.Material.SNOW, "SNOW LAYERS", 78, Collections.singletonList("LAYER_OF_SNOW")),
    SNOW_LAYER_1_8("SNOW_LAYER_1_8", SNOW_LAYER, (short) 0),
    SNOW_LAYER_2_8("SNOW_LAYER_2_8", SNOW_LAYER, (short) 1),
    SNOW_LAYER_3_8("SNOW_LAYER_3_8", SNOW_LAYER, (short) 2),
    SNOW_LAYER_4_8("SNOW_LAYER_4_8", SNOW_LAYER, (short) 3),
    SNOW_LAYER_5_8("SNOW_LAYER_5_8", SNOW_LAYER, (short) 4),
    SNOW_LAYER_6_8("SNOW_LAYER_6_8", SNOW_LAYER, (short) 5),
    SNOW_LAYER_7_8("SNOW_LAYER_7_8", SNOW_LAYER, (short) 6),
    SNOW_LAYER_FULL("SNOW_LAYER_FULL", SNOW_LAYER, (short) 7),
    ICE("ICE", org.bukkit.Material.ICE, 79),
    SNOW("SNOW", org.bukkit.Material.SNOW_BLOCK, 80, Collections.singletonList("SNOW_BLOCK")),
    CACTUS("CACTUS", org.bukkit.Material.CACTUS, "CACTI", 81),
    CLAY("CLAY", org.bukkit.Material.CLAY, "CLAY BLOCKS", 82, "CLAY BLOCK", Collections.singletonList("CLAY_BLOCK")),
    REEDS_BLOCK("REEDS_BLOCK", org.bukkit.Material.SUGAR_CANE_BLOCK, 83, Collections.singletonList("SUGAR_CANE_BLOCK")),//Unobtainable
    JUKEBOX("JUKEBOX", org.bukkit.Material.JUKEBOX, 84),
    JUKEBOX_WITH_DISK("JUKEBOX_WITH_DISK", JUKEBOX, (short) 1),
    FENCE("FENCE", org.bukkit.Material.FENCE, "FENCES", 85),
    PUMPKIN("PUMPKIN", org.bukkit.Material.PUMPKIN, "PUMPKINS", 86),
    NETHERRACK("NETHERRACK", org.bukkit.Material.NETHERRACK, 87),
    SOUL_SAND("SOUL_SAND", org.bukkit.Material.SOUL_SAND, 88),
    GLOWSTONE("GLOWSTONE", org.bukkit.Material.GLOWSTONE, 89, Arrays.asList("GLOWSTONE_BLOCK", "BLOCK_OF_GLOWSTONE")),
    PORTAL("PORTAL", org.bukkit.Material.PORTAL, "PORTALS", 90),//Unobtainable
    LIT_PUMPKIN("LIT_PUMPKIN", org.bukkit.Material.JACK_O_LANTERN, "JACK O LANTERNS", 91, "JACK O LANTERN", Collections.singletonList("JACK_O_LANTERN")),
    CAKE_BLOCK("CAKE_BLOCK", org.bukkit.Material.CAKE_BLOCK, 92),//Unobtainable
    CAKE_BLOCK_FULL("CAKE_BLOCK_FULL", CAKE_BLOCK, (short) 0),
    CAKE_BLOCK_5_6("CAKE_BLOCK_5_6", CAKE_BLOCK, (short) 1),
    CAKE_BLOCK_4_6("CAKE_BLOCK_4_6", CAKE_BLOCK, (short) 2),
    CAKE_BLOCK_3_6("CAKE_BLOCK_3_6", CAKE_BLOCK, (short) 3),
    CAKE_BLOCK_2_6("CAKE_BLOCK_2_6", CAKE_BLOCK, (short) 4),
    CAKE_BLOCK_1_6("CAKE_BLOCK_1_6", CAKE_BLOCK, (short) 5),
    UNPOWERED_REPEATER("UNPOWERED_REPEATER", org.bukkit.Material.DIODE_BLOCK_OFF, 93, Collections.singletonList("DIODE_BLOCK_OFF")),//Unobtainable
    POWERED_REPEATER("POWERED_REPEATER", org.bukkit.Material.DIODE_BLOCK_ON, 94, Collections.singletonList("DIODE_BLOCK_ON")),//Unobtainable
    STAINED_GLASS("STAINED_GLASS", org.bukkit.Material.STAINED_GLASS, 95, Collections.singletonList("TINTED_GLASS")),
    WHITE_STAINED_GLASS("WHITE_STAINED_GLASS", STAINED_GLASS, (short) 0, Arrays.asList("WHITE_GLASS", "WHITE_TINTED_GLASS")),
    ORANGE_STAINED_GLASS("ORANGE_STAINED_GLASS", STAINED_GLASS, (short) 1, Arrays.asList("ORANGE_GLASS", "ORANGE_TINTED_GLASS")),
    MAGENTA_STAINED_GLASS("MAGENTA_STAINED_GLASS", STAINED_GLASS, (short) 2, Arrays.asList("MAGENTA_GLASS", "MAGENTA_TINTED_GLASS")),
    LIGHT_BLUE_STAINED_GLASS("LIGHT_BLUE_STAINED_GLASS", STAINED_GLASS, (short) 3, Arrays.asList("LIGHT_BLUE_GLASS", "LIGHT_BLUE_TINTED_GLASS")),
    YELLOW_STAINED_GLASS("YELLOW_STAINED_GLASS", STAINED_GLASS, (short) 4, Arrays.asList("YELLOW_GLASS", "YELLOW_TINTED_GLASS")),
    LIME_STAINED_GLASS("LIME_STAINED_GLASS", STAINED_GLASS, (short) 5, Arrays.asList("LIME_GLASS", "LIME_TINTED_GLASS")),
    PINK_STAINED_GLASS("PINK_STAINED_GLASS", STAINED_GLASS, (short) 6, Arrays.asList("PINK_GLASS", "PINK_TINTED_GLASS")),
    GRAY_STAINED_GLASS("GRAY_STAINED_GLASS", STAINED_GLASS, (short) 7, Arrays.asList("GRAY_GLASS", "GRAY_TINTED_GLASS")),
    LIGHT_GRAY_STAINED_GLASS("LIGHT_GRAY_STAINED_GLASS", STAINED_GLASS, (short) 8, Arrays.asList("LIGHT_GRAY_GLASS", "LIGHT_GRAY_TINTED_GLASS")),
    CYAN_STAINED_GLASS("CYAN_STAINED_GLASS", STAINED_GLASS, (short) 9, Arrays.asList("CYAN_GLASS", "CYAN_TINTED_GLASS")),
    PURPLE_STAINED_GLASS("PURPLE_STAINED_GLASS", STAINED_GLASS, (short) 10, Arrays.asList("PURPLE_GLASS", "PURPLE_TINTED_GLASS")),
    BLUE_STAINED_GLASS("BLUE_STAINED_GLASS", STAINED_GLASS, (short) 11, Arrays.asList("BLUE_GLASS", "BLUE_TINTED_GLASS")),
    BROWN_STAINED_GLASS("BROWN_STAINED_GLASS", STAINED_GLASS, (short) 12, Arrays.asList("BROWN_GLASS", "BROWN_TINTED_GLASS")),
    GREEN_STAINED_GLASS("GREEN_STAINED_GLASS", STAINED_GLASS, (short) 13, Arrays.asList("GREEN_GLASS", "GREEN_TINTED_GLASS")),
    RED_STAINED_GLASS("RED_STAINED_GLASS", STAINED_GLASS, (short) 14, Arrays.asList("RED_GLASS", "RED_TINTED_GLASS")),
    BLACK_STAINED_GLASS("BLACK_STAINED_GLASS", STAINED_GLASS, (short) 15, Arrays.asList("BLACK_GLASS", "BLACK_TINTED_GLASS")),
    TRAPDOOR("TRAPDOOR", org.bukkit.Material.TRAP_DOOR, "TRAP DOORS", 96, "TRAP DOOR"),
    MONSTER_EGG("MONSTER_EGG", org.bukkit.Material.MONSTER_EGGS, "MONSTER EGGS", 97, Collections.singletonList("MONSTER_EGGS")),
    STONE_MONSTER_EGG("STONE_MONSTER_EGG", "STONE MONSTER EGGS", MONSTER_EGG, (short) 0),
    COBBLESTONE_MONSTER_EGG("COBBLESTONE_MONSTER_EGG", "COBBLESTONE MONSTER EGGS", MONSTER_EGG, (short) 1, Collections.singletonList("COBBLE_MONSTER_EGG")),
    STONE_BRICK_MONSTER_EGG("STONE_BRICK_MONSTER_EGG", "STONE BRICK MONSTER EGGS", MONSTER_EGG, (short) 2, Collections.singletonList("SMOOTH_BRICK_MONSTER_EGG")),
    MOSSY_STONE_BRICK_MONSTER_EGG("MOSSY_STONE_BRICK_MONSTER_EGG", "MOSSY STONE BRICK MONSTER EGGS", MONSTER_EGG, (short) 3, Collections.singletonList("MOSSY_SMOOTH_BRICK_MONSTER_EGG")),
    CRACKED_STONE_BRICK_MONSTER_EGG("CRACKED_STONE_BRICK_MONSTER_EGG", "CRACKED STONE BRICK MONSTER EGGS", MONSTER_EGG, (short) 4, Collections.singletonList("CRACKED_SMOOTH_BRICK_MONSTER_EGG")),
    CHISELED_STONE_BRICK_MONSTER_EGG("CHISELED_STONE_BRICK_MONSTER_EGG", "CHISELED STONE BRICK MONSTER EGGS", MONSTER_EGG, (short) 5, Collections.singletonList("CHISELED_SMOOTH_BRICK_MONSTER_EGG")),
    STONEBRICK("STONEBRICK", org.bukkit.Material.SMOOTH_BRICK, "STONE BRICKS", 98, "STONE BRICK", Collections.singletonList("SMOOTH_BRICK")),
    MOSSY_STONE_BRICK("MOSSY_STONE_BRICK", "MOSSY STONE BRICKS", STONEBRICK, (short) 1, Collections.singletonList("MOSSY_SMOOTH_BRICK")),
    CRACKED_STONE_BRICK("CRACKED_STONE_BRICK", "CRACKED STONE BRICKS", STONEBRICK, (short) 2, Collections.singletonList("CRACKED_SMOOTH_BRICK")),
    CHISELED_STONE_BRICK("CHISELED_STONE_BRICK", "CHISELED STONE BRICKS", STONEBRICK, (short) 3, Collections.singletonList("CHISELED_SMOOTH_BRICK")),
    BROWN_MUSHROOM_BLOCK("BROWN_MUSHROOM_BLOCK", org.bukkit.Material.HUGE_MUSHROOM_1, "BROWN MUSHROOM BLOCKS", 99, Collections.singletonList("HUGE_MUSHROOM_1")),
    BROWN_MUSHROOM_BLOCK_PORES("BROWN_MUSHROOM_BLOCK_PORES", BROWN_MUSHROOM_BLOCK, (short) 0),
    BROWN_MUSHROOM_BLOCK_CAP_UNW("BROWN_MUSHROOM_BLOCK_CAP_UNW", BROWN_MUSHROOM_BLOCK, (short) 1),
    BROWN_MUSHROOM_BLOCK_CAP_UN("BROWN_MUSHROOM_BLOCK_CAP_UN", BROWN_MUSHROOM_BLOCK, (short) 2),
    BROWN_MUSHROOM_BLOCK_CAP_UNE("BROWN_MUSHROOM_BLOCK_CAP_UNE", BROWN_MUSHROOM_BLOCK, (short) 3),
    BROWN_MUSHROOM_BLOCK_CAP_UW("BROWN_MUSHROOM_BLOCK_CAP_UW", BROWN_MUSHROOM_BLOCK, (short) 4),
    BROWN_MUSHROOM_BLOCK_CAP_U("BROWN_MUSHROOM_BLOCK_CAP_U", BROWN_MUSHROOM_BLOCK, (short) 5),
    BROWN_MUSHROOM_BLOCK_CAP_UE("BROWN_MUSHROOM_BLOCK_CAP_UE", BROWN_MUSHROOM_BLOCK, (short) 6),
    BROWN_MUSHROOM_BLOCK_CAP_USW("BROWN_MUSHROOM_BLOCK_CAP_USW", BROWN_MUSHROOM_BLOCK, (short) 7),
    BROWN_MUSHROOM_BLOCK_CAP_US("BROWN_MUSHROOM_BLOCK_CAP_US", BROWN_MUSHROOM_BLOCK, (short) 8),
    BROWN_MUSHROOM_BLOCK_CAP_USE("BROWN_MUSHROOM_BLOCK_CAP_USE", BROWN_MUSHROOM_BLOCK, (short) 9),
    BROWN_MUSHROOM_BLOCK_PORES_UD("BROWN_MUSHROOM_BLOCK_PORES_UD", BROWN_MUSHROOM_BLOCK, (short) 10),
    BROWN_MUSHROOM_BLOCK_CAP("BROWN_MUSHROOM_BLOCK_CAP", BROWN_MUSHROOM_BLOCK, (short) 14),
    BROWN_MUSHROOM_BLOCK_STEMS("BROWN_MUSHROOM_BLOCK_STEMS", BROWN_MUSHROOM_BLOCK, (short) 15),
    RED_MUSHROOM_BLOCK("RED_MUSHROOM_BLOCK", org.bukkit.Material.HUGE_MUSHROOM_2, "RED MUSHROOM BLOCKS", 100, Collections.singletonList("HUGE_MUSHROOM_2")),
    RED_MUSHROOM_BLOCK_PORES("RED_MUSHROOM_BLOCK_PORES", RED_MUSHROOM_BLOCK, (short) 0),
    RED_MUSHROOM_BLOCK_CAP_UNW("RED_MUSHROOM_BLOCK_CAP_UNW", RED_MUSHROOM_BLOCK, (short) 1),
    RED_MUSHROOM_BLOCK_CAP_UN("RED_MUSHROOM_BLOCK_CAP_UN", RED_MUSHROOM_BLOCK, (short) 2),
    RED_MUSHROOM_BLOCK_CAP_UNE("RED_MUSHROOM_BLOCK_CAP_UNE", RED_MUSHROOM_BLOCK, (short) 3),
    RED_MUSHROOM_BLOCK_CAP_UW("RED_MUSHROOM_BLOCK_CAP_UW", RED_MUSHROOM_BLOCK, (short) 4),
    RED_MUSHROOM_BLOCK_CAP_U("RED_MUSHROOM_BLOCK_CAP_U", RED_MUSHROOM_BLOCK, (short) 5),
    RED_MUSHROOM_BLOCK_CAP_UE("RED_MUSHROOM_BLOCK_CAP_UE", RED_MUSHROOM_BLOCK, (short) 6),
    RED_MUSHROOM_BLOCK_CAP_USW("RED_MUSHROOM_BLOCK_CAP_USW", RED_MUSHROOM_BLOCK, (short) 7),
    RED_MUSHROOM_BLOCK_CAP_US("RED_MUSHROOM_BLOCK_CAP_US", RED_MUSHROOM_BLOCK, (short) 8),
    RED_MUSHROOM_BLOCK_CAP_USE("RED_MUSHROOM_BLOCK_CAP_USE", RED_MUSHROOM_BLOCK, (short) 9),
    RED_MUSHROOM_BLOCK_PORES_UD("RED_MUSHROOM_BLOCK_PORES_UD", RED_MUSHROOM_BLOCK, (short) 10),
    RED_MUSHROOM_BLOCK_CAP("RED_MUSHROOM_BLOCK_CAP", RED_MUSHROOM_BLOCK, (short) 14),
    RED_MUSHROOM_BLOCK_STEMS("RED_MUSHROOM_BLOCK_STEMS", RED_MUSHROOM_BLOCK, (short) 15),
    IRON_BARS("IRON_BARS", org.bukkit.Material.IRON_FENCE, "IRON BARS", 101, "IRON BAR", Collections.singletonList("IRON_FENCE")),
    GLASS_PANE("GLASS_PANE", org.bukkit.Material.THIN_GLASS, "GLASS PANES", 102, Collections.singletonList("THIN_GLASS")),
    MELON_BLOCK("MELON_BLOCK", org.bukkit.Material.MELON_BLOCK, "MELON BLOCKS", 103),
    PUMPKIN_STEM("PUMPKIN_STEM", org.bukkit.Material.PUMPKIN_STEM, "PUMPKIN STEMS", 104, Collections.singletonList("PUMPKIN_SEEDS_BLOCK")),//Unobtainable
    PUMPKIN_STEM_1_8("PUMPKIN_STEM_1_8", PUMPKIN_STEM, (short) 0),
    PUMPKIN_STEM_2_8("PUMPKIN_STEM_2_8", PUMPKIN_STEM, (short) 1),
    PUMPKIN_STEM_3_8("PUMPKIN_STEM_3_8", PUMPKIN_STEM, (short) 2),
    PUMPKIN_STEM_4_8("PUMPKIN_STEM_4_8", PUMPKIN_STEM, (short) 3),
    PUMPKIN_STEM_5_8("PUMPKIN_STEM_5_8", PUMPKIN_STEM, (short) 4),
    PUMPKIN_STEM_6_8("PUMPKIN_STEM_6_8", PUMPKIN_STEM, (short) 5),
    PUMPKIN_STEM_7_8("PUMPKIN_STEM_7_8", PUMPKIN_STEM, (short) 6),
    PUMPKIN_STEM_8_8("PUMPKIN_STEM_8_8", PUMPKIN_STEM, (short) 7),
    MELON_STEM("MELON_STEM", org.bukkit.Material.MELON_STEM, "MELON STEMS", 105, Collections.singletonList("MELON_SEEDS_BLOCK")),//Unobtainable
    MELON_STEM_1_8("MELON_STEM_1_8", MELON_STEM, (short) 0),
    MELON_STEM_2_8("MELON_STEM_2_8", MELON_STEM, (short) 1),
    MELON_STEM_3_8("MELON_STEM_3_8", MELON_STEM, (short) 2),
    MELON_STEM_4_8("MELON_STEM_4_8", MELON_STEM, (short) 3),
    MELON_STEM_5_8("MELON_STEM_5_8", MELON_STEM, (short) 4),
    MELON_STEM_6_8("MELON_STEM_6_8", MELON_STEM, (short) 5),
    MELON_STEM_7_8("MELON_STEM_7_8", MELON_STEM, (short) 6),
    MELON_STEM_8_8("MELON_STEM_8_8", MELON_STEM, (short) 7),
    VINE("VINE", org.bukkit.Material.VINE, "VINES", 106, Collections.singletonList("VINES")),
    FENCE_GATE("FENCE_GATE", org.bukkit.Material.FENCE_GATE, "FENCE GATES", 107),
    BRICK_STAIRS("BRICK_STAIRS", org.bukkit.Material.BRICK_STAIRS, "BRICK STAIRS", 108, "BRICK STAIR"),
    STONE_BRICK_STAIRS("STONE_BRICK_STAIRS", org.bukkit.Material.SMOOTH_STAIRS, "STONE BRICK STAIRS", 109, "STONE BRICK STAIR", Collections.singletonList("SMOOTH_STAIRS")),
    MYCELIUM("MYCELIUM", org.bukkit.Material.MYCEL, 110, Collections.singletonList("MYCEL")),
    WATERLILY("WATERLILY", org.bukkit.Material.WATER_LILY, "LILY PADS", 111, "LILY PAD", Collections.singletonList("LILY_PAD")),
    NETHER_BRICK_BLOCK("NETHER_BRICK_BLOCK", org.bukkit.Material.NETHER_BRICK, "NETHER BRICK BLOCKS", 112),
    NETHER_BRICK_FENCE("NETHER_BRICK_FENCE", org.bukkit.Material.NETHER_FENCE, "NETHER BRICK FENCES", 113, Collections.singletonList("NETHER_FENCE")),
    NETHER_BRICK_STAIRS("NETHER_BRICK_STAIRS", org.bukkit.Material.NETHER_BRICK_STAIRS, "NETHER BRICK STAIRS", 114, "NETHER BRICK STAIR"),
    NETHER_WART_STALK("NETHER_WART_STALK", org.bukkit.Material.NETHER_WARTS, 115, Collections.singletonList("NETHER_WARTS")),//Unobtainable
    NETHER_WART_STALK_1_4("NETHER_WART_STALK_1_4", NETHER_WART_STALK, (short) 0),
    NETHER_WART_STALK_2_4("NETHER_WART_STALK_2_4", NETHER_WART_STALK, (short) 1),
    NETHER_WART_STALK_3_4("NETHER_WART_STALK_3_4", NETHER_WART_STALK, (short) 2),
    NETHER_WART_STALK_4_4("NETHER_WART_STALK_4_4", NETHER_WART_STALK, (short) 3),
    ENCHANTING_TABLE("ENCHANTING_TABLE", org.bukkit.Material.ENCHANTMENT_TABLE, "ENCHANTMENT TABLES", 116, "ENCHANTMENT TABLE", Arrays.asList("ENCHANTMENT_TABLE", "ENCHANT_TABLE")),
    BREWING_STAND_BLOCK("BREWING_STAND_BLOCK", org.bukkit.Material.BREWING_STAND, 117),//Unobtainable
    CAULDRON_BLOCK("CAULDRON_BLOCK", org.bukkit.Material.CAULDRON, 118),//Unobtainable
    CAULDRON_BLOCK_EMPTY("CAULDRON_BLOCK_EMPTY", CAULDRON_BLOCK, (short) 0),
    CAULDRON_BLOCK_1_3("CAULDRON_BLOCK_1_3", CAULDRON_BLOCK, (short) 1),
    CAULDRON_BLOCK_2_3("CAULDRON_BLOCK_2_3", CAULDRON_BLOCK, (short) 2),
    CAULDRON_BLOCK_3_3("CAULDRON_BLOCK_3_3", CAULDRON_BLOCK, (short) 3),
    END_PORTAL("END_PORTAL", org.bukkit.Material.ENDER_PORTAL, "END PORTALS", 119, Collections.singletonList("ENDER_PORTAL")),//Unobtainable
    END_PORTAL_FRAME("END_PORTAL_FRAME", org.bukkit.Material.ENDER_PORTAL_FRAME, "END PORTAL FRAMES", 120, Collections.singletonList("ENDER_PORTAL_FRAME")),
    END_PORTAL_FRAME_EMPTY("END_PORTAL_FRAME_EMPTY", END_PORTAL_FRAME, (short) 0),
    END_PORTAL_FRAME_FULL("END_PORTAL_FRAME_FULL", END_PORTAL_FRAME, (short) 1),
    END_STONE("END_STONE", org.bukkit.Material.ENDER_STONE, 121, Collections.singletonList("ENDER_STONE")),
    DRAGON_EGG("DRAGON_EGG", org.bukkit.Material.DRAGON_EGG, "DRAGON EGGS", 122, Arrays.asList("ENDER_DRAGON_EGG", "END_DRAGON_EGG")),
    REDSTONE_LAMP("REDSTONE_LAMP", org.bukkit.Material.REDSTONE_LAMP_OFF, "REDSTONE LAMPS", 123, Arrays.asList("LAMP", "REDSTONE_LAMP_OFF", "LAMP_OFF")),
    LIT_REDSTONE_LAMP("LIT_REDSTONE_LAMP", org.bukkit.Material.REDSTONE_LAMP_ON, 124, Collections.singletonList("REDSTONE_LAMP_ON")),//Unobtainable
    DOUBLE_WOODEN_SLAB("DOUBLE_WOODEN_SLAB", org.bukkit.Material.WOOD_DOUBLE_STEP, 125, Collections.singletonList("WOOD_DOUBLE_STEP")),//Unobtainable
    DOUBLE_OAK_SLAB("DOUBLE_OAK_SLAB", "DOUBLE OAK SLABS", DOUBLE_WOODEN_SLAB, (short) 0, Collections.singletonList("DOUBLE_OAK_WOOD_SLAB")),
    DOUBLE_SPRUCE_SLAB("DOUBLE_SPRUCE_SLAB", "DOUBLE SPRUCE SLABS", DOUBLE_WOODEN_SLAB, (short) 1, Collections.singletonList("DOUBLE_SPRUCE_WOOD_SLAB")),
    DOUBLE_BIRCH_SLAB("DOUBLE_BIRCH_SLAB", "DOUBLE BIRCH SLABS", DOUBLE_WOODEN_SLAB, (short) 2, Collections.singletonList("DOUBLE_BIRCH_WOOD_SLAB")),
    DOUBLE_JUNGLE_SLAB("DOUBLE_JUNGLE_SLAB", "DOUBLE JUNGLE SLABS", DOUBLE_WOODEN_SLAB, (short) 3, Collections.singletonList("DOUBLE_JUNGLE_WOOD_SLAB")),
    DOUBLE_ACACIA_SLAB("DOUBLE_ACACIA_SLAB", "DOUBLE ACACIA SLABS", DOUBLE_WOODEN_SLAB, (short) 4, Collections.singletonList("DOUBLE_ACACIA_WOOD_SLAB")),
    DOUBLE_DARK_OAK_SLAB("DOUBLE_DARK_OAK_SLAB", "DOUBLE DARK OAK SLABS", DOUBLE_WOODEN_SLAB, (short) 5, Collections.singletonList("DOUBLE_DARK_OAK_WOOD_SLAB")),
    WOODEN_SLAB("WOODEN_SLAB", org.bukkit.Material.WOOD_STEP, "WOODEN_SLABS", 126, Arrays.asList("WOODEN_STEP", "WOOD_STEP", "WOOD_SLAB")),
    OAK_SLAB("OAK_SLAB", "OAK SLABS", WOODEN_SLAB, (short) 0, Arrays.asList("OAK_WOOD_SLAB", "OAK_STEP", "OAK_WOOD_STEP")),
    SPRUCE_SLAB("SPRUCE_SLAB", "SPRUCE SLABS", WOODEN_SLAB, (short) 1, Arrays.asList("SPRUCE_WOOD_SLAB", "SPRUCE_STEP", "SPRUCE_WOOD_STEP")),
    BIRCH_SLAB("BIRCH_SLAB", "BIRCH SLABS", WOODEN_SLAB, (short) 2, Arrays.asList("BIRCH_WOOD_SLAB", "BIRCH_STEP", "BIRCH_WOOD_STEP")),
    JUNGLE_SLAB("JUNGLE_SLAB", "JUNGLE SLABS", WOODEN_SLAB, (short) 3, Arrays.asList("JUNGLE_WOOD_SLAB", "JUNGLE_WOOD_STEP", "JUNGLE_STEP")),
    ACACIA_SLAB("ACACIA_SLAB", "ACACIA SLABS", WOODEN_SLAB, (short) 4, Arrays.asList("ACACIA_WOOD_SLAB", "ACACIA_STEP", "ACACIA_WOOD_STEP")),
    DARK_OAK_SLAB("DARK_OAK_SLAB", "DARK OAK SLABS", WOODEN_SLAB, (short) 5, Arrays.asList("DARK_OAK_WOOD_SLAB", "DARK_OAK_STEP", "DARK_OAK_WOOD_STEP")),
    UPPER_OAK_SLAB("UPPER_OAK_SLAB", "UPPER OAK SLABS", WOODEN_SLAB, (short) 8, Arrays.asList("UPPER_OAK_WOOD_SLAB", "UPPER_OAK_STEP", "UPPER_OAK_WOOD_STEP")),
    UPPER_SPRUCE_SLAB("UPPER_SPRUCE_SLAB", "UPPER SPRUCE SLABS", WOODEN_SLAB, (short) 9, Arrays.asList("UPPER_SPRUCE_WOOD_SLAB", "UPPER_SPRUCE_STEP", "UPPER_SPRUCE_WOOD_STEP")),
    UPPER_BIRCH_SLAB("UPPER_BIRCH_SLAB", "UPPER BIRCH SLABS", WOODEN_SLAB, (short) 10, Arrays.asList("UPPER_BIRCH_WOOD_SLAB", "UPPER_BIRCH_STEP", "UPPER_BIRCH_WOOD_STEP")),
    UPPER_JUNGLE_SLAB("UPPER_JUNGLE_SLAB", "UPPER JUNGLE SLABS", WOODEN_SLAB, (short) 11, Arrays.asList("UPPER_JUNGLE_WOOD_SLAB", "UPPER_JUNGLE_STEP", "UPPER_JUNGLE_WOOD_STEP")),
    UPPER_ACACIA_SLAB("UPPER_ACACIA_SLAB", "UPPER ACACIA SLABS", WOODEN_SLAB, (short) 12, Arrays.asList("UPPER_ACACIA_WOOD_SLAB", "UPPER_ACACIA_STEP", "UPPER_ACACIA_WOOD_STEP")),
    UPPER_DARK_OAK_SLAB("UPPER_DARK_OAK_SLAB", "UPPER DARK OAK SLABS", WOODEN_SLAB, (short) 13, Arrays.asList("UPPER_DARK_OAK_WOOD_SLAB", "DARK_OAK_WOOD_STEP", "DARK_OAK_WOOD_STEP")),
    COCOA_BLOCK("COCOA_BLOCK", org.bukkit.Material.COCOA, 127),//Unobtainable
    COCOA_BLOCK_SOUTH_1_3("COCOA_BLOCK_SOUTH_1_3", COCOA_BLOCK, (short) 0),
    COCOA_BLOCK_WEST_1_3("COCOA_BLOCK_WEST_1_3", COCOA_BLOCK, (short) 1),
    COCOA_BLOCK_NORTH_1_3("COCOA_BLOCK_NORTH_1_3", COCOA_BLOCK, (short) 2),
    COCOA_BLOCK_EAST_1_3("COCOA_BLOCK_EAST_1_3", COCOA_BLOCK, (short) 3),
    COCOA_BLOCK_SOUTH_2_3("COCOA_BLOCK_SOUTH_2_3", COCOA_BLOCK, (short) 4),
    COCOA_BLOCK_WEST_2_3("COCOA_BLOCK_WEST_2_3", COCOA_BLOCK, (short) 5),
    COCOA_BLOCK_NORTH_2_3("COCOA_BLOCK_NORTH_2_3", COCOA_BLOCK, (short) 6),
    COCOA_BLOCK_EAST_2_3("COCOA_BLOCK_EAST_2_3", COCOA_BLOCK, (short) 7),
    COCOA_BLOCK_SOUTH_3_3("COCOA_BLOCK_SOUTH_3_3", COCOA_BLOCK, (short) 8),
    COCOA_BLOCK_WEST_3_3("COCOA_BLOCK_WEST_3_3", COCOA_BLOCK, (short) 9),
    COCOA_BLOCK_NORTH_3_3("COCOA_BLOCK_NORTH_3_3", COCOA_BLOCK, (short) 10),
    COCOA_BLOCK_EAST_3_3("COCOA_BLOCK_EAST_3_3", COCOA_BLOCK, (short) 11),
    SANDSTONE_STAIRS("SANDSTONE_STAIRS", org.bukkit.Material.SANDSTONE_STAIRS, "SANDSTONE STAIRS", 128, "SANDSTONE STAIR"),
    EMERALD_ORE("EMERALD_ORE", org.bukkit.Material.EMERALD_ORE, 129),
    ENDER_CHEST("ENDER_CHEST", org.bukkit.Material.ENDER_CHEST, "ENDER CHESTS", 130, Collections.singletonList("ENDER_CRATE")),
    TRIPWIRE_HOOK("TRIPWIRE_HOOK", org.bukkit.Material.TRIPWIRE_HOOK, "TRIPWIRE HOOKS", 131),
    TRIPWIRE("TRIPWIRE", org.bukkit.Material.TRIPWIRE, 132),//Unobtainable
    EMERALD_BLOCK("EMERALD_BLOCK", org.bukkit.Material.EMERALD_BLOCK, "BLOCKS OF EMERALD", 133, "BLOCK OF EMERALD", Collections.singletonList("BLOCK_OF_EMERALD")),
    SPRUCE_STAIRS("SPRUCE_STAIRS", org.bukkit.Material.SPRUCE_WOOD_STAIRS, "SPRUCE STAIRS", 134, "SPRUCE STAIR", Collections.singletonList("SPRUCE_WOOD_STAIRS")),
    BIRCH_STAIRS("BIRCH_STAIRS", org.bukkit.Material.BIRCH_WOOD_STAIRS, "BIRCH STAIRS", 135, "BIRCH STAIR", Collections.singletonList("BIRCH_WOOD_STAIRS")),
    JUNGLE_STAIRS("JUNGLE_STAIRS", org.bukkit.Material.JUNGLE_WOOD_STAIRS, "JUNGLE STAIRS", 136, "JUNGLE STAIR", Collections.singletonList("JUNGLE_WOOD_STAIRS")),
    COMMAND_BLOCK("COMMAND_BLOCK", org.bukkit.Material.COMMAND, 137, Collections.singletonList("COMMAND")),
    BEACON("BEACON", org.bukkit.Material.BEACON, "BEACONS", 138),
    COBBLESTONE_WALL("COBBLESTONE_WALL", org.bukkit.Material.COBBLE_WALL, "COBBLESTONE WALLS", 139, Collections.singletonList("COBBLE_WALL")),
    MOSSY_COBBLESTONE_WALL("MOSSY_COBBLESTONE_WALL", "MOSSY COBBLESTONE WALLS", COBBLESTONE_WALL, (short) 1, Collections.singletonList("MOSSY_COBBLE_WALL")),
    FLOWER_POT_BLOCK("FLOWER_POT_BLOCK", org.bukkit.Material.FLOWER_POT, 140),
    CARROT_BLOCK("CARROT_BLOCK", org.bukkit.Material.CARROT, 141),
    CARROT_BLOCK_1_8("CARROT_BLOCK_1_8", CARROT_BLOCK, (short) 0),
    CARROT_BLOCK_2_8("CARROT_BLOCK_2_8", CARROT_BLOCK, (short) 1),
    CARROT_BLOCK_3_8("CARROT_BLOCK_3_8", CARROT_BLOCK, (short) 2),
    CARROT_BLOCK_4_8("CARROT_BLOCK_4_8", CARROT_BLOCK, (short) 3),
    CARROT_BLOCK_5_8("CARROT_BLOCK_5_8", CARROT_BLOCK, (short) 4),
    CARROT_BLOCK_6_8("CARROT_BLOCK_6_8", CARROT_BLOCK, (short) 5),
    CARROT_BLOCK_7_8("CARROT_BLOCK_7_8", CARROT_BLOCK, (short) 6),
    CARROT_BLOCK_8_8("CARROT_BLOCK_8_8", CARROT_BLOCK, (short) 7),
    POTATO_BLOCK("POTATO_BLOCK", org.bukkit.Material.POTATO, 142),
    POTATO_BLOCK_1_8("POTATO_BLOCK_1_8", POTATO_BLOCK, (short) 0),
    POTATO_BLOCK_2_8("POTATO_BLOCK_2_8", POTATO_BLOCK, (short) 1),
    POTATO_BLOCK_3_8("POTATO_BLOCK_3_8", POTATO_BLOCK, (short) 2),
    POTATO_BLOCK_4_8("POTATO_BLOCK_4_8", POTATO_BLOCK, (short) 3),
    POTATO_BLOCK_5_8("POTATO_BLOCK_5_8", POTATO_BLOCK, (short) 4),
    POTATO_BLOCK_6_8("POTATO_BLOCK_6_8", POTATO_BLOCK, (short) 5),
    POTATO_BLOCK_7_8("POTATO_BLOCK_7_8", POTATO_BLOCK, (short) 6),
    POTATO_BLOCK_8_8("POTATO_BLOCK_8_8", POTATO_BLOCK, (short) 7),
    WOODEN_BUTTON("WOODEN_BUTTON", org.bukkit.Material.WOOD_BUTTON, 143, Collections.singletonList("WOOD_BUTTON")),
    SKULL_BLOCK("SKULL_BLOCK", org.bukkit.Material.SKULL, 144),//Unobtainable
    SKULL_BLOCK_FLOOR("SKULL_BLOCK_FLOOR", SKULL_BLOCK, (short) 1),
    SKULL_BLOCK_NORTH("SKULL_BLOCK_NORTH", SKULL_BLOCK, (short) 2),
    SKULL_BLOCK_SOUTH("SKULL_BLOCK_SOUTH", SKULL_BLOCK, (short) 3),
    SKULL_BLOCK_EAST("SKULL_BLOCK_EAST", SKULL_BLOCK, (short) 4),
    SKULL_BLOCK_WEST("SKULL_BLOCK_WEST", SKULL_BLOCK, (short) 5),
    ANVIL("ANVIL", org.bukkit.Material.ANVIL, "ANVILS", 145),
    SLIGHTLY_DAMAGED_ANVIL("SLIGHTLY_DAMAGED_ANVIL", "SLIGHTLY DAMAGED ANVILS", ANVIL, (short) 1),
    VERY_DAMAGED_ANVIL("VERY_DAMAGED_ANVIL", "VERY DAMAGED ANVILS", ANVIL, (short) 2),
    TRAPPED_CHEST("TRAPPED_CHEST", org.bukkit.Material.TRAPPED_CHEST, "TRAPPED CHESTS", 146, Collections.singletonList("REDSTONE_CHEST")),
    LIGHT_WEIGHTED_PRESSURE_PLATE("LIGHT_WEIGHTED_PRESSURE_PLATE", org.bukkit.Material.GOLD_PLATE, "WEIGHTED LIGHT PRESSURE PLATES", 147, "WEIGHTED LIGHT PRESSURE PLATE", Arrays.asList("GOLD_PLATE", "GOLD_PRESSURE_PLATE", "LIGHT_PRESSURE_PLATE", "GOLDEN_PLATE", "GOLDEN_PRESSURE_PLATE", "WEIGHTED_LIGHT_PRESSURE_PLATE")),
    HEAVY_WEIGHTED_PRESSURE_PLATE("HEAVY_WEIGHTED_PRESSURE_PLATE", org.bukkit.Material.IRON_PLATE, "WEIGHTED HEAVY PRESSURE PLATES", 148, "WEIGHTED HEAVY PRESSURE PLATE", Arrays.asList("HEAVY_PRESSURE_PLATE", "IRON_PLATE", "IRON_PRESSURE_PLATE", "WEIGHTED_HEAVY_PRESSURE_PLATE")),
    UNPOWERED_COMPARATOR("UNPOWERED_COMPARATOR", org.bukkit.Material.REDSTONE_COMPARATOR_OFF, 149, Collections.singletonList("REDSTONE_COMPARATOR_OFF")),//Unobtainable
    POWERED_COMPARATOR("POWERED_COMPARATOR", org.bukkit.Material.REDSTONE_COMPARATOR_ON, 150, Collections.singletonList("REDSTONE_COMPARATOR_ON")),//Unobtainable
    DAYLIGHT_DETECTOR("DAYLIGHT_DETECTOR", org.bukkit.Material.DAYLIGHT_DETECTOR, "DAYLIGHT DETECTORS", 151),
    REDSTONE_BLOCK("REDSTONE_BLOCK", org.bukkit.Material.REDSTONE_BLOCK, "REDSTONE BLOCKS", 152, Collections.singletonList("BLOCK_OF_REDSTONE")),
    QUARTZ_ORE("QUARTZ_ORE", org.bukkit.Material.QUARTZ_ORE, 153, Collections.singletonList("NETHER_QUARTZ_ORE")),
    HOPPER("HOPPER", org.bukkit.Material.HOPPER, "HOPPERS", 154),
    HOPPER_BLOCK("HOPPER_BLOCK", org.bukkit.Material.HOPPER, "HOPPER BLOCKS", 154),
    HOPPER_DOWN("HOPPER_DOWN", HOPPER_BLOCK, (short) 0),
    HOPPER_NORTH("HOPPER_NORTH", HOPPER_BLOCK, (short) 2),
    HOPPER_SOUTH("HOPPER_SOUTH", HOPPER_BLOCK, (short) 3),
    HOPPER_WEST("HOPPER_WEST", HOPPER_BLOCK, (short) 4),
    HOPPER_EAST("HOPPER_EAST", HOPPER_BLOCK, (short) 5),
    QUARTZ_BLOCK("QUARTZ_BLOCK", org.bukkit.Material.QUARTZ_BLOCK, "QUARTZ BLOCKS", 155, Collections.singletonList("NETHER_QUARTZ_BLOCK")),
    BLOCK_OF_QUARTZ("BLOCK_OF_QUARTZ", "BLOCKS OF QUARTZ", QUARTZ_BLOCK, (short) 0, Collections.singletonList("BLOCK_OF_NETHER_QUARTZ")),
    CHISELED_QUARTZ_BLOCK("CHISELED_QUARTZ_BLOCK", "CHISELED QUARTZ BLOCKS", QUARTZ_BLOCK, (short) 1, Collections.singletonList("CHISELED_NETHER_QUARTZ_BLOCK")),
    PILLAR_QUARTZ_BLOCK_UP("PILLAR_QUARTZ_BLOCK_UP", "PILLAR QUARTZ BLOCKS", QUARTZ_BLOCK, (short) 2, "PILLAR QUARTZ BLOCK", Arrays.asList("PILLAR_QUARTZ_BLOCK", "PILLAR_NETHER_QUARTZ_BLOCK")),
    PILLAR_QUARTZ_BLOCK_NORTH("PILLAR_QUARTZ_BLOCK_NORTH", QUARTZ_BLOCK, (short) 3),
    PILLAR_QUARTZ_BLOCK_EAST("PILLAR_QUARTZ_BLOCK_EAST", QUARTZ_BLOCK, (short) 4),
    QUARTZ_STAIRS("QUARTZ_STAIRS", org.bukkit.Material.QUARTZ_STAIRS, "QUARTZ STAIRS", 156, "QUARTZ STAIR", Collections.singletonList("NETHER_QUARTZ_STAIRS")),
    ACTIVATOR_RAIL("ACTIVATOR_RAIL", org.bukkit.Material.ACTIVATOR_RAIL, "ACTIVATOR RAILS", 157),
    DROPPER("DROPPER", org.bukkit.Material.DROPPER, "DROPPERS", 158),
    STAINED_HARDENED_CLAY("STAINED_HARDENED_CLAY", org.bukkit.Material.STAINED_CLAY, 159, Arrays.asList("STAINED_HARD_CLAY", "STAINED_CLAY", "STAINED_TERRACOTTA")),
    WHITE_STAINED_CLAY("WHITE_STAINED_CLAY", STAINED_HARDENED_CLAY, (short) 0, "WHITE TERRACOTTA", Arrays.asList("WHITE_CLAY", "WHITE_HARD_CLAY", "WHITE_STAINED_TERRACOTTA", "WHITE_TERRACOTTA")),
    ORANGE_STAINED_CLAY("ORANGE_STAINED_CLAY", STAINED_HARDENED_CLAY, (short) 1, "ORANGE TERRACOTTA", Arrays.asList("ORANGE_CLAY", "ORANGE_HARD_CLAY", "ORANGE_STAINED_TERRACOTTA", "ORANGE_TERRACOTTA")),
    MAGENTA_STAINED_CLAY("MAGENTA_STAINED_CLAY", STAINED_HARDENED_CLAY, (short) 2, "MAGENTA TERRACOTTA", Arrays.asList("MAGENTA_CLAY", "MAGENTA_HARD_CLAY", "MAGENTA_STAINED_TERRACOTTA", "MAGENTA_TERRACOTTA")),
    LIGHT_BLUE_STAINED_CLAY("LIGHT_BLUE_STAINED_CLAY", STAINED_HARDENED_CLAY, (short) 3, "LIGHT BLUE TERRACOTTA", Arrays.asList("LIGHT_BLUE_CLAY", "LIGHT_BLUE_HARD_CLAY", "LIGHT_BLUE_STAINED_TERRACOTTA", "LIGHT_BLUE_TERRACOTTA")),
    YELLOW_STAINED_CLAY("YELLOW_STAINED_CLAY", STAINED_HARDENED_CLAY, (short) 4, "YELLOW TERRACOTTA", Arrays.asList("YELLOW_CLAY", "YELLOW_HARD_CLAY", "YELLOW_STAINED_TERRACOTTA", "YELLOW_TERRACOTTA")),
    LIME_STAINED_CLAY("LIME_STAINED_CLAY", STAINED_HARDENED_CLAY, (short) 5, "LIME TERRACOTTA", Arrays.asList("LIME_CLAY", "LIME_HARD_CLAY", "LIME_STAINED_TERRACOTTA", "LIME_TERRACOTTA")),
    PINK_STAINED_CLAY("PINK_STAINED_CLAY", STAINED_HARDENED_CLAY, (short) 6, "PINK TERRACOTTA", Arrays.asList("PINK_CLAY", "PINK_HARD_CLAY", "PINK_STAINED_TERRACOTTA", "PINK_TERRACOTTA")),
    GRAY_STAINED_CLAY("GRAY_STAINED_CLAY", STAINED_HARDENED_CLAY, (short) 7, "GRAY TERRACOTTA", Arrays.asList("GRAY_CLAY", "GRAY_HARD_CLAY", "GRAY_STAINED_TERRACOTTA", "GRAY_TERRACOTTA")),
    LIGHT_GRAY_STAINED_CLAY("LIGHT_GRAY_STAINED_CLAY", STAINED_HARDENED_CLAY, (short) 8, "LIGHT GRAY TERRACOTTA", Arrays.asList("LIGHT_GRAY_CLAY", "LIGHT_GRAY_HARD_CLAY", "LIGHT_GRAY_STAINED_TERRACOTTA", "LIGHT_GRAY_TERRACOTTA")),
    CYAN_STAINED_CLAY("CYAN_STAINED_CLAY", STAINED_HARDENED_CLAY, (short) 9, "CYAN TERRACOTTA", Arrays.asList("CYAN_CLAY", "CYAN_HARD_CLAY", "CYAN_STAINED_TERRACOTTA", "CYAN_TERRACOTTA")),
    PURPLE_STAINED_CLAY("PURPLE_STAINED_CLAY", STAINED_HARDENED_CLAY, (short) 10, "PURPLE TERRACOTTA", Arrays.asList("PURPLE_CLAY", "PURPLE_HARD_CLAY", "PURPLE_STAINED_TERRACOTTA", "PURPLE_TERRACOTTA")),
    BLUE_STAINED_CLAY("BLUE_STAINED_CLAY", STAINED_HARDENED_CLAY, (short) 11, "BLUE TERRACOTTA", Arrays.asList("BLUE_CLAY", "BLUE_HARD_CLAY", "BLUE_STAINED_TERRACOTTA", "BLUE_TERRACOTTA")),
    BROWN_STAINED_CLAY("BROWN_STAINED_CLAY", STAINED_HARDENED_CLAY, (short) 12, "BROWN TERRACOTTA", Arrays.asList("BROWN_CLAY", "BROWN_HARD_CLAY", "BROWN_STAINED_TERRACOTTA", "BROWN_TERRACOTTA")),
    GREEN_STAINED_CLAY("GREEN_STAINED_CLAY", STAINED_HARDENED_CLAY, (short) 13, "GREEN TERRACOTTA", Arrays.asList("GREEN_CLAY", "GREEN_HARD_CLAY", "GREEN_STAINED_TERRACOTTA", "GREEN_TERRACOTTA")),
    RED_STAINED_CLAY("RED_STAINED_CLAY", STAINED_HARDENED_CLAY, (short) 14, "RED TERRACOTTA", Arrays.asList("RED_CLAY", "RED_HARD_CLAY", "RED_STAINED_TERRACOTTA", "RED_TERRACOTTA")),
    BLACK_STAINED_CLAY("BLACK_STAINED_CLAY", STAINED_HARDENED_CLAY, (short) 15, "BLACK TERRACOTTA", Arrays.asList("BLACK_CLAY", "BLACK_HARD_CLAY", "BLACK_STAINED_TERRACOTTA", "BLACK_TERRACOTTA")),
    STAINED_GLASS_PANE("STAINED_GLASS_PANE", org.bukkit.Material.STAINED_GLASS_PANE, 160, Arrays.asList("TINTED_GLASS_PANE", "TINTED_THIN_GLASS", "STAINED_THIN_GLASS")),
    WHITE_STAINED_GLASS_PANE("WHITE_STAINED_GLASS_PANE", STAINED_GLASS_PANE, (short) 0, Arrays.asList("WHITE_PANE", "WHITE_STAINED_PLANE", "WHITE_TINTED_PANE", "WHITE_TINTED_GLASS_PANE")),
    ORANGE_STAINED_GLASS_PANE("ORANGE_STAINED_GLASS_PANE", STAINED_GLASS_PANE, (short) 1, Arrays.asList("ORANGE_PANE", "ORANGE_STAINED_PLANE", "ORANGE_TINTED_PANE", "ORANGE_TINTED_GLASS_PANE")),
    MAGENTA_STAINED_GLASS_PANE("MAGENTA_STAINED_GLASS_PANE", STAINED_GLASS_PANE, (short) 2, Arrays.asList("MAGENTA_PANE", "MAGENTA_STAINED_PLANE", "MAGENTA_TINTED_PANE", "MAGENTA_TINTED_GLASS_PANE")),
    LIGHT_BLUE_STAINED_GLASS_PANE("LIGHT_BLUE_STAINED_GLASS_PANE", STAINED_GLASS_PANE, (short) 3, Arrays.asList("LIGHT_BLUE_PANE", "LIGHT_BLUE_STAINED_PLANE", "LIGHT_BLUE_TINTED_PANE", "LIGHT_BLUE_TINTED_GLASS_PANE")),
    YELLOW_STAINED_GLASS_PANE("YELLOW_STAINED_GLASS_PANE", STAINED_GLASS_PANE, (short) 4, Arrays.asList("YELLOW_PAIN", "YELLOW_STAINED_PLANE", "YELLOW_TINTED_PANE", "YELLOW_TINTED_GLASS_PANE")),
    LIME_STAINED_GLASS_PANE("LIME_STAINED_GLASS_PANE", STAINED_GLASS_PANE, (short) 5, Arrays.asList("LIME_PANE", "LIME_STAINED_PLANE", "LIME_TINTED_PANE", "LIME_TINTED_GLASS_PANE")),
    PINK_STAINED_GLASS_PANE("PINK_STAINED_GLASS_PANE", STAINED_GLASS_PANE, (short) 6, Arrays.asList("PINK_PANE", "PINK_STAINED_PLANE", "PINK_TINTED_PANE", "PINK_TINTED_GLASS_PANE")),
    GRAY_STAINED_GLASS_PANE("GRAY_STAINED_GLASS_PANE", STAINED_GLASS_PANE, (short) 7, Arrays.asList("GRAY_PANE", "GRAY_STAINED_PLANE", "GRAY_TINTED_PANE", "GRAY_TINTED_GLASS_PANE")),
    LIGHT_GRAY_STAINED_GLASS_PANE("LIGHT_GRAY_STAINED_GLASS_PANE", STAINED_GLASS_PANE, (short) 8, Arrays.asList("LIGHT_GREY_PANE", "LIGHT_GRAY_STAINED_PLANE", "LIGHT_GRAY_TINTED_PANE", "LIGHT_GRAY_TINTED_GLASS_PANE")),
    CYAN_STAINED_GLASS_PANE("CYAN_STAINED_GLASS_PANE", STAINED_GLASS_PANE, (short) 9, Arrays.asList("CYAN_PANE", "CYAN_STAINED_PLANE", "CYAN_TINTED_PANE", "CYAN_TINTED_GLASS_PANE")),
    PURPLE_STAINED_GLASS_PANE("PURPLE_STAINED_GLASS_PANE", STAINED_GLASS_PANE, (short) 10, Arrays.asList("PURPLE_PANE", "PURPLE_STAINED_PLANE", "PURPLE_TINTED_PANE", "PURPLE_TINTED_GLASS_PANE")),
    BLUE_STAINED_GLASS_PANE("BLUE_STAINED_GLASS_PANE", STAINED_GLASS_PANE, (short) 11, Arrays.asList("BLUE_PANE", "BLUE_STAINED_PLANE", "BLUE_TINTED_PANE", "BLUE_TINTED_GLASS_PANE")),
    BROWN_STAINED_GLASS_PANE("BROWN_STAINED_GLASS_PANE", STAINED_GLASS_PANE, (short) 12, Arrays.asList("BROWN_PANE", "BROWN_STAINED_PLANE", "BROWN_TINTED_PANE", "BROWN_TINTED_GLASS_PANE")),
    GREEN_STAINED_GLASS_PANE("GREEN_STAINED_GLASS_PANE", STAINED_GLASS_PANE, (short) 13, Arrays.asList("GREEN_PANE", "GREEN_STAINED_PLANE", "GREEN_TINTED_PANE", "GREEN_TINTED_GLASS_PANE")),
    RED_STAINED_GLASS_PANE("RED_STAINED_GLASS_PANE", STAINED_GLASS_PANE, (short) 14, Arrays.asList("RED_PANE", "RED_STAINED_PLANE", "RED_TINTED_PANE", "RED_TINTED_GLASS_PANE")),
    BLACK_STAINED_GLASS_PANE("BLACK_STAINED_GLASS_PANE", STAINED_GLASS_PANE, (short) 15, Arrays.asList("BLACK_PANE", "BLACK_STAINED_PLANE", "BLACK_TINTED_PANE", "BLACK_TINTED_GLASS_PANE")),
    LEAVES2("LEAVES2", org.bukkit.Material.LEAVES_2, 161),
    ACACIA_LEAVES("ACACIA_LEAVES", LEAVES2, (short) 0),
    DARK_OAK_LEAVES("DARK_OAK_LEAVES", LEAVES2, (short) 1),
    ACACIA_LEAVES_NO_DECAY("ACACIA_LEAVES_NO_DECAY", LEAVES2, (short) 4),
    DARK_OAK_LEAVES_NO_DECAY("DARK_OAK_LEAVES_NO_DECAY", LEAVES2, (short) 5),
    ACACIA_LEAVES_DECAY("ACACIA_LEAVES_DECAY", LEAVES2, (short) 8),
    DARK_OAK_LEAVES_DECAY("DARK_OAK_LEAVES_DECAY", LEAVES2, (short) 9),
    LOG2("LOG2", org.bukkit.Material.LOG_2, 162),
    ACACIA_LOG_UP("ACACIA_LOG_UP", "ACACIA LOGS", LOG2, (short) 0, "ACACIA LOG", Arrays.asList("ACACIA_LOG", "ACACIA_BARK")),
    DARK_OAK_LOG_UP("DARK_OAK_LOG_UP", "DARK OAK LOGS", LOG2, (short) 1, "DARK OAK LOG", Arrays.asList("DARK_OAK_LOG", "DARK_OAK_BARK")),
    ACACIA_LOG_EAST("ACACIA_LOG_EAST", LOG2, (short) 4),
    DARK_OAK_LOG_EAST("DARK_OAK_LOG_EAST", LOG2, (short) 5),
    ACACIA_LOG_NORTH("ACACIA_LOG_NORTH", LOG2, (short) 8),
    DARK_OAK_LOG_NORTH("DARK_OAK_LOG_NORTH", LOG2, (short) 9),
    ACACIA_LOG_BARK("ACACIA_LOG_BARK", LOG2, (short) 12),
    DARK_OAK_LOG_BARK("DARK_OAK_LOG_BARK", LOG2, (short) 13),
    ACACIA_STAIRS("ACACIA_STAIRS", org.bukkit.Material.ACACIA_STAIRS, "ACACIA STAIRS", 163, "ACACIA STAIR"),
    DARK_OAK_STAIRS("DARK_OAK_STAIRS", org.bukkit.Material.DARK_OAK_STAIRS, "DARK OAK STAIRS", 164, "DARK OAK STAIR"),
    SLIME_BLOCK("SLIME_BLOCK", org.bukkit.Material.SLIME_BLOCK, "SLIME BLOCKS", 165, Collections.singletonList("SLIME_BLOCK")),
    BARRIER("BARRIER", org.bukkit.Material.BARRIER, "BARRIERS", 165),
    IRON_TRAPDOOR("IRON_TRAPDOOR", org.bukkit.Material.IRON_TRAPDOOR, "IRON TRAPDOORS", 167),
    PRISMARINE("PRISMARINE", org.bukkit.Material.PRISMARINE, 168),
    PRISMARINE_BRICKS("PRISMARINE_BRICKS", "PRISMARINE BRICKS", PRISMARINE, (short) 1, "PRISMARINE BRICK"),
    DARK_PRISMARINE("DARK_PRISMARINE", PRISMARINE, (short) 2),
    SEA_LANTERN("SEA_LANTERN", org.bukkit.Material.SEA_LANTERN, "SEA LANTERNS", 169, Arrays.asList("SEA_LAMP", "SEA_LIGHT")),
    HAY_BLOCK("HAY_BLOCK", org.bukkit.Material.HAY_BLOCK, "HAY BALES", 170, "HAY BALE", Arrays.asList("HAY_BALE", "HAY")),
    HAY_BLOCK_UP("HAY_BLOCK_UP", HAY_BLOCK, (short) 0),
    HAY_BLOCK_EAST("HAY_BLOCK_EAST", HAY_BLOCK, (short) 4),
    HAY_BLOCK_NORTH("HAY_BLOCK_NORTH", HAY_BLOCK, (short) 8),
    CARPET("CARPET", org.bukkit.Material.CARPET, "CARPETS", 171),
    WHITE_CARPET("WHITE_CARPET", "WHITE CARPETS", CARPET, (short) 0),
    ORANGE_CARPET("ORANGE_CARPET", "ORANGE CARPETS", CARPET, (short) 1),
    MAGENTA_CARPET("MAGENTA_CARPET", "MAGENTA CARPETS", CARPET, (short) 2),
    LIGHT_BLUE_CARPET("LIGHT_BLUE_CARPET", "LIGHT BLUE CARPETS", CARPET, (short) 3),
    YELLOW_CARPET("YELLOW_CARPET", "YELLOW CARPETS", CARPET, (short) 4),
    LIME_CARPET("LIME_CARPET", "LIME CARPETS", CARPET, (short) 5),
    PINK_CARPET("PINK_CARPET", "PINK CARPETS", CARPET, (short) 6),
    GRAY_CARPET("GRAY_CARPET", "GRAY CARPETS", CARPET, (short) 7),
    LIGHT_GRAY_CARPET("LIGHT_GRAY_CARPET", "LIGHT GRAY CARPETS", CARPET, (short) 8),
    CYAN_CARPET("CYAN_CARPET", "CYAN CARPETS", CARPET, (short) 9),
    PURPLE_CARPET("PURPLE_CARPET", "PURPLE CARPETS", CARPET, (short) 10),
    BLUE_CARPET("BLUE_CARPET", "BLUE CARPETS", CARPET, (short) 11),
    BROWN_CARPET("BROWN_CARPET", "BROWN CARPETS", CARPET, (short) 12),
    GREEN_CARPET("GREEN_CARPET", "GREEN CARPETS", CARPET, (short) 13),
    RED_CARPET("RED_CARPET", "RED CARPETS", CARPET, (short) 14),
    BLACK_CARPET("BLACK_CARPET", "BLACK CARPETS", CARPET, (short) 15),
    HARDENED_CLAY("HARDENED_CLAY", org.bukkit.Material.HARD_CLAY, 172, "TERRACOTTA", Arrays.asList("HARD_CLAY", "TERRACOTTA")),
    COAL_BLOCK("COAL_BLOCK", org.bukkit.Material.COAL_BLOCK, "BLOCKS OF COAL", 173, "BLOCK OF COAL", Collections.singletonList("BLOCK_OF_COAL")),
    PACKED_ICE("PACKED_ICE", org.bukkit.Material.PACKED_ICE, 174),
    DOUBLE_PLANT("DOUBLE_PLANT", org.bukkit.Material.DOUBLE_PLANT, 175),
    SUNFLOWER("SUNFLOWER", "SUNFLOWERS", DOUBLE_PLANT, (short) 0),
    LILAC("LILAC", "LILACS", DOUBLE_PLANT, (short) 1),
    DOUBLE_TALLGRASS("DOUBLE_TALLGRASS", DOUBLE_PLANT, (short) 2),
    LARGE_FERN("LARGE_FERN", "LARGE FERNS", DOUBLE_PLANT, (short) 3),
    ROSE_BUSH("ROSE_BUSH", "ROSE BUSHES", DOUBLE_PLANT, (short) 4),
    PEONY("PEONY", "PEONIES", DOUBLE_PLANT, (short) 5),
    STANDING_BANNER("STANDING_BANNER", org.bukkit.Material.STANDING_BANNER, 176),//Unobtainable
    BLACK_STANDING_BANNER("BLACK_STANDING_BANNER", STANDING_BANNER, (short) 0),
    RED_STANDING_BANNER("RED_STANDING_BANNER", STANDING_BANNER, (short) 1),
    GREEN_STANDING_BANNER("GREEN_STANDING_BANNER", STANDING_BANNER, (short) 2),
    BROWN_STANDING_BANNER("BROWN_STANDING_BANNER", STANDING_BANNER, (short) 3),
    BLUE_STANDING_BANNER("BLUE_STANDING_BANNER", STANDING_BANNER, (short) 4),
    PURPLE_STANDING_BANNER("PURPLE_STANDING_BANNER", STANDING_BANNER, (short) 5),
    CYAN_STANDING_BANNER("CYAN_STANDING_BANNER", STANDING_BANNER, (short) 6),
    LIGHT_GRAY_STANDING_BANNER("LIGHT_GRAY_STANDING_BANNER", STANDING_BANNER, (short) 7),
    GRAY_STANDING_BANNER("GRAY_STANDING_BANNER", STANDING_BANNER, (short) 8),
    PINK_STANDING_BANNER("PINK_STANDING_BANNER", STANDING_BANNER, (short) 9),
    LIME_STANDING_BANNER("LIME_STANDING_BANNER", STANDING_BANNER, (short) 10),
    YELLOW_STANDING_BANNER("YELLOW_STANDING_BANNER", STANDING_BANNER, (short) 11),
    LIGHT_BLUE_STANDING_BANNER("LIGHT_BLUE_STANDING_BANNER", STANDING_BANNER, (short) 12),
    MAGENTA_STANDING_BANNER("MAGENTA_STANDING_BANNER", STANDING_BANNER, (short) 13),
    ORANGE_STANDING_BANNER("ORANGE_STANDING_BANNER", STANDING_BANNER, (short) 14),
    WHITE_STANDING_BANNER("WHITE_STANDING_BANNER", STANDING_BANNER, (short) 15),
    WALL_BANNER("WALL_BANNER", org.bukkit.Material.WALL_BANNER, 177),//Unobtainable
    BLACK_WALL_BANNER("BLACK_WALL_BANNER", WALL_BANNER, (short) 0),
    RED_WALL_BANNER("RED_WALL_BANNER", WALL_BANNER, (short) 1),
    GREEN_WALL_BANNER("GREEN_WALL_BANNER", WALL_BANNER, (short) 2),
    BROWN_WALL_BANNER("BROWN_WALL_BANNER", WALL_BANNER, (short) 3),
    BLUE_WALL_BANNER("BLUE_WALL_BANNER", WALL_BANNER, (short) 4),
    PURPLE_WALL_BANNER("PURPLE_WALL_BANNER", WALL_BANNER, (short) 5),
    CYAN_WALL_BANNER("CYAN_WALL_BANNER", WALL_BANNER, (short) 6),
    LIGHT_GRAY_WALL_BANNER("LIGHT_GRAY_WALL_BANNER", WALL_BANNER, (short) 7),
    GRAY_WALL_BANNER("GRAY_WALL_BANNER", WALL_BANNER, (short) 8),
    PINK_WALL_BANNER("PINK_WALL_BANNER", WALL_BANNER, (short) 9),
    LIME_WALL_BANNER("LIME_WALL_BANNER", WALL_BANNER, (short) 10),
    YELLOW_WALL_BANNER("YELLOW_WALL_BANNER", WALL_BANNER, (short) 11),
    LIGHT_BLUE_WALL_BANNER("LIGHT_BLUE_WALL_BANNER", WALL_BANNER, (short) 12),
    MAGENTA_WALL_BANNER("MAGENTA_WALL_BANNER", WALL_BANNER, (short) 13),
    ORANGE_WALL_BANNER("ORANGE_WALL_BANNER", WALL_BANNER, (short) 14),
    WHITE_WALL_BANNER("WHITE_WALL_BANNER", WALL_BANNER, (short) 15),
    DAYLIGHT_DETECTOR_INVERTED("DAYLIGHT_DETECTOR_INVERTED", org.bukkit.Material.DAYLIGHT_DETECTOR_INVERTED, 178),//Unobtainable
    RED_SANDSTONE("RED_SANDSTONE", org.bukkit.Material.RED_SANDSTONE, 179),
    CHISELED_RED_SANDSTONE("CHISELED_RED_SANDSTONE", RED_SANDSTONE, (short) 1),
    SMOOTH_RED_SANDSTONE("SMOOTH_RED_SANDSTONE", RED_SANDSTONE, (short) 2),
    RED_SANDSTONE_STAIRS("RED_SANDSTONE_STAIRS", org.bukkit.Material.RED_SANDSTONE_STAIRS, "RED SANDSTONE STAIRS", 180, "RED SANDSTONE STAIR"),
    DOUBLE_STONE_SLAB2("DOUBLE_STONE_SLAB2", org.bukkit.Material.DOUBLE_STONE_SLAB2, 181),//Unobtainable
    DOUBLE_RED_SANDSTONE_SLAB("DOUBLE_RED_SANDSTONE_SLAB", "DOUBLE RED SANDSTONE SLABS", DOUBLE_STONE_SLAB2, (short) 0),
    FULL_RED_SANDSTONE_SLAB("FULL_RED_SANDSTONE_SLAB", DOUBLE_STONE_SLAB2, (short) 8),
    STONE_SLAB2("STONE_SLAB2", org.bukkit.Material.STONE_SLAB2, 182),
    RED_SANDSTONE_SLAB("RED_SANDSTONE_SLAB", "RED SANDSTONE SLABS", STONE_SLAB2, (short) 0, Collections.singletonList("RED_SANDSTONE_STEP")),
    UPPER_RED_SANDSTONE_SLAB("UPPER_RED_SANDSTONE_SLAB", "UPPER RED SANDSTONE SLABS", STONE_SLAB2, (short) 8, Collections.singletonList("UPPER_RED_SANDSTONE_STEP")),
    SPRUCE_FENCE_GATE("SPRUCE_FENCE_GATE", org.bukkit.Material.SPRUCE_FENCE_GATE, "SPRUCE FENCE GATES", 183),
    BIRCH_FENCE_GATE("BIRCH_FENCE_GATE", org.bukkit.Material.BIRCH_FENCE_GATE, "BIRCH FENCE GATES", 184),
    JUNGLE_FENCE_GATE("JUNGLE_FENCE_GATE", org.bukkit.Material.JUNGLE_FENCE_GATE, "JUNGLE FENCE GATES", 185),
    DARK_OAK_FENCE_GATE("DARK_OAK_FENCE_GATE", org.bukkit.Material.DARK_OAK_FENCE_GATE, "DARK OAK FENCE GATES", 186),
    ACACIA_FENCE_GATE("ACACIA_FENCE_GATE", org.bukkit.Material.ACACIA_FENCE_GATE, "ACACIA FENCE GATES", 187),
    SPRUCE_FENCE("SPRUCE_FENCE", org.bukkit.Material.SPRUCE_FENCE, "SPRUCE FENCES", 188),
    BIRCH_FENCE("BIRCH_FENCE", org.bukkit.Material.BIRCH_FENCE, "BIRCH FENCES", 189),
    JUNGLE_FENCE("JUNGLE_FENCE", org.bukkit.Material.JUNGLE_FENCE, "JUNGLE FENCES", 190),
    DARK_OAK_FENCE("DARK_OAK_FENCE", org.bukkit.Material.DARK_OAK_FENCE, "DARK OAK FENCES", 191),
    ACACIA_FENCE("ACACIA_FENCE", org.bukkit.Material.ACACIA_FENCE, "ACACIA FENCES", 192),
    SPRUCE_DOOR_BLOCK("SPRUCE_DOOR_BLOCK", org.bukkit.Material.SPRUCE_DOOR, 193),//Unobtainable
    BIRCH_DOOR_BLOCK("BIRCH_DOOR_BLOCK", org.bukkit.Material.BIRCH_DOOR, 194),//Unobtainable
    JUNGLE_DOOR_BLOCK("JUNGLE_DOOR_BLOCK", org.bukkit.Material.JUNGLE_DOOR, 195),//Unobtainable
    ACACIA_DOOR_BLOCK("ACACIA_DOOR_BLOCK", org.bukkit.Material.ACACIA_DOOR, 196),//Unobtainable
    DARK_OAK_DOOR_BLOCK("DARK_OAK_DOOR_BLOCK", org.bukkit.Material.DARK_OAK_DOOR, 197),//Unobtainable
    END_ROD("END_ROD", org.bukkit.Material.END_ROD, "END RODS", 198, Collections.singletonList("ENDER_ROD")),
    CHORUS_PLANT("CHORUS_PLANT", org.bukkit.Material.CHORUS_PLANT, "CHORUS PLANTS", 199),
    CHORUS_FLOWER("CHORUS_FLOWER", org.bukkit.Material.CHORUS_FLOWER, "CHORUS FLOWERS", 200),
    PURPUR_BLOCK("PURPUR_BLOCK", org.bukkit.Material.PURPUR_BLOCK, "PURPUR BLOCKS", 201),
    PURPUR_PILLAR("PURPUR_PILLAR", org.bukkit.Material.PURPUR_PILLAR, "PURPUR PILLARS", 202),
    PURPUR_STAIRS("PURPUR_STAIRS", org.bukkit.Material.PURPUR_STAIRS, "PURPUR STAIRS", 203, "PURPUR STAIR"),
    PURPUR_DOUBLE_SLAB("PURPUR_DOUBLE_SLAB", org.bukkit.Material.PURPUR_DOUBLE_SLAB, "DOUBLE PURPUR SLABS", 204, "DOUBLE PURPUR SLAB", Collections.singletonList("DOUBLE_PURPUR_SLAB")),
    PURPUR_SLAB("PURPUR_SLAB", org.bukkit.Material.PURPUR_SLAB, "PURPUR SLABS", 205, Collections.singletonList("PURPUR_STEP")),
    END_BRICKS("END_BRICKS", org.bukkit.Material.END_BRICKS, "END STONE BRICKS", 206, "END STONE BRICK", Arrays.asList("END_STONE_BRICKS", "ENDER_BRICKS", "ENDER_STONE_BRICKS")),
    BEETROOTS("BEETROOTS", org.bukkit.Material.BEETROOT_BLOCK, 207, Collections.singletonList("BEETROOT_BLOCK")),//Unobtainable
    GRASS_PATH("GRASS_PATH", org.bukkit.Material.GRASS_PATH, 208),
    END_GATEWAY("END_GATEWAY", org.bukkit.Material.END_GATEWAY, 209),//Unobtainable
    REPEATING_COMMAND_BLOCK("REPEATING_COMMAND_BLOCK", org.bukkit.Material.COMMAND_REPEATING, "REPEATING COMMAND BLOCKS", 210, Arrays.asList("COMMAND_REPEATING", "COMMAND_BLOCK_REPEATING", "REPEATING_COMMAND")),
    CHAIN_COMMAND_BLOCK("CHAIN_COMMAND_BLOCK", org.bukkit.Material.COMMAND_CHAIN, "CHAIN COMMAND BLOCKS", 211, Arrays.asList("COMMAND_CHAIN", "CHAIN_COMMAND", "COMMAND_BLOCK_CHAIN")),
    FROSTED_ICE("FROSTED_ICE", org.bukkit.Material.FROSTED_ICE, 212),//Unobtainable
    MAGMA("MAGMA", org.bukkit.Material.MAGMA, "MAGMA BLOCKS", 213, "MAGMA BLOCK", Collections.singletonList("MAGMA_BLOCK")),
    NETHER_WART_BLOCK("NETHER_WART_BLOCK", org.bukkit.Material.NETHER_WART_BLOCK, "NETHER WART BLOCKS", 214),
    RED_NETHER_BRICK("RED_NETHER_BRICK", org.bukkit.Material.RED_NETHER_BRICK, "RED NETHER BRICKS", 215),
    BONE_BLOCK("BONE_BLOCK", org.bukkit.Material.BONE_BLOCK, "BONE BLOCKS", 216),
    STRUCTURE_VOID("STRUCTURE_VOID", org.bukkit.Material.STRUCTURE_VOID, 217),
    OBSERVER("OBSERVER", org.bukkit.Material.OBSERVER, "OBSERVERS", 218, Arrays.asList("BLOCK_UPDATE_DETECTOR", "BUD")),
    WHITE_SHULKER_BOX("WHITE_SHULKER_BOX", org.bukkit.Material.WHITE_SHULKER_BOX, "WHITE SHULKER BOXES", 219),
    ORANGE_SHULKER_BOX("ORANGE_SHULKER_BOX", org.bukkit.Material.ORANGE_SHULKER_BOX, "ORANGE SHULKER BOXES", 220),
    MAGENTA_SHULKER_BOX("MAGENTA_SHULKER_BOX", org.bukkit.Material.MAGENTA_SHULKER_BOX, "MAGENTA SHULKER BOXES", 221),
    LIGHT_BLUE_SHULKER_BOX("LIGHT_BLUE_SHULKER_BOX", org.bukkit.Material.LIGHT_BLUE_SHULKER_BOX, "LIGHT BLUE SHULKER BOXES", 222),
    YELLOW_SHULKER_BOX("YELLOW_SHULKER_BOX", org.bukkit.Material.YELLOW_SHULKER_BOX, "YELLOW SHULKER BOXES", 223),
    LIME_SHULKER_BOX("LIME_SHULKER_BOX", org.bukkit.Material.LIME_SHULKER_BOX, "LIME SHULKER BOXES", 224),
    PINK_SHULKER_BOX("PINK_SHULKER_BOX", org.bukkit.Material.PINK_SHULKER_BOX, "PINK SHULKER BOXES", 225),
    GRAY_SHULKER_BOX("GRAY_SHULKER_BOX", org.bukkit.Material.GRAY_SHULKER_BOX, "GRAY SHULKER BOXES", 226),
    LIGHT_GRAY_SHULKER_BOX("LIGHT_GRAY_SHULKER_BOX", org.bukkit.Material.SILVER_SHULKER_BOX, "LIGHT GRAY SHULKER BOXES", 227, Collections.singletonList("SILVER_SHULKER_BOX")),
    CYAN_SHULKER_BOX("CYAN_SHULKER_BOX", org.bukkit.Material.CYAN_SHULKER_BOX, "CYAN SHULKER BOXES", 228),
    PURPLE_SHULKER_BOX("PURPLE_SHULKER_BOX", org.bukkit.Material.PURPLE_SHULKER_BOX, "PURPLE SHULKER BOXES", 229),
    BLUE_SHULKER_BOX("BLUE_SHULKER_BOX", org.bukkit.Material.BLUE_SHULKER_BOX, "BLUE SHULKER BOXES", 230),
    BROWN_SHULKER_BOX("BROWN_SHULKER_BOX", org.bukkit.Material.BROWN_SHULKER_BOX, "BROWN SHULKER BOXES", 231),
    GREEN_SHULKER_BOX("GREEN_SHULKER_BOX", org.bukkit.Material.GREEN_SHULKER_BOX, "GREEN SHULKER BOXES", 232),
    RED_SHULKER_BOX("RED_SHULKER_BOX", org.bukkit.Material.RED_SHULKER_BOX, "RED SHULKER BOXES", 233),
    BLACK_SHULKER_BOX("BLACK_SHULKER_BOX", org.bukkit.Material.BLACK_SHULKER_BOX, "BLACK SHULKER BOXES", 234),
    WHITE_GLAZED_TERRACOTTA("WHITE_GLAZED_TERRACOTTA", org.bukkit.Material.WHITE_GLAZED_TERRACOTTA, 235),
    ORANGE_GLAZED_TERRACOTTA("ORANGE_GLAZED_TERRACOTTA", org.bukkit.Material.ORANGE_GLAZED_TERRACOTTA, 236),
    MAGENTA_GLAZED_TERRACOTTA("MAGENTA_GLAZED_TERRACOTTA", org.bukkit.Material.MAGENTA_GLAZED_TERRACOTTA, 237),
    LIGHT_BLUE_GLAZED_TERRACOTTA("LIGHT_BLUE_GLAZED_TERRACOTTA", org.bukkit.Material.LIGHT_BLUE_GLAZED_TERRACOTTA, 238),
    YELLOW_GLAZED_TERRACOTTA("YELLOW_GLAZED_TERRACOTTA", org.bukkit.Material.YELLOW_GLAZED_TERRACOTTA, 239),
    LIME_GLAZED_TERRACOTTA("LIME_GLAZED_TERRACOTTA", org.bukkit.Material.LIME_GLAZED_TERRACOTTA, 240),
    PINK_GLAZED_TERRACOTTA("PINK_GLAZED_TERRACOTTA", org.bukkit.Material.PINK_GLAZED_TERRACOTTA, 241),
    GRAY_GLAZED_TERRACOTTA("GRAY_GLAZED_TERRACOTTA", org.bukkit.Material.GRAY_GLAZED_TERRACOTTA, 242),
    LIGHT_GRAY_GLAZED_TERRACOTTA("LIGHT_GRAY_GLAZED_TERRACOTTA", org.bukkit.Material.SILVER_GLAZED_TERRACOTTA, 243, Collections.singletonList("SILVER_GLAZED_TERRACOTTA")),
    CYAN_GLAZED_TERRACOTTA("CYAN_GLAZED_TERRACOTTA", org.bukkit.Material.CYAN_GLAZED_TERRACOTTA, 244),
    PURPLE_GLAZED_TERRACOTTA("PURPLE_GLAZED_TERRACOTTA", org.bukkit.Material.PURPLE_GLAZED_TERRACOTTA, 245),
    BLUE_GLAZED_TERRACOTTA("BLUE_GLAZED_TERRACOTTA", org.bukkit.Material.BLUE_GLAZED_TERRACOTTA, 246),
    BROWN_GLAZED_TERRACOTTA("BROWN_GLAZED_TERRACOTTA", org.bukkit.Material.BROWN_GLAZED_TERRACOTTA, 247),
    GREEN_GLAZED_TERRACOTTA("GREEN_GLAZED_TERRACOTTA", org.bukkit.Material.GREEN_GLAZED_TERRACOTTA, 248),
    RED_GLAZED_TERRACOTTA("RED_GLAZED_TERRACOTTA", org.bukkit.Material.RED_GLAZED_TERRACOTTA, 249),
    BLACK_GLAZED_TERRACOTTA("BLACK_GLAZED_TERRACOTTA", org.bukkit.Material.BLACK_GLAZED_TERRACOTTA, 250),
    CONCRETE("CONCRETE", org.bukkit.Material.CONCRETE, 251),
    WHITE_CONCRETE("WHITE_CONCRETE", CONCRETE, (short) 0, Collections.singletonList("WHITE_STAINED_CONCRETE")),
    ORANGE_CONCRETE("ORANGE_CONCRETE", CONCRETE, (short) 1, Collections.singletonList("ORANGE_STAINED_CONCRETE")),
    MAGENTA_CONCRETE("MAGENTA_CONCRETE", CONCRETE, (short) 2, Collections.singletonList("MAGENTA_STAINED_CONCRETE")),
    LIGHT_BLUE_CONCRETE("LIGHT_BLUE_CONCRETE", CONCRETE, (short) 3, Collections.singletonList("LIGHT_BLUE_STAINED_CONCRETE")),
    YELLOW_CONCRETE("YELLOW_CONCRETE", CONCRETE, (short) 4, Collections.singletonList("YELLOW_STAINED_CONCRETE")),
    LIME_CONCRETE("LIME_CONCRETE", CONCRETE, (short) 5, Collections.singletonList("LIME_STAINED_CONCRETE")),
    PINK_CONCRETE("PINK_CONCRETE", CONCRETE, (short) 6, Collections.singletonList("PINK_STAINED_CONCRETE")),
    GRAY_CONCRETE("GRAY_CONCRETE", CONCRETE, (short) 7, Collections.singletonList("GRAY_STAINED_CONCRETE")),
    LIGHT_GRAY_CONCRETE("LIGHT_GRAY_CONCRETE", CONCRETE, (short) 8, Collections.singletonList("LIGHT_GRAY_STAINED_CONCRETE")),
    CYAN_CONCRETE("CYAN_CONCRETE", CONCRETE, (short) 9, Collections.singletonList("CYAN_STAINED_CONCRETE")),
    PURPLE_CONCRETE("PURPLE_CONCRETE", CONCRETE, (short) 10, Collections.singletonList("PURPLE_STAINED_CONCRETE")),
    BLUE_CONCRETE("BLUE_CONCRETE", CONCRETE, (short) 11, Collections.singletonList("BLUE_STAINED_CONCRETE")),
    BROWN_CONCRETE("BROWN_CONCRETE", CONCRETE, (short) 12, Collections.singletonList("BROWN_STAINED_CONCRETE")),
    GREEN_CONCRETE("GREEN_CONCRETE", CONCRETE, (short) 13, Collections.singletonList("GREEN_STAINED_CONCRETE")),
    RED_CONCRETE("RED_CONCRETE", CONCRETE, (short) 14, Collections.singletonList("RED_STAINED_CONCRETE")),
    BLACK_CONCRETE("BLACK_CONCRETE", CONCRETE, (short) 15, Collections.singletonList("BLACK_STAINED_CONCRETE")),
    CONCRETE_POWDER("CONCRETE_POWDER", org.bukkit.Material.CONCRETE_POWDER, 252, Arrays.asList("CEMENT", "CONCRETE_DUST")),
    WHITE_CONCRETE_POWDER("WHITE_CONCRETE_POWDER", CONCRETE_POWDER, (short) 0, Arrays.asList("WHITE_CEMENT", "WHITE_STAINED_CEMENT", "WHITE_STAINED_CONCRETE_POWDER", "WHITE_CONCRETE_DUST", "WHITE_STAINED_CONCRETE_DUST")),
    ORANGE_CONCRETE_POWDER("ORANGE_CONCRETE_POWDER", CONCRETE_POWDER, (short) 1, Arrays.asList("ORANGE_CEMENT", "ORANGE_STAINED_CEMENT", "ORANGE_STAINED_CONCRETE_POWDER", "ORANGE_CONCRETE_DUST", "ORANGE_STAINED_CONCRETE_DUST")),
    MAGENTA_CONCRETE_POWDER("MAGENTA_CONCRETE_POWDER", CONCRETE_POWDER, (short) 2, Arrays.asList("MAGENTA_CEMENT", "MAGENTA_STAINED_CEMENT", "MAGENTA_STAINED_CONCRETE_POWDER", "MAGENTA_CONCRETE_DUST", "MAGENTA_STAINED_CONCRETE_DUST")),
    LIGHT_BLUE_CONCRETE_POWDER("LIGHT_BLUE_CONCRETE_POWDER", CONCRETE_POWDER, (short) 3, Arrays.asList("LIGHT_BLUE_CEMENT", "LIGHT_BLUE_STAINED_CEMENT", "LIGHT_BLUE_STAINED_CONCRETE_POWDER", "LIGHT_BLUE_CONCRETE_DUST", "LIGHT_BLUE_STAINED_CONCRETE_DUST")),
    YELLOW_CONCRETE_POWDER("YELLOW_CONCRETE_POWDER", CONCRETE_POWDER, (short) 4, Arrays.asList("YELLOW_CEMENT", "YELLOW_STAINED_CEMENT", "YELLOW_STAINED_CONCRETE_POWDER", "YELLOW_CONCRETE_DUST", "YELLOW_STAINED_CONCRETE_DUST")),
    LIME_CONCRETE_POWDER("LIME_CONCRETE_POWDER", CONCRETE_POWDER, (short) 5, Arrays.asList("LIME_CEMENT", "LIME_STAINED_CEMENT", "LIME_STAINED_CONCRETE_POWDER", "LIME_CONCRETE_DUST", "LIME_STAINED_CONCRETE_DUST")),
    PINK_CONCRETE_POWDER("PINK_CONCRETE_POWDER", CONCRETE_POWDER, (short) 6, Arrays.asList("PINK_CEMENT", "PINK_STAINED_CEMENT", "PINK_STAINED_CONCRETE_POWDER", "PINK_CONCRETE_DUST", "PINK_STAINED_CONCRETE_DUST")),
    GRAY_CONCRETE_POWDER("GRAY_CONCRETE_POWDER", CONCRETE_POWDER, (short) 7, Arrays.asList("GRAY_CEMENT", "GRAY_STAINED_CEMENT", "GRAY_STAINED_CONCRETE_POWDER", "GRAY_CONCRETE_DUST", "GRAY_STAINED_CONCRETE_DUST")),
    LIGHT_GRAY_CONCRETE_POWDER("LIGHT_GRAY_CONCRETE_POWDER", CONCRETE_POWDER, (short) 8, Arrays.asList("LIGHT_GRAY_CEMENT", "LIGHT_GRAY_STAINED_CEMENT", "LIGHT_GRAY_STAINED_CONCRETE_POWDER", "LIGHT_GRAY_CONCRETE_DUST", "LIGHT_GRAY_STAINED_CONCRETE_DUST")),
    CYAN_CONCRETE_POWDER("CYAN_CONCRETE_POWDER", CONCRETE_POWDER, (short) 9, Arrays.asList("CYAN_CEMENT", "CYAN_STAINED_CEMENT", "CYAN_STAINED_CONCRETE_POWDER", "CYAN_CONCRETE_DUST", "CYAN_STAINED_CONCRETE_DUST")),
    PURPLE_CONCRETE_POWDER("PURPLE_CONCRETE_POWDER", CONCRETE_POWDER, (short) 10, Arrays.asList("PURPLE_CEMENT", "PURPLE_STAINED_CEMENT", "PURPLE_STAINED_CONCRETE_POWDER", "PURPLE_CONCRETE_DUST", "PURPLE_STAINED_CONCRETE_DUST")),
    BLUE_CONCRETE_POWDER("BLUE_CONCRETE_POWDER", CONCRETE_POWDER, (short) 11, Arrays.asList("BLUE_CEMENT", "BLUE_STAINED_CEMENT", "BLUE_STAINED_CONCRETE_POWDER_POWDER", "BLUE_CONCRETE_DUST", "BLUE_STAINED_CONCRETE_DUST")),
    BROWN_CONCRETE_POWDER("BROWN_CONCRETE_POWDER", CONCRETE_POWDER, (short) 12, Arrays.asList("BROWN_CEMENT", "BROWN_STAINED_CEMENT", "BROWN_STAINED_CONCRETE_POWDER", "BROWN_CONCRETE_DUST", "BROWN_STAINED_CONCRETE_DUST")),
    GREEN_CONCRETE_POWDER("GREEN_CONCRETE_POWDER", CONCRETE_POWDER, (short) 13, Arrays.asList("GREEN_CEMENT", "GREEN_STAINED_CEMENT", "GREEN_STAINED_CONCRETE_POWDER", "GREEN_CONCRETE_DUST", "GREEN_STAINED_CONCRETE_DUST")),
    RED_CONCRETE_POWDER("RED_CONCRETE_POWDER", CONCRETE_POWDER, (short) 14, Arrays.asList("RED_CEMENT", "RED_STAINED_CEMENT", "RED_STAINED_CONCRETE_POWDER", "RED_CONCRETE_DUST", "RED_STAINED_CONCRETE_DUST")),
    BLACK_CONCRETE_POWDER("BLACK_CONCRETE_POWDER", CONCRETE_POWDER, (short) 15, Arrays.asList("BLACK_CEMENT", "BLACK_STAINED_CEMENT", "BLACK_STAINED_CONCRETE_POWDER", "BLACK_CONCRETE_DUST", "BLACK_STAINED_CONCRETE_DUST")),
    STRUCTURE_BLOCK("STRUCTURE_BLOCK", org.bukkit.Material.STRUCTURE_BLOCK, "STRUCTURE BLOCKS", 255),
    //ITEM IDS
    IRON_SHOVEL("IRON_SHOVEL", org.bukkit.Material.IRON_SPADE, "IRON SHOVELS", 256, Collections.singletonList("IRON_SPADE")),
    IRON_PICKAXE("IRON_PICKAXE", org.bukkit.Material.IRON_PICKAXE, "IRON PICKAXES", 257, Collections.singletonList("IRON_PICK")),
    IRON_AXE("IRON_AXE", org.bukkit.Material.IRON_AXE, "IRON AXES", 258),
    FLINT_AND_STEEL("FLINT_AND_STEEL", org.bukkit.Material.FLINT_AND_STEEL, 259),
    APPLE("APPLE", org.bukkit.Material.APPLE, "APPLES", 260),
    BOW("BOW", org.bukkit.Material.BOW, "BOWS", 261),
    ARROW("ARROW", org.bukkit.Material.ARROW, "ARROWS", 262),
    COAL("COAL", org.bukkit.Material.COAL, 263),
    CHARCOAL("CHARCOAL", COAL, (short) 1),
    DIAMOND("DIAMOND", org.bukkit.Material.DIAMOND, "DIAMONDS", 264),
    IRON_INGOT("IRON_INGOT", org.bukkit.Material.IRON_INGOT, "IRON INGOTS", 265, Collections.singletonList("IRON")),
    GOLD_INGOT("GOLD_INGOT", org.bukkit.Material.GOLD_INGOT, "GOLD INGOTS", 266, Collections.singletonList("GOLD")),
    IRON_SWORD("IRON_SWORD", org.bukkit.Material.IRON_SWORD, "IRON SWORDS", 267),
    WOODEN_SWORD("WOODEN_SWORD", org.bukkit.Material.WOOD_SWORD, "WOODEN SWORDS", 268, Collections.singletonList("WOOD_SWORD")),
    WOODEN_SHOVEL("WOODEN_SHOVEL", org.bukkit.Material.WOOD_SPADE, "WOODEN SHOVELS", 269, Arrays.asList("WOOD_SHOVEL", "WOODEN_SPADE", "WOOD_SPADE")),
    WOODEN_PICKAXE("WOODEN_PICKAXE", org.bukkit.Material.WOOD_PICKAXE, "WOODEN PICKAXES", 270, Arrays.asList("WOOD_PICKAXE", "WOOD_PICK")),
    WOODEN_AXE("WOODEN_AXE", org.bukkit.Material.WOOD_AXE, "WOODEN AXES", 271, Collections.singletonList("WOOD_AXE")),
    STONE_SWORD("STONE_SWORD", org.bukkit.Material.STONE_SWORD, "STONE SWORDS", 272),
    STONE_SHOVEL("STONE_SHOVEL", org.bukkit.Material.STONE_SPADE, "STONE SHOVELS", 273, Collections.singletonList("STONE_SPADE")),
    STONE_PICKAXE("STONE_PICKAXE", org.bukkit.Material.STONE_PICKAXE, "STONE PICKAXES", 274, Collections.singletonList("STONE_PICK")),
    STONE_AXE("STONE_AXE", org.bukkit.Material.STONE_AXE, "STONE AXES", 275),
    DIAMOND_SWORD("DIAMOND_SWORD", org.bukkit.Material.DIAMOND_SWORD, "DIAMOND SWORDS", 276),
    DIAMOND_SHOVEL("DIAMOND_SHOVEL", org.bukkit.Material.DIAMOND_SPADE, "DIAMOND SHOVELS", 277, Collections.singletonList("DIAMOND_SPADE")),
    DIAMOND_PICKAXE("DIAMOND_PICKAXE", org.bukkit.Material.DIAMOND_PICKAXE, "DIAMOND PICKAXES", 278, Collections.singletonList("DIAMOND_PICK")),
    DIAMOND_AXE("DIAMOND_AXE", org.bukkit.Material.DIAMOND_AXE, "DIAMOND AXES", 279),
    STICK("STICK", org.bukkit.Material.STICK, "STICKS", 280),
    BOWL("BOWL", org.bukkit.Material.BOWL, "BOWLS", 281),
    MUSHROOM_STEW("MUSHROOM_STEW", org.bukkit.Material.MUSHROOM_SOUP, 282, Collections.singletonList("MUSHROOM_SOUP")),
    GOLDEN_SWORD("GOLDEN_SWORD", org.bukkit.Material.GOLD_SWORD, "GOLDEN SWORDS", 283, Collections.singletonList("GOLD_SWORD")),
    GOLDEN_SHOVEL("GOLDEN_SHOVEL", org.bukkit.Material.GOLD_SPADE, "GOLDEN SHOVELS", 284, Arrays.asList("GOLD_SHOVEL", "GOLD_SPADE", "GOLDEN_SPADE")),
    GOLDEN_PICKAXE("GOLDEN_PICKAXE", org.bukkit.Material.GOLD_PICKAXE, "GOLDEN PICKAXES", 285, Arrays.asList("GOLDEN_PICK", "GOLD_PICKAXE", "GOLD_PICK")),
    GOLDEN_AXE("GOLDEN_AXE", org.bukkit.Material.GOLD_AXE, "GOLDEN AXES", 286, Collections.singletonList("GOLD_AXE")),
    STRING("STRING", org.bukkit.Material.STRING, 287),
    FEATHER("FEATHER", org.bukkit.Material.FEATHER, "FEATHERS", 288),
    GUNPOWDER("GUNPOWDER", org.bukkit.Material.SULPHUR, 289, Collections.singletonList("SULPHUR")),
    WOODEN_HOE("WOODEN_HOE", org.bukkit.Material.WOOD_HOE, "WOODEN HOES", 290, Collections.singletonList("WOOD_HOE")),
    STONE_HOE("STONE_HOE", org.bukkit.Material.STONE_HOE, "STONE HOES", 291),
    IRON_HOE("IRON_HOE", org.bukkit.Material.IRON_HOE, "IRON HOES", 292),
    DIAMOND_HOE("DIAMOND_HOE", org.bukkit.Material.DIAMOND_HOE, "DIAMOND HOES", 293),
    GOLDEN_HOE("GOLDEN_HOE", org.bukkit.Material.GOLD_HOE, "GOLDEN HOES", 294, Collections.singletonList("GOLD_HOE")),
    WHEAT_SEEDS("WHEAT_SEEDS", org.bukkit.Material.SEEDS, "SEEDS", 295, "SEED", Collections.singletonList("SEEDS")),
    WHEAT("WHEAT", org.bukkit.Material.WHEAT, 296),
    BREAD("BREAD", org.bukkit.Material.BREAD, 297),
    LEATHER_HELMET("LEATHER_HELMET", org.bukkit.Material.LEATHER_HELMET, "LEATHER CAPS", 298, "LEATHER CAP", Arrays.asList("LEATHER_HAT", "LEATHER_CAP")),
    LEATHER_CHESTPLATE("LEATHER_CHESTPLATE", org.bukkit.Material.LEATHER_CHESTPLATE, "LEATHER TUNICS", 299, "LEATHER TUNIC", Arrays.asList("LEATHER_CHEST", "LEATHER_TUNIC", "LEATHER_SHIRT")),
    LEATHER_LEGGINGS("LEATHER_LEGGINGS", org.bukkit.Material.LEATHER_LEGGINGS, "LEATHER PANTS", 300, "LEATHER PANT", Collections.singletonList("LEATHER_PANTS")),
    LEATHER_BOOTS("LEATHER_BOOTS", org.bukkit.Material.LEATHER_BOOTS, "LEATHER BOOTS", 301, "LEATHER BOOT", Collections.singletonList("LEATHER_SHOES")),
    CHAINMAIL_HELMET("CHAINMAIL_HELMET", org.bukkit.Material.CHAINMAIL_HELMET, "CHAINMAIL HELMETS", 302, Collections.singletonList("CHAINMAIL_HAT")),
    CHAINMAIL_CHESTPLATE("CHAINMAIL_CHESTPLATE", org.bukkit.Material.CHAINMAIL_CHESTPLATE, "CHAINMAIL CHESTPLATES", 303, Arrays.asList("CHAINMAIL_CHEST", "CHAINMAIL_SHIRT")),
    CHAINMAIL_LEGGINGS("CHAINMAIL_LEGGINGS", org.bukkit.Material.CHAINMAIL_LEGGINGS, "CHAINMAIL LEGGINGS", 304, "CHAINMAIL LEGGING", Collections.singletonList("CHAINMAIL_PANTS")),
    CHAINMAIL_BOOTS("CHAINMAIL_BOOTS", org.bukkit.Material.CHAINMAIL_BOOTS, "CHAINMAIL BOOTS", 305, "CHAINMAIL BOOT", Collections.singletonList("CHAINMAIL_SHOES")),
    IRON_HELMET("IRON_HELMET", org.bukkit.Material.IRON_HELMET, "IRON HELMETS", 306, Collections.singletonList("IRON_HAT")),
    IRON_CHESTPLATE("IRON_CHESTPLATE", org.bukkit.Material.IRON_CHESTPLATE, "IRON CHESTPLATES", 307, Arrays.asList("IRON_CHEST", "IRON_SHIRT")),
    IRON_LEGGINGS("IRON_LEGGINGS", org.bukkit.Material.IRON_LEGGINGS, "IRON LEGGINGS", 308, "IRON LEGGING", Collections.singletonList("IRON_PANTS")),
    IRON_BOOTS("IRON_BOOTS", org.bukkit.Material.IRON_BOOTS, "IRON BOOTS", 309, "IRON BOOT", Collections.singletonList("IRON_SHOES")),
    DIAMOND_HELMET("DIAMOND_HELMET", org.bukkit.Material.DIAMOND_HELMET, "DIAMOND HELMETS", 310, Collections.singletonList("DIAMOND_HAT")),
    DIAMOND_CHESTPLATE("DIAMOND_CHESTPLATE", org.bukkit.Material.DIAMOND_CHESTPLATE, "DIAMOND CHESTPLATES", 311, Arrays.asList("DIAMOND_CHEST", "DIAMOND_SHIRT")),
    DIAMOND_LEGGINGS("DIAMOND_LEGGINGS", org.bukkit.Material.DIAMOND_LEGGINGS, "DIAMOND LEGGINGS", 312, "DIAMOND LEGGING", Collections.singletonList("DIAMOND_PANTS")),
    DIAMOND_BOOTS("DIAMOND_BOOTS", org.bukkit.Material.DIAMOND_BOOTS, "DIAMOND BOOTS", 313, "DIAMOND BOOT", Collections.singletonList("DIAMOND_SHOES")),
    GOLDEN_HELMET("GOLDEN_HELMET", org.bukkit.Material.GOLD_HELMET, "GOLDEN HELMETS", 314, Arrays.asList("GOLDEN_HAT", "GOLD_HELMET", "GOLD_HAT")),
    GOLDEN_CHESTPLATE("GOLDEN_CHESTPLATE", org.bukkit.Material.GOLD_CHESTPLATE, "GOLDEN CHESTPLATES", 315, Arrays.asList("GOLDEN_CHEST", "GOLD_CHEST", "GOLD_CHESTPLATE", "GOLDEN_SHIRT", "GOLD_SHIRT")),
    GOLDEN_LEGGINGS("GOLDEN_LEGGINGS", org.bukkit.Material.GOLD_LEGGINGS, "GOLDEN LEGGINGS", 316, "GOLDEN LEGGING", Arrays.asList("GOLDEN_PANTS", "GOLD_PANTS", "GOLD_LEGGINGS")),
    GOLDEN_BOOTS("GOLDEN_BOOTS", org.bukkit.Material.GOLD_BOOTS, "GOLDEN BOOTS", 317, "GOLDEN BOOT", Arrays.asList("GOLD_BOOTS", "GOLD_SHOES", "GOLDEN_SHOES")),
    FLINT("FLINT", org.bukkit.Material.FLINT, 318),
    PORKCHOP("PORKCHOP", org.bukkit.Material.PORK, "RAW PORKCHOPS", 319, "RAW PORKCHOP", Arrays.asList("PORK", "RAW_PORK", "RAW_PORKCHOP")),
    COOKED_PORKCHOP("COOKED_PORKCHOP", org.bukkit.Material.GRILLED_PORK, "COOKED PORKCHOPS", 320, Arrays.asList("GRILLED_PORK", "GRILLED_PORKCHOP", "COOKED_PORK")),
    PAINTING("PAINTING", org.bukkit.Material.PAINTING, "PAINTINGS", 321),
    GOLDEN_APPLE("GOLDEN_APPLE", org.bukkit.Material.GOLDEN_APPLE, "GOLDEN APPLES", 322, Collections.singletonList("GOLD_APPLE")),
    ENCHANTED_GOLDEN_APPLE("ENCHANTED_GOLDEN_APPLE", "ENCHANTED GOLDEN APPLES", GOLDEN_APPLE, (short) 1, Collections.singletonList("GOD_APPLE")),
    SIGN("SIGN", org.bukkit.Material.SIGN, 323),
    WOODEN_DOOR("WOODEN_DOOR", org.bukkit.Material.WOOD_DOOR, "OAK DOORS", 324, "OAK DOOR", Arrays.asList("WOOD_DOOR", "OAK_DOOR")),
    BUCKET("BUCKET", org.bukkit.Material.BUCKET, "BUCKETS", 325),
    WATER_BUCKET("WATER_BUCKET", org.bukkit.Material.WATER_BUCKET, "WATER BUCKETS", 326),
    LAVA_BUCKET("LAVA_BUCKET", org.bukkit.Material.LAVA_BUCKET, "LAVA BUCKETS", 327),
    MINECART("MINECART", org.bukkit.Material.MINECART, "MINECARTS", 328),
    SADDLE("SADDLE", org.bukkit.Material.SADDLE, "SADDLES", 329),
    IRON_DOOR("IRON_DOOR", org.bukkit.Material.IRON_DOOR, "IRON DOORS", 330),
    REDSTONE("REDSTONE", org.bukkit.Material.REDSTONE, 331),
    SNOWBALL("SNOWBALL", org.bukkit.Material.SNOW_BALL, "SNOWBALLS", 332),
    BOAT("BOAT", org.bukkit.Material.BOAT, "OAK BOATS", 333, "OAK BOAT", Collections.singletonList("OAK_BOAT")),
    LEATHER("LEATHER", org.bukkit.Material.LEATHER, 334),
    MILK_BUCKET("MILK_BUCKET", org.bukkit.Material.MILK_BUCKET, "MILK BUCKETS", 335, Collections.singletonList("MILK")),
    BRICK("BRICK", org.bukkit.Material.CLAY_BRICK, "BRICKS", 336, Collections.singletonList("CLAY_BRICK")),
    CLAY_BALL("CLAY_BALL", org.bukkit.Material.CLAY_BALL, "CLAY BALLS", 337),
    REEDS("REEDS", org.bukkit.Material.SUGAR_CANE, "SUGAR CANES", 338, "SUGAR CANE", Collections.singletonList("SUGAR_CANE")),
    PAPER("PAPER", org.bukkit.Material.PAPER, 339),
    BOOK("BOOK", org.bukkit.Material.BOOK, "BOOKS", 340),
    SLIME_BALL("SLIME_BALL", org.bukkit.Material.SLIME_BALL, "SLIME BALLS", 341),
    CHEST_MINECART("CHEST_MINECART", org.bukkit.Material.STORAGE_MINECART, "MINECARTS WITH CHESTS", 342, "MINECART WITH CHEST", Collections.singletonList("STORAGE_MINECART")),
    FURNACE_MINECART("FURNACE_MINECART", org.bukkit.Material.POWERED_MINECART, "MINECARTS WITH FURNACES", 343, "MINECART WITH FURNACE", Collections.singletonList("POWERED_MINECART")),
    EGG("EGG", org.bukkit.Material.EGG, "EGGS", 344),
    COMPASS("COMPASS", org.bukkit.Material.COMPASS, "COMPASSES", 345),
    FISHING_ROD("FISHING_ROD", org.bukkit.Material.FISHING_ROD, "FISHING RODS", 346),
    CLOCK("CLOCK", org.bukkit.Material.WATCH, "CLOCKS", 347, Collections.singletonList("WATCH")),
    GLOWSTONE_DUST("GLOWSTONE_DUST", org.bukkit.Material.GLOWSTONE_DUST, 348),
    FISH("FISH", org.bukkit.Material.RAW_FISH, 349, Collections.singletonList("RAW_FISH")),
    SALMON("SALMON", FISH, (short) 1),
    CLOWNFISH("CLOWNFISH", FISH, (short) 2),
    PUFFERFISH("PUFFERFISH", FISH, (short) 3),
    COOKED_FISH("COOKED_FISH", org.bukkit.Material.COOKED_FISH, 350),
    COOKED_SALMON("COOKED_SALMON", COOKED_FISH, (short) 1),
    DYE("DYE", org.bukkit.Material.INK_SACK, 351),
    INK_SACK("INK_SACK", DYE, (short) 0),
    ROSE_RED("ROSE_RED", DYE, (short) 1),
    CACTUS_GREEN("CACTUS_GREEN", DYE, (short) 2),
    COCOA_BEANS("COCOA_BEANS", "COCOA BEANS", DYE, (short) 3, "COCOA BEAN", Collections.singletonList("COCOA")),
    LAPIS_LAZULI("LAPIS_LAZULI", DYE, (short) 4, Collections.singletonList("LAPIS")),
    PURPLE_DYE("PURPLE_DYE", DYE, (short) 5),
    CYAN_DYE("CYAN_DYE", DYE, (short) 6),
    LIGHT_GRAY_DYE("LIGHT_GRAY_DYE", DYE, (short) 7),
    GRAY_DYE("GRAY_DYE", DYE, (short) 8),
    PINK_DYE("PINK_DYE", DYE, (short) 9),
    LIME_DYE("LIME_DYE", DYE, (short) 10),
    DANDELION_YELLOW("DANDELION_YELLOW", DYE, (short) 11, Collections.singletonList("YELLOW_DYE")),
    LIGHT_BLUE_DYE("LIGHT_BLUE_DYE", DYE, (short) 12),
    MAGENTA_DYE("MAGENTA_DYE", DYE, (short) 13),
    ORANGE_DYE("ORANGE_DYE", DYE, (short) 14),
    BONE_MEAL("BONE_MEAL", DYE, (short) 15),
    BONE("BONE", org.bukkit.Material.BONE, "BONES", 352),
    SUGAR("SUGAR", org.bukkit.Material.SUGAR, 353),
    CAKE("CAKE", org.bukkit.Material.CAKE, "CAKES", 354),
    BED("BED", org.bukkit.Material.BED, "BEDS", 355),
    WHITE_BED("WHITE_BED", "WHITE BEDS", BED, (short) 0),
    ORANGE_BED("ORANGE_BED", "ORANGE BEDS", BED, (short) 1),
    MAGENTA_BED("MAGENTA_BED", "MAGENTA BEDS", BED, (short) 2),
    LIGHT_BLUE_BED("LIGHT_BLUE_BED", "LIGHT BLUE BEDS", BED, (short) 3),
    YELLOW_BED("YELLOW_BED", "YELLOW BEDS", BED, (short) 4),
    LIME_BED("LIME_BED", "LIME BEDS", BED, (short) 5),
    PINK_BED("PINK_BED", "PINK BEDS", BED, (short) 6),
    GRAY_BED("GRAY_BED", "GRAY BEDS", BED, (short) 7),
    LIGHT_GRAY_BED("LIGHT_GRAY_BED", "LIGHT GRAY BEDS", BED, (short) 8),
    CYAN_BED("CYAN_BED", "CYAN BEDS", BED, (short) 9),
    PURPLE_BED("PURPLE_BED", "PURPLE BEDS", BED, (short) 10),
    BLUE_BED("BLUE_BED", "BLUE BEDS", BED, (short) 11),
    BROWN_BED("BROWN_BED", "BROWN BEDS", BED, (short) 12),
    GREEN_BED("GREEN_BED", "GREEN BEDS", BED, (short) 13),
    RED_BED("RED_BED", "RED BEDS", BED, (short) 14),
    BLACK_BED("BLACK_BED", "BLACK BEDS", BED, (short) 15),
    REPEATER("REPEATER", org.bukkit.Material.DIODE, "REDSTONE REPEATERS", 356, "REDSTONE REPEATER", Arrays.asList("DIODE", "REDSTONE_REPEATER")),
    COOKIE("COOKIE", org.bukkit.Material.COOKIE, "COOKIES", 357),
    FILLED_MAP("FILLED_MAP", org.bukkit.Material.MAP, "MAPS", 358, "MAP"),
    SHEARS("SHEARS", org.bukkit.Material.SHEARS, "SHEARS", 359, "SHEAR"),
    MELON("MELON", org.bukkit.Material.MELON, "MELONS", 360),
    PUMPKIN_SEEDS("PUMPKIN_SEEDS", org.bukkit.Material.PUMPKIN_SEEDS, "PUMPKIN SEEDS", 361, "PUMPKIN SEED"),
    MELON_SEEDS("MELON_SEEDS", org.bukkit.Material.MELON_SEEDS, "MELON SEEDS", 362, "MELON SEED"),
    BEEF("BEEF", org.bukkit.Material.RAW_BEEF, 363, Arrays.asList("RAW_STEAK", "RAW_BEEF")),
    COOKED_BEEF("COOKED_BEEF", org.bukkit.Material.COOKED_BEEF, "STEAKS", 364, "STEAK", Collections.singletonList("STEAK")),
    CHICKEN("CHICKEN", org.bukkit.Material.RAW_CHICKEN, 365, Collections.singletonList("RAW_CHICKEN")),
    COOKED_CHICKEN("COOKED_CHICKEN", org.bukkit.Material.COOKED_CHICKEN, 366),
    ROTTEN_FLESH("ROTTEN_FLESH", org.bukkit.Material.ROTTEN_FLESH, 367, Arrays.asList("ZOMBIE_FLESH", "ZOMBIE_BRAIN")),
    ENDER_PEARL("ENDER_PEARL", org.bukkit.Material.ENDER_PEARL, "ENDER PEARLS", 368),
    BLAZE_ROD("BLAZE_ROD", org.bukkit.Material.BLAZE_ROD, "BLAZE RODS", 369),
    GHAST_TEAR("GHAST_TEAR", org.bukkit.Material.GHAST_TEAR, "GHAST TEARS", 370),
    GOLD_NUGGET("GOLD_NUGGET", org.bukkit.Material.GOLD_NUGGET, "GOLDEN NUGGETS", 371, "GOLDEN NUGGET", Collections.singletonList("GOLDEN_NUGGET")),
    NETHER_WART("NETHER_WART", org.bukkit.Material.NETHER_STALK, "NETHER WARTS", 372, Arrays.asList("WART", "NETHER_STALK")),
    POTION("POTION", org.bukkit.Material.POTION, "POTIONS", 373),
    WATER_BOTTLE("WATER_BOTTLE", "WATER BOTTLES", POTION, (short) 0),
    AWKWARD_POTION("AWKWARD_POTION", "AWKWARD POTIONS", POTION, (short) 16),
    THICK_POTION("THICK_POTION", "THICK POTIONS", POTION, (short) 32),
    MUNDANE_POTION_EXTENDED("MUNDANE_POTION_EXTENDED", "EXTENDED MUNDANE POTIONS", POTION, (short) 64, "EXTENDED MUNDANE POTION", Collections.singletonList("EXTENDED_MUNDANE_POTION")),
    MUNDANE_POTION("MUNDANE_POTION", "MUNDANE POTIONS", POTION, (short) 8192),
    POTION_OF_REGENERATION("POTION_OF_REGENERATION", "POTIONS OF REGENERATION", POTION, (short) 8193),
    POTION_OF_SWIFTNESS("POTION_OF_SWIFTNESS", "POTIONS OF SWIFTNESS", POTION, (short) 8194),
    POTION_OF_FIRE_RESISTANCE("POTION_OF_FIRE_RESISTANCE", "POTIONS OF FIRE RESISTANCE", POTION, (short) 8195),
    POTION_OF_POISON("POTION_OF_POISON", "POTIONS OF POISON", POTION, (short) 8196),
    POTION_OF_HEALING("POTION_OF_HEALING", "POTIONS OF HEALING", POTION, (short) 8197),
    POTION_OF_NIGHT_VISION("POTION_OF_NIGHT_VISION", "POTIONS OF NIGHT VISION", POTION, (short) 8198),
    POTION_OF_WEAKNESS("POTION_OF_WEAKNESS", "POTIONS OF WEAKNESS", POTION, (short) 8200),
    POTION_OF_STRENGTH("POTION_OF_STRENGTH", "POTIONS OF STRENGTH", POTION, (short) 8201),
    POTION_OF_SLOWNESS("POTION_OF_SLOWNESS", "POTIONS OF SLOWNESS", POTION, (short) 8202),
    POTION_OF_LEAPING("POTION_OF_LEAPING", "POTIONS OF LEAPING", POTION, (short) 8203),
    POTION_OF_HARMING("POTION_OF_HARMING", "POTIONS OF HARMING", POTION, (short) 8204),
    POTION_OF_WATER_BREATHING("POTION_OF_WATER_BREATHING", "POTIONS OF WATER BREATHING", POTION, (short) 8205),
    POTION_OF_INVISIBILITY("POTION_OF_INVISIBILITY", "POTIONS OF INVISIBILITY", POTION, (short) 8206),
    POTION_OF_REGENERATION_2("POTION_OF_REGENERATION_2", "POTIONS OF REGENERATION 2", POTION, (short) 8225),
    POTION_OF_SWIFTNESS_2("POTION_OF_SWIFTNESS_2", "POTIONS OF SWIFTNESS 2", POTION, (short) 8226),
    POTION_OF_FIRE_RESISTANCE_2("POTION_OF_FIRE_RESISTANCE_2", "POTIONS OF FIRE RESISTANCE 2", POTION, (short) 8227),
    POTION_OF_POISON_2("POTION_OF_POISON_2", "POTIONS OF POISON 2", POTION, (short) 8228),
    POTION_OF_HEALING_2("POTION_OF_HEALING_2", "POTIONS OF HEALING 2", POTION, (short) 8229),
    POTION_OF_STRENGTH_2("POTION_OF_STRENGTH_2", "POTIONS OF STRENGTH 2", POTION, (short) 8233),
    POTION_OF_LEAPING_2("POTION_OF_LEAPING_2", "POTIONS OF LEAPING 2", POTION, (short) 8235),
    POTION_OF_HARMING_2("POTION_OF_HARMING_2", "POTIONS OF HARMING 2", POTION, (short) 8236),
    POTION_OF_REGENERATION_EXTENDED("POTION_OF_REGENERATION_EXTENDED", "EXTENDED POTIONS OF REGENERATION", POTION, (short) 8257, "EXTENDED POTION OF REGENERATION", Collections.singletonList("EXTENDED_POTION_OF_REGENERATION")),
    POTION_OF_SWIFTNESS_EXTENDED("POTION_OF_SWIFTNESS_EXTENDED", "EXTENDED POTIONS OF SWIFTNESS", POTION, (short) 8258, "EXTENDED POTION OF SWIFTNESS", Collections.singletonList("EXTENDED_POTION_OF_SWIFTNESS")),
    POTION_OF_FIRE_RESISTANCE_EXTENDED("POTION_OF_FIRE_RESISTANCE_EXTENDED", "EXTENDED POTIONS OF FIRE RESISTANCE", POTION, (short) 8259, "EXTENDED POTION OF FIRE RESISTANCE", Collections.singletonList("EXTENDED_POTION_OF_FIRE_RESISTANCE")),
    POTION_OF_POISON_EXTENDED("POTION_OF_POISON_EXTENDED", "EXTENDED POTIONS OF POISON", POTION, (short) 8260, "EXTENDED POTION OF POISON", Collections.singletonList("EXTENDED_POTION_OF_POISON")),
    POTION_OF_NIGHT_VISION_EXTENDED("POTION_OF_NIGHT_VISION_EXTENDED", "EXTENDED POTIONS OF NIGHT VISION", POTION, (short) 8262, "EXTENDED POTION OF NIGHT VISION", Collections.singletonList("EXTENDED_POTION_OF_NIGHT-VISION")),
    POTION_OF_WEAKNESS_EXTENDED("POTION_OF_WEAKNESS_EXTENDED", "EXTENDED POTIONS OF WEAKNESS", POTION, (short) 8264, "EXTENDED POTION OF WEAKNESS", Collections.singletonList("EXTENDED_POTION_OF_WEAKNESS")),
    POTION_OF_STRENGTH_EXTENDED("POTION_OF_STRENGTH_EXTENDED", "EXTENDED POTIONS OF STRENGTH", POTION, (short) 8265, "EXTENDED POTION OF STRENGTH", Collections.singletonList("EXTENDED_POTION_OF_STRENGTH")),
    POTION_OF_SLOWNESS_EXTENDED("POTION_OF_SLOWNESS_EXTENDED", "EXTENDED POTIONS OF SLOWNESS", POTION, (short) 8266, "EXTENDED POTION OF SLOWNESS", Collections.singletonList("EXTENDED_POTION_OF_SLOWNESS")),
    POTION_OF_LEAPING_EXTENDED("POTION_OF_LEAPING_EXTENDED", "EXTENDED POTIONS OF LEAPING", POTION, (short) 8267, "EXTENDED POTION OF LEAPING", Collections.singletonList("EXTENDED_POTION_OF_LEAPING")),
    POTION_OF_WATER_BREATHING_EXTENDED("POTION_OF_WATER_BREATHING_EXTENDED", "EXTENDED POTIONS OF WATER BREATHING", POTION, (short) 8269, "EXTENDED POTION OF WATER BREATHING", Collections.singletonList("EXTENDED_POTION_OF_WATER_BREATHING")),
    POTION_OF_INVISIBILITY_EXTENDED("POTION_OF_INVISIBILITY_EXTENDED", "EXTENDED POTIONS OF INVISIBILITY", POTION, (short) 8270, "EXTENDED POTION OF INVISIBILITY", Collections.singletonList("EXTENDED_POTION_OF_INVISIBILITY")),
    POTION_OF_REGENERATION_2_EXTENDED("POTION_OF_REGENERATION_2_EXTENDED", "EXTENDED POTIONS OF REGENERATION 2", POTION, (short) 8289, "EXTENDED POTION OF REGENERATION 2", Collections.singletonList("EXTENDED_POTION_OF_REGENERATION_@")),
    POTION_OF_SWIFTNESS_2_EXTENDED("POTION_OF_SWIFTNESS_2_EXTENDED", "EXTENDED POTIONS OF SWIFTNESS 2", POTION, (short) 8290, "EXTENDED POTION OF SWIFTNESS 2", Collections.singletonList("EXTENDED_POTION_OF_SWIFTNESS_2")),
    POTION_OF_POISON_2_EXTENDED("POTION_OF_POISON_2_EXTENDED", "EXTENDED POTIONS OF POISON 2", POTION, (short) 8292, "EXTENDED POTION OF POISON 2", Collections.singletonList("EXTENDED_POTION_OF_POISON_2")),
    POTION_OF_STRENGTH_2_EXTENDED("POTION_OF_STRENGTH_2_EXTENDED", "EXTENDED POTIONS OF STRENGTH 2", POTION, (short) 8297, "EXTENDED POTION OF STRENGTH 2", Collections.singletonList("EXTENDED_POTION_OF_STRENGTH_2")),
    SPLASH_MUNDANE_POTION("SPLASH_MUNDANE_POTION", "MUNDANE SPLASH POTIONS", POTION, (short) 16384, "MUNDANE SPLASH POTION", Collections.singletonList("MUNDANE_SPLASH_POTION")),
    SPLASH_POTION_OF_REGENERATION("SPLASH_POTION_OF_REGENERATION", "SPLASH POTIONS OF REGENERATION", POTION, (short) 16385),
    SPLASH_POTION_OF_SWIFTNESS("SPLASH_POTION_OF_SWIFTNESS", "SPLASH POTIONS OF SWIFTNESS", POTION, (short) 16386),
    SPLASH_POTION_OF_FIRE_RESISTANCE("SPLASH_POTION_OF_FIRE_RESISTANCE", "SPLASH POTIONS OF FIRE RESISTANCE", POTION, (short) 16387),
    SPLASH_POTION_OF_POISON("SPLASH_POTION_OF_POISON", "SPLASH POTIONS OF POISON", POTION, (short) 16388),
    SPLASH_POTION_OF_HEALING("SPLASH_POTION_OF_HEALING", "SPLASH POTIONS OF HEALING", POTION, (short) 16389),
    SPLASH_POTION_OF_NIGHT_VISION("SPLASH_POTION_OF_NIGHT_VISION", "SPLASH POTIONS OF NIGHT VISION", POTION, (short) 16390),
    SPLASH_POTION_OF_WEAKNESS("SPLASH_POTION_OF_WEAKNESS", "SPLASH POTIONS OF WEAKNESS", POTION, (short) 16391),
    SPLASH_POTION_OF_STRENGTH("SPLASH_POTION_OF_STRENGTH", "SPLASH POTIONS OF STRENGTH", POTION, (short) 16392),
    SPLASH_POTION_OF_SLOWNESS("SPLASH_POTION_OF_SLOWNESS", "SPLASH POTIONS OF SLOWNESS", POTION, (short) 16393),
    SPLASH_POTION_OF_LEAPING("SPLASH_POTION_OF_LEAPING", "SPLASH POTIONS OF LEAPING", POTION, (short) 16394),
    SPLASH_POTION_OF_HARMING("SPLASH_POTION_OF_HARMING", "SPLASH POTIONS OF HARMING", POTION, (short) 16395),
    SPLASH_POTION_OF_WATER_BREATHING("SPLASH_POTION_OF_WATER_BREATHING", "SPLASH POTIONS OF WATER BREATHING", POTION, (short) 16397),
    SPLASH_POTION_OF_INVISIBILITY("SPLASH_POTION_OF_INVISIBILITY", "SPLASH POTIONS OF INVISIBILITY", POTION, (short) 16398),
    SPLASH_POTION_OF_REGENERATION_2("SPLASH_POTION_OF_REGENERATION_2", "SPLASH POTIONS OF REGENERATION 2", POTION, (short) 16417),
    SPLASH_POTION_OF_SWIFTNESS_2("SPLASH_POTION_OF_SWIFTNESS_2", "SPLASH POTIONS OF SWIFTNESS 2", POTION, (short) 16418),
    SPLASH_POTION_OF_FIRE_RESISTANCE_2("SPLASH_POTION_OF_FIRE_RESISTANCE_2", "SPLASH POTIONS OF FIRE RESISTANCE 2", POTION, (short) 16419),
    SPLASH_POTION_OF_POISON_2("SPLASH_POTION_OF_POISON_2", "SPLASH POTIONS OF POISON 2", POTION, (short) 16420),
    SPLASH_POTION_OF_HEALING_2("SPLASH_POTION_OF_HEALING_2", "SPLASH POTIONS OF HEALING 2", POTION, (short) 16421),
    SPLASH_POTION_OF_STRENGTH_2("SPLASH_POTION_OF_STRENGTH_2", "SPLASH POTIONS OF STRENGTH 2", POTION, (short) 16425),
    SPLASH_POTION_OF_LEAPING_2("SPLASH_POTION_OF_LEAPING_2", "SPLASH POTIONS OF LEAPING 2", POTION, (short) 16427),
    SPLASH_POTION_OF_HARMING_2("SPLASH_POTION_OF_HARMING_2", "SPLASH POTIONS OF HARMING 2", POTION, (short) 16428),
    SPLASH_POTION_OF_REGENERATION_EXTENDED("SPLASH_POTION_OF_REGENERATION_EXTENDED", "EXTENDED SPLASH POTIONS OF REGENERATION", POTION, (short) 16449, "EXTENDED SPLASH POTION OF REGENERATION", Collections.singletonList("EXTENDED_SPLASH_POTION_OF_REGENERATION")),
    SPLASH_POTION_OF_SWIFTNESS_EXTENDED("SPLASH_POTION_OF_SWIFTNESS_EXTENDED", "EXTENDED SPLASH POTIONS OF SWIFTNESS", POTION, (short) 16450, "EXTENDED SPLASH POTION OF SWIFTNESS", Collections.singletonList("EXTENDED_SPLASH_POTION_OF_SWIFTNESS")),
    SPLASH_POTION_OF_FIRE_RESISTANCE_EXTENDED("SPLASH_POTION_OF_FIRE_RESISTANCE_EXTENDED", "EXTENDED SPLASH POTIONS OF FIRE RESISTANCE", POTION, (short) 16451, "EXTENDED SPLASH POTION OF FIRE RESISTANCE", Collections.singletonList("EXTENDED_SPLASH_POTION_OF_FIRE_RESISTANCE")),
    SPLASH_POTION_OF_POISON_EXTENDED("SPLASH_POTION_OF_POISON_EXTENDED", "EXTENDED SPLASH POTIONS OF POISON", POTION, (short) 16452, "EXTENDED SPLASH POTION OF POISON", Collections.singletonList("EXTENDED_SPLASH_POTION_OF_POISON")),
    SPLASH_POTION_OF_NIGHT_VISION_EXTENDED("SPLASH_POTION_OF_NIGHT_VISION_EXTENDED", "EXTENDED SPLASH POTIONS OF NIGHT VISION", POTION, (short) 16453, "EXTENDED SPLASH POTION OF NIGHT VISION", Collections.singletonList("EXTENDED_SPLASH_POTION_OF_NIGHT_VISION")),
    SPLASH_POTION_OF_WEAKNESS_EXTENDED("SPLASH_POTION_OF_WEAKNESS_EXTENDED", "EXTENDED SPLASH POTIONS OF WEAKNESS", POTION, (short) 16454, "EXTENDED SPLASH POTION OF WEAKNESS", Collections.singletonList("EXTENDED_SPLASH_POTION_OF_WEAKNESS")),
    SPLASH_POTION_OF_STRENGTH_EXTENDED("SPLASH_POTION_OF_STRENGTH_EXTENDED", "EXTENDED SPLASH POTIONS OF STRENGTH", POTION, (short) 16455, "EXTENDED SPLASH POTION OF STRENGTH", Collections.singletonList("EXTENDED_SPLASH_POTION_OF_STRENGTH")),
    SPLASH_POTION_OF_SLOWNESS_EXTENDED("SPLASH_POTION_OF_SLOWNESS_EXTENDED", "EXTENDED SPLASH POTIONS OF SLOWNESS", POTION, (short) 16456, "EXTENDED SPLASH POTION OF SLOWNESS", Collections.singletonList("EXTENDED_SPLASH_POTION_OF_SLOWNESS")),
    SPLASH_POTION_OF_LEAPING_EXTENDED("SPLASH_POTION_OF_LEAPING_EXTENDED", "EXTENDED SPLASH POTIONS OF LEAPING", POTION, (short) 16457, "EXTENDED SPLASH POTION OF LEAPING", Collections.singletonList("EXTENDED_SPLASH_POTION_OF_LEAPING")),
    SPLASH_POTION_OF_WATER_BREATHING_EXTENDED("SPLASH_POTION_OF_WATER_BREATHING_EXTENDED", "EXTENDED SPLASH POTIONS OF WATER BREATHING", POTION, (short) 16458, "EXTENDED SPLASH POTION OF WATER BREATHING", Collections.singletonList("EXTENDED_SPLASH_POTION_OF_WATER_BREATHING")),
    SPLASH_POTION_OF_INVISIBILITY_EXTENDED("SPLASH_POTION_OF_INVISIBILITY_EXTENDED", "EXTENDED SPLASH POTIONS OF INVISIBILITY", POTION, (short) 16459, "EXTENDED SPLASH POTION OF INVISIBILITY", Collections.singletonList("EXTENDED_SPLASH_POTION_OF_INVISIBILITY")),
    SPLASH_POTION_OF_REGENERATION_2_EXTENDED("SPLASH_POTION_OF_REGENERATION_2_EXTENDED", "EXTENDED SPLASH POTIONS OF REGENERATION 2", POTION, (short) 16481, "EXTENDED SPLASH POTION OF REGENERATION 2", Collections.singletonList("EXTENDED_SPLASH_POTION_OF_REGENERATION_2")),
    SPLASH_POTION_OF_SWIFTNESS_2_EXTENDED("SPLASH_POTION_OF_SWIFTNESS_2_EXTENDED", "EXTENDED SPLASH POTIONS OF SWIFTNESS 2", POTION, (short) 16482, "EXTENDED SPLASH POTION OF SWIFTNESS 2", Collections.singletonList("EXTENDED_SPLASH_POTION_OF_SWIFTNESS_2")),
    SPLASH_POTION_OF_POISON_2_EXTENDED("SPLASH_POTION_OF_POISON_2_EXTENDED", "EXTENDED SPLASH POTIONS OF POISON 2", POTION, (short) 16484, "EXTENDED SPLASH POTION OF POISON 2", Collections.singletonList("EXTENDED_SPLASH_POTION_OF_POISON_2")),
    SPLASH_POTION_OF_STRENGTH_2_EXTENDED("SPLASH_POTION_OF_STRENGTH_2_EXTENDED", "EXTENDED SPLASH POTIONS OF STRENGTH 2", POTION, (short) 16489, "EXTENDED SPLASH POTION OF STRENGTH 2", Collections.singletonList("EXTENDED_SPLASH_POTION_OF_STRENGTH_2")),
    GLASS_BOTTLE("GLASS_BOTTLE", org.bukkit.Material.GLASS_BOTTLE, "GLASS BOTTLES", 374, Collections.singletonList("BOTTLE")),
    SPIDER_EYE("SPIDER_EYE", org.bukkit.Material.SPIDER_EYE, "SPIDER EYES", 375),
    FERMENTED_SPIDER_EYE("FERMENTED_SPIDER_EYE", org.bukkit.Material.FERMENTED_SPIDER_EYE, "FERMENTED SPIDER EYES", 376),
    BLAZE_POWDER("BLAZE_POWDER", org.bukkit.Material.BLAZE_POWDER, 377),
    MAGMA_CREAM("MAGMA_CREAM", org.bukkit.Material.MAGMA_CREAM, 378),
    BREWING_STAND("BREWING_STAND", org.bukkit.Material.BREWING_STAND_ITEM, "BREWING STANDS", 379, Collections.singletonList("BREWING_STAND_ITEM")),
    CAULDRON("CAULDRON", org.bukkit.Material.CAULDRON_ITEM, "CAULDRONS", 380, Collections.singletonList("CAULDRON_ITEM")),
    ENDER_EYE("ENDER_EYE", org.bukkit.Material.EYE_OF_ENDER, "EYES OF ENDER", 381, "EYE OF ENDER", Collections.singletonList("EYE_OF_ENDER")),
    SPECKLED_MELON("SPECKLED_MELON", org.bukkit.Material.SPECKLED_MELON, "GLISTERING MELONS", 382, "GLISTERING MELON", Collections.singletonList("GLISTERING_MELON")),
    SPAWN_EGG("SPAWN_EGG", org.bukkit.Material.MONSTER_EGG, "SPAWN EGGS", 383),
    SPAWN_ELDER_GUARDIAN("SPAWN_ELDER_GUARDIAN", "ELDER GUARDIAN SPAWN EGGS", SPAWN_EGG, (short) 4, "ELDER GUARDIAN SPAWN EGG", Collections.singletonList("ELDER_GUARDIAN_SPAWN_EGG")),
    SPAWN_WITHER_SKELETON("SPAWN_WITHER_SKELETON", "WITHER SKELETON SPAWN EGGS", SPAWN_EGG, (short) 5, "WITHER SKELETON SPAWN EGG", Collections.singletonList("WITHER_SKELETON_SPAWN_EGG")),
    SPAWN_STRAY("SPAWN_STRAY", "STRAY SPAWN EGGS", SPAWN_EGG, (short) 6, "STRAY SPAWN EGG", Collections.singletonList("STRAY_SPAWN_EGG")),
    SPAWN_ZOMBIE_VILLAGER("SPAWN_ZOMBIE_VILLAGER", "ZOMBIE VILLAGER SPAWN EGGS", SPAWN_EGG, (short) 27, "ZOMBIE VILLAGER SPAWN EGG", Collections.singletonList("ZOMBIE_VILLAGER_SPAWN_EGG")),
    SPAWN_SKELETON_HORSE("SPAWN_SKELETON_HORSE", "SKELETON HORSE SPAWN EGGS", SPAWN_EGG, (short) 28, "SKELETON HORSE SPAWN EGG", Collections.singletonList("SKELETON_HORSE_SPAWN_EGG")),
    SPAWN_ZOMBIE_HORSE("SPAWN_ZOMBIE_HORSE", "ZOMBIE HORSE SPAWN EGGS", SPAWN_EGG, (short) 29, "ZOMBIE HORSE SPAWN EGG", Collections.singletonList("ZOMBIE_HORSE_SPAWN_EGG")),
    SPAWN_DONKEY("SPAWN_DONKEY", "DONKEY SPAWN EGGS", SPAWN_EGG, (short) 31, "DONKEY SPAWN EGG", Collections.singletonList("DONKEY_SPAWN_EGG")),
    SPAWN_EVOKER("SPAWN_EVOKER", "EVOKER SPAWN EGGS", SPAWN_EGG, (short) 34, "EVOKER SPAWN EGG", Collections.singletonList("EVOKER_SPAWN_EGG")),
    SPAWN_VEX("SPAWN_VEX", "VEX SPAWN EGGS", SPAWN_EGG, (short) 35, "VEX SPAWN EGG", Collections.singletonList("VEX_SPAWN_EGG")),
    SPAWN_VINDICATOR("SPAWN_VINDICATOR", "VINDICATOR SPAWN EGGS", SPAWN_EGG, (short) 36, "VINDICATOR SPAWN EGG", Collections.singletonList("VINDICATOR_SPAWN_EGG")),
    SPAWN_HUSK("SPAWN_HUSK", "HUSK SPAWN EGGS", SPAWN_EGG, (short) 47, "HUSK SPAWN EGG", Collections.singletonList("HUSK_SPAWN_EGG")),
    SPAWN_CREEPER("SPAWN_CREEPER", "CREEPER SPAWN EGGS", SPAWN_EGG, (short) 50, "CREEPER SPAWN EGG", Collections.singletonList("CREEPER_SPAWN_EGG")),
    SPAWN_SKELETON("SPAWN_SKELETON", "SKELETON SPAWN EGGS", SPAWN_EGG, (short) 51, "SKELETON SPAWN EGG", Collections.singletonList("SKELETON_SPAWN_EGG")),
    SPAWN_SPIDER("SPAWN_SPIDER", "SPIDER SPAWN EGGS", SPAWN_EGG, (short) 52, "SPIDER SPAWN EGG", Collections.singletonList("SPIDER_SPAWN_EGG")),
    SPAWN_ZOMBIE("SPAWN_ZOMBIE", "ZOMBIE SPAWN EGGS", SPAWN_EGG, (short) 54, "ZOMBIE SPAWN EGG", Collections.singletonList("ZOMBIE_SPAWN_EGG")),
    SPAWN_SLIME("SPAWN_SLIME", "SLIME SPAWN EGGS", SPAWN_EGG, (short) 55, "SLIME SPAWN EGG", Collections.singletonList("SLIME_SPAWN_EGG")),
    SPAWN_GHAST("SPAWN_GHAST", "GHAST SPAWN EGGS", SPAWN_EGG, (short) 56, "GHAST SPAWN EGG", Collections.singletonList("GHAST_SPAWN_EGG")),
    SPAWN_ZOMBIE_PIGMAN("SPAWN_ZOMBIE_PIGMAN", "ZOMBIE PIGMAN SPAWN EGGS", SPAWN_EGG, (short) 57, "ZOMBIE PIGMAN SPAWN EGG", Arrays.asList("ZOMBIE_PIGMAN_SPAWN_EGG", "PIGMAN_SPAWN_EGG", "SPAWN_PIGMAN")),
    SPAWN_ENDERMAN("SPAWN_ENDERMAN", "ENDERMAN SPAWN EGGS", SPAWN_EGG, (short) 58, "ENDERMAN SPAWN EGG", Collections.singletonList("ENDERMAN_SPAWN_EGG")),
    SPAWN_CAVE_SPIDER("SPAWN_CAVE_SPIDER", "CAVE SPIDER SPAWN EGGS", SPAWN_EGG, (short) 59, "CAVE SPIDER SPAWN EGG", Collections.singletonList("CAVE_SPIDER_SPAWN_EGG")),
    SPAWN_SILVERFISH("SPAWN_SILVERFISH", "SILVERFISH SPAWN EGGS", SPAWN_EGG, (short) 60, "SILVERFISH SPAWN EGG", Collections.singletonList("SILVERFISH_SPAWN_EGG")),
    SPAWN_BLAZE("SPAWN_BLAZE", "BLAZE SPAWN EGGS", SPAWN_EGG, (short) 61, "BLAZE SPAWN EGG", Collections.singletonList("BLAZE_SPAWN_EGG")),
    SPAWN_MAGMA_CUBE("SPAWN_MAGMA_CUBE", "MAGMA CUBE SPAWN EGGS", SPAWN_EGG, (short) 62, "MAGMA CUBE SPAWN EGG", Collections.singletonList("MAGMA_CUBE_SPAWN_EGG")),
    SPAWN_BAT("SPAWN_BAT", "BAT SPAWN EGGS", SPAWN_EGG, (short) 65, "BAT SPAWN EGG", Collections.singletonList("BAT_SPAWN_EGG")),
    SPAWN_WITCH("SPAWN_WITCH", "WITCH SPAWN EGGS", SPAWN_EGG, (short) 66, "WITCH SPAWN EGG", Collections.singletonList("WITCH_SPAWN_EGG")),
    SPAWN_ENDERMITE("SPAWN_ENDERMITE", "ENDERMITE SPAWN EGGS", SPAWN_EGG, (short) 67, "ENDERMITE SPAWN EGG", Collections.singletonList("ENDERMITE_SPAWN_EGG")),
    SPAWN_GUARDIAN("SPAWN_GUARDIAN", "GUARDIAN SPAWN EGGS", SPAWN_EGG, (short) 68, "GUARDIAN SPAWN EGG", Collections.singletonList("GUARDIAN_SPAWN_EGG")),
    SPAWN_SHULKER("SPAWN_SHULKER", "SHULKER SPAWN EGGS", SPAWN_EGG, (short) 69, "SHULKER SPAWN EGG", Collections.singletonList("SHULKER_SPAWN_EGG")),
    SPAWN_PIG("SPAWN_PIG", "PIG SPAWN EGGS", SPAWN_EGG, (short) 90, "PIG SPAWN EGG", Collections.singletonList("PIG_SPAWN_EGG")),
    SPAWN_SHEEP("SPAWN_SHEEP", "SHEEP SPAWN EGGS", SPAWN_EGG, (short) 91, "SHEEP SPAWN EGG", Collections.singletonList("SHEEP_SPAWN_EGG")),
    SPAWN_COW("SPAWN_COW", "COW SPAWN EGGS", SPAWN_EGG, (short) 92, "COW SPAWN EGG", Collections.singletonList("COW_SPAWN_EGG")),
    SPAWN_CHICKEN("SPAWN_CHICKEN", "CHICKEN SPAWN EGGS", SPAWN_EGG, (short) 93, "CHICKEN SPAWN EGG", Collections.singletonList("CHICKEN_SPAWN_EGG")),
    SPAWN_SQUID("SPAWN_SQUID", "SQUID SPAWN EGGS", SPAWN_EGG, (short) 94, "SQUID SPAWN EGG", Collections.singletonList("SQUID_SPAWN_EGG")),
    SPAWN_WOLF("SPAWN_WOLF", "WOLF SPAWN EGGS", SPAWN_EGG, (short) 95, "WOLF SPAWN EGG", Collections.singletonList("WOLF_SPAWN_EGG")),
    SPAWN_MOOSHROOM("SPAWN_MOOSHROOM", "MOOSHROOM SPAWN EGGS", SPAWN_EGG, (short) 96, "MOOSHROOM SPAWN EGG", Collections.singletonList("MOOSHROOM_SPAWN_EGG")),
    SPAWN_OCELOT("SPAWN_OCELOT", "OCELOT SPAWN EGGS", SPAWN_EGG, (short) 98, "OCELOT SPAWN EGG", Collections.singletonList("OCELOT_SPAWN_EGG")),
    SPAWN_HORSE("SPAWN_HORSE", "HORSE SPAWN EGGS", SPAWN_EGG, (short) 100, "HORSE SPAWN EGG", Collections.singletonList("HORSE_SPAWN_EGG")),
    SPAWN_RABBIT("SPAWN_RABBIT", "RABBIT SPAWN EGGS", SPAWN_EGG, (short) 101, "RABBIT SPAWN EGG", Collections.singletonList("RABBIT_SPAWN_EGG")),
    SPAWN_VILLAGER("SPAWN_VILLAGER", "VILLAGER SPAWN EGGS", SPAWN_EGG, (short) 120, "VILLAGER SPAWN EGG", Collections.singletonList("VILLAGER_SPAWN_EGG")),
    EXPERIENCE_BOTTLE("EXPERIENCE_BOTTLE", org.bukkit.Material.EXP_BOTTLE, "BOTTLES O ENCHANTING", 384, "BOTTLE O ENCHANTING", Arrays.asList("EXP_BOTTLE", "XP", "EXP", "BOTTLED_EXP", "BOTTLED_XP", "BOTTLED_EXPERIENCE")),
    FIRE_CHARGE("FIRE_CHARGE", org.bukkit.Material.FIREBALL, "FIRE CHARGES", 385, Collections.singletonList("FIREBALL")),
    WRITABLE_BOOK("WRITABLE_BOOK", org.bukkit.Material.BOOK_AND_QUILL, "BOOKS AND QUILLS", 386, "BOOK AND QUILL", Collections.singletonList("BOOK_AND_QUILL")),
    WRITTEN_BOOK("WRITTEN_BOOK", org.bukkit.Material.WRITTEN_BOOK, "WRITTEN BOOKS", 387),
    EMERALD("EMERALD", org.bukkit.Material.EMERALD, "EMERALDS", 388),
    ITEM_FRAME("ITEM_FRAME", org.bukkit.Material.ITEM_FRAME, "ITEM FRAMES", 389),
    FLOWER_POT("FLOWER_POT", org.bukkit.Material.FLOWER_POT_ITEM, "FLOWER POTS", 390, Collections.singletonList("FLOWER_POT_ITEM")),
    CARROT("CARROT", org.bukkit.Material.CARROT_ITEM, "CARROTS", 391, Collections.singletonList("CARROT_ITEM")),
    POTATO("POTATO", org.bukkit.Material.POTATO_ITEM, "POTATOES", 392, Collections.singletonList("POTATO_ITEM")),
    BAKED_POTATO("BAKED_POTATO", org.bukkit.Material.BAKED_POTATO, "BAKED POTATOES", 393, Collections.singletonList("COOKED_POTATO")),
    POISONOUS_POTATO("POISONOUS_POTATO", org.bukkit.Material.POISONOUS_POTATO, "POISONOUS POTATOES", 394),
    MAP("MAP", org.bukkit.Material.EMPTY_MAP, "MAPS", 395, Collections.singletonList("EMPTY_MAP")),
    GOLDEN_CARROT("GOLDEN_CARROT", org.bukkit.Material.GOLDEN_CARROT, "GOLDEN CARROTS", 396, Collections.singletonList("GOLD_CARROT")),
    SKULL("SKULL", org.bukkit.Material.SKULL_ITEM, "SKULLS", 397, Collections.singletonList("SKULL_ITEM")),
    SKELETON_SKULL("SKELETON_SKULL", "SKELETON SKULLS", SKULL, (short) 0, Collections.singletonList("SKELETON_HEAD")),
    WITHER_SKELETON_SKULL("WITHER_SKELETON_SKULL", "WITHER SKELETON SKULLS", SKULL, (short) 1, Arrays.asList("WITHER_SKELETON_HEAD", "WITHER_SKULL", "WITHER_HEAD")),
    ZOMBIE_HEAD("ZOMBIE_HEAD", "ZOMBIE HEADS", SKULL, (short) 2, Collections.singletonList("ZOMBIE_SKULL")),
    HEAD("HEAD", "HEADS", SKULL, (short) 3),
    CREEPER_HEAD("CREEPER_HEAD", "CREEPER HEADS", SKULL, (short) 4, Collections.singletonList("CREEPER_SKULL")),
    CARROT_ON_A_STICK("CARROT_ON_A_STICK", org.bukkit.Material.CARROT_STICK, 398, Collections.singletonList("CARROT_STICK")),
    NETHER_STAR("NETHER_STAR", org.bukkit.Material.NETHER_STAR, "NETHER STARS", 399, Collections.singletonList("WITHER_STAR")),
    PUMPKIN_PIE("PUMPKIN_PIE", org.bukkit.Material.PUMPKIN_PIE, "PUMPKIN PIES", 400, Collections.singletonList("PIE")),
    FIREWORKS("FIREWORKS", org.bukkit.Material.FIREWORK, "FIREWORKS", 401, "FIREWORK ROCKET", Arrays.asList("FIREWORK_ROCKET", "FIREWORK")),
    FIREWORK_CHARGE("FIREWORK_CHARGE", org.bukkit.Material.FIREWORK_CHARGE, 402, Collections.singletonList("FIREWORK_STAR")),
    ENCHANTED_BOOK("ENCHANTED_BOOK", org.bukkit.Material.ENCHANTED_BOOK, "ENCHANTED BOOKS", 403),
    COMPARATOR("COMPARATOR", org.bukkit.Material.REDSTONE_COMPARATOR, "REDSTONE COMPARATORS", 404, "REDSTONE COMPARATOR", Collections.singletonList("REDSTONE_COMPARATOR")),
    NETHERBRICK("NETHERBRICK", org.bukkit.Material.NETHER_BRICK_ITEM, "NETHER BRICKS", 405, "NETHER BRICK", Collections.singletonList("NETHER_BRICK_ITEM")),
    QUARTZ("QUARTZ", org.bukkit.Material.QUARTZ, 406, "NETHER QUARTZ", Collections.singletonList("NETHER_QUARTZ")),
    TNT_MINECART("TNT_MINECART", org.bukkit.Material.EXPLOSIVE_MINECART, "MINECARTS WITH TNT", 407, "MINECART WITH TNT", Arrays.asList("MINECART_WITH_TNT", "EXPLOSIVE_MINECART")),
    HOPPER_MINECART("HOPPER_MINECART", org.bukkit.Material.HOPPER_MINECART, "MINECARTS WITH HOPPERS", 408, "MINECART WITH HOPPER", Arrays.asList("MINECART_WITH_HOPPER", "HOPPER_MINECART")),
    PRISMARINE_SHARD("PRISMARINE_SHARD", org.bukkit.Material.PRISMARINE_SHARD, "PRISMARINE SHARDS", 409),
    PRISMARINE_CRYSTALS("PRISMARINE_CRYSTALS", org.bukkit.Material.PRISMARINE_CRYSTALS, "PRISMARINE CRYSTALS", 410, "PRISMARINE CRYSTAL"),
    RABBIT("RABBIT", org.bukkit.Material.RABBIT, 411, "RAW RABBIT", Collections.singletonList("RAW_RABBIT")),
    COOKED_RABBIT("COOKED_RABBIT", org.bukkit.Material.COOKED_RABBIT, 412),
    RABBIT_STEW("RABBIT_STEW", org.bukkit.Material.RABBIT_STEW, 413, Collections.singletonList("RABBIT_SOUP")),
    RABBIT_FOOT("RABBIT_FOOT", org.bukkit.Material.RABBIT_FOOT, 414),
    RABBIT_HIDE("RABBIT_HIDE", org.bukkit.Material.RABBIT_HIDE, 415),
    ARMOR_STAND("ARMOR_STAND", org.bukkit.Material.ARMOR_STAND, "ARMOR STANDS", 416),
    IRON_HORSE_ARMOR("IRON_HORSE_ARMOR", org.bukkit.Material.IRON_BARDING, 417, Collections.singletonList("IRON_BARDING")),
    GOLDEN_HORSE_ARMOR("GOLDEN_HORSE_ARMOR", org.bukkit.Material.GOLD_BARDING, 418, Arrays.asList("GOLD_HORSE_ARMOR", "GOLD_BARDING", "GOLDEN_BARDING")),
    DIAMOND_HORSE_ARMOR("DIAMOND_HORSE_ARMOR", org.bukkit.Material.DIAMOND_BARDING, 419, Collections.singletonList("DIAMOND_BARDING")),
    LEAD("LEAD", org.bukkit.Material.LEASH, "LEADS", 420, Collections.singletonList("LEASH")),
    NAME_TAG("NAME_TAG", org.bukkit.Material.NAME_TAG, "NAME TAGS", 421),
    COMMAND_BLOCK_MINECART("COMMAND_BLOCK_MINECART", org.bukkit.Material.COMMAND_MINECART, "MINECARTS WITH COMMAND BLOCKS", 422, "MINECART WITH COMMAND BLOCK", Arrays.asList("MINECART_WITH_COMMAND_BLOCK", "COMMAND_IN_MINECART", "MINECART_WITH_COMMAND", "COMMAND_MINECART")),
    MUTTON("MUTTON", org.bukkit.Material.MUTTON, 423, "RAW MUTTON", Arrays.asList("RAW_LAMB_CHOPS", "RAW_LAMB", "RAW_MUTTON")),
    COOKED_MUTTON("COOKED_MUTTON", org.bukkit.Material.COOKED_MUTTON, 424, Arrays.asList("LAMB_CHOPS", "LAMB")),
    BANNER("BANNER", org.bukkit.Material.BANNER, "BANNERS", 425),
    BLACK_BANNER("BLACK_BANNER", BANNER, (short) 0),
    RED_BANNER("RED_BANNER", BANNER, (short) 1),
    GREEN_BANNER("GREEN_BANNER", BANNER, (short) 2),
    BROWN_BANNER("BROWN_BANNER", BANNER, (short) 3),
    BLUE_BANNER("BLUE_BANNER", BANNER, (short) 4),
    PURPLE_BANNER("PURPLE_BANNER", BANNER, (short) 5),
    CYAN_BANNER("CYAN_BANNER", BANNER, (short) 6),
    LIGHT_GRAY_BANNER("LIGHT_GRAY_BANNER", BANNER, (short) 7),
    GRAY_BANNER("GRAY_BANNER", BANNER, (short) 8),
    PINK_BANNER("PINK_BANNER", BANNER, (short) 9),
    LIME_BANNER("LIME_BANNER", BANNER, (short) 10),
    YELLOW_BANNER("YELLOW_BANNER", BANNER, (short) 11),
    LIGHT_BLUE_BANNER("LIGHT_BLUE_BANNER", BANNER, (short) 12),
    MAGENTA_BANNER("MAGENTA_BANNER", BANNER, (short) 13),
    ORANGE_BANNER("ORANGE_BANNER", BANNER, (short) 14),
    WHITE_BANNER("WHITE_BANNER", BANNER, (short) 15),
    END_CRYSTAL("END_CRYSTAL", org.bukkit.Material.END_CRYSTAL, "END CRYSTALS", 426, Collections.singletonList("ENDER_CRYSTAL")),
    SPRUCE_DOOR("SPRUCE_DOOR", org.bukkit.Material.SPRUCE_DOOR_ITEM, "SPRUCE DOORS", 427, Arrays.asList("SPRUCE_WOOD_DOOR", "SPRUCE_DOOR_ITEM")),
    BIRCH_DOOR("BIRCH_DOOR", org.bukkit.Material.BIRCH_DOOR_ITEM, "BIRCH DOORS", 428, Arrays.asList("BIRCH_WOOD_DOOR", "BIRCH_DOOR_ITEM")),
    JUNGLE_DOOR("JUNGLE_DOOR", org.bukkit.Material.JUNGLE_DOOR_ITEM, "JUNGLE DOORS", 429, Arrays.asList("JUNGLE_WOOD_DOOR", "JUNGLE_DOOR_ITEM")),
    ACACIA_DOOR("ACACIA_DOOR", org.bukkit.Material.ACACIA_DOOR_ITEM, "ACACIA DOORS", 430, Arrays.asList("ACACIA_WOOD_DOOR", "ACACIA_DOOR_ITEM")),
    DARK_OAK_DOOR("DARK_OAK_DOOR", org.bukkit.Material.DARK_OAK_DOOR_ITEM, "DARK OAK DOORS", 431, Arrays.asList("DARK_OAK_WOOD_DOOR", "DARK_OAK_DOOR_ITEM")),
    CHORUS_FRUIT("CHORUS_FRUIT", org.bukkit.Material.CHORUS_FRUIT, 432),
    CHORUS_FRUIT_POPPED("CHORUS_FRUIT_POPPED", org.bukkit.Material.CHORUS_FRUIT_POPPED, 433, "POPPED CHORUS FRUIT", Collections.singletonList("POPPED_CHORUS_FRUIT")),
    BEETROOT("BEETROOT", org.bukkit.Material.BEETROOT, "BEETROOTS", 434),
    BEETROOT_SEEDS("BEETROOT_SEEDS", org.bukkit.Material.BEETROOT_SEEDS, "BEETROOT SEEDS", 435, "BEETROOT SEED"),
    BEETROOT_SOUP("BEETROOT_SOUP", org.bukkit.Material.BEETROOT_SOUP, 436),
    DRAGON_BREATH("DRAGON_BREATH", org.bukkit.Material.DRAGONS_BREATH, 437, Collections.singletonList("DRAGONS_BREATH")),
    SPLASH_POTION("SPLASH_POTION", org.bukkit.Material.SPLASH_POTION, "SPLASH POTIONS", 438),
    SPECTRAL_ARROW("SPECTRAL_ARROW", org.bukkit.Material.SPECTRAL_ARROW, "SPECTRAL ARROWS", 439),
    TIPPED_ARROW("TIPPED_ARROW", org.bukkit.Material.TIPPED_ARROW, "TIPPED ARROWS", 440),
    LINGERING_POTION("LINGERING_POTION", org.bukkit.Material.LINGERING_POTION, "LINGERING POTIONS", 441),
    SHIELD("SHIELD", org.bukkit.Material.SHIELD, "SHIELDS", 442),
    ELYTRA("ELYTRA", org.bukkit.Material.ELYTRA, 443, Collections.singletonList("WING")),
    SPRUCE_BOAT("SPRUCE_BOAT", org.bukkit.Material.BOAT_SPRUCE, "SPRUCE BOATS", 444, Arrays.asList("SPRUCE_WOOD_BOAT", "BOAT_SPRUCE")),
    BIRCH_BOAT("BIRCH_BOAT", org.bukkit.Material.BOAT_BIRCH, "BIRCH BOATS", 445, Arrays.asList("BIRCH_WOOD_BOAT", "BOAT_BIRCH")),
    JUNGLE_BOAT("JUNGLE_BOAT", org.bukkit.Material.BOAT_JUNGLE, "JUNGLE BOATS", 446, Arrays.asList("JUNGLE_WOOD_BOAT", "BOAT_JUNGLE")),
    ACACIA_BOAT("ACACIA_BOAT", org.bukkit.Material.BOAT_ACACIA, "ACACIA BOATS", 447, Arrays.asList("ACACIA_WOOD_BOAT", "BOAT_ACACIA")),
    DARK_OAK_BOAT("DARK_OAK_BOAT", org.bukkit.Material.BOAT_DARK_OAK, "DARK OAK BOATS", 448, Arrays.asList("DARK_OAK_WOOD_BOAT", "BOAT_DARK_OAK")),
    TOTEM_OF_UNDYING("TOTEM_OF_UNDYING", org.bukkit.Material.TOTEM, "TOTEMS OF UNDYING", 449, Collections.singletonList("TOTEM")),
    SHULKER_SHELL("SHULKER_SHELL", org.bukkit.Material.SHULKER_SHELL, "SHULKER SHELLS", 450),
    KNOWLEDGE_BOOK("KNOWLEDGE_BOOK", org.bukkit.Material.KNOWLEDGE_BOOK, "KNOWLEDGE BOOKS", 453, Collections.singletonList("BOOK_OF_KNOWLEDGE")),
    //451 unused
    IRON_NUGGET("IRON_NUGGET", org.bukkit.Material.IRON_NUGGET, "IRON NUGGETS", 452),
    //Music Discs
    RECORD_13("RECORD_13", org.bukkit.Material.GOLD_RECORD, 2256, "C418 - 13", Arrays.asList("13", "MUSIC_DISC_13", "MUSIC_13", "C418_13", "GOLD_RECORD")),
    RECORD_CAT("RECORD_CAT", org.bukkit.Material.GREEN_RECORD, 2257, "C418 - CAT", Arrays.asList("CAT", "MUSIC_DISC_CAT", "MUSIC_CAT", "C418_CAT", "GREEN_RECORD")),
    RECORD_BLOCKS("RECORD_BLOCKS", org.bukkit.Material.RECORD_3, 2258, "C418 - BLOCKS", Arrays.asList("BLOCKS", "MUSIC_DISC_BLOCKS", "MUSIC_BLOCKS", "C418_BLOCKS", "RECORD_3")),
    RECORD_CHIRP("RECORD_CHIRP", org.bukkit.Material.RECORD_4, 2259, "C418 - CHIRP", Arrays.asList("CHIRP", "MUSIC_DISC_CHIRP", "MUSIC_CHIRP", "C418_CHIRP", "RECORD_4")),
    RECORD_FAR("RECORD_FAR", org.bukkit.Material.RECORD_5, 2260, "C418 - FAR", Arrays.asList("FAR", "MUSIC_DISC_FAR", "MUSIC_FAR", "C418_FAR", "RECORD_5")),
    RECORD_MALL("RECORD_MALL", org.bukkit.Material.RECORD_6, 2261, "C418 - MALL", Arrays.asList("MALL", "MUSIC_DISC_MALL", "MUSIC_MALL", "C418_MALL", "RECORD_6")),
    RECORD_MELLOHI("RECORD_MELLOHI", org.bukkit.Material.RECORD_7, 2262, "C418 - MELLOHI", Arrays.asList("MELLOHI", "MUSIC_DISC_MELLOHI", "MUSIC_MELLOHI", "C418_MELLOHI", "RECORD_7")),
    RECORD_STAL("RECORD_STAL", org.bukkit.Material.RECORD_8, 2263, "C418 - STAL", Arrays.asList("STAL", "MUSIC_DISC_STAL", "MUSIC_STAL", "C418_STAL", "RECORD_8")),
    RECORD_STRAD("RECORD_STRAD", org.bukkit.Material.RECORD_9, 2264, "C418 - STRAD", Arrays.asList("STRAD", "MUSIC_DISC_STRAD", "MUSIC_STRAD", "C418_STRAD", "RECORD_9")),
    RECORD_WARD("RECORD_WARD", org.bukkit.Material.RECORD_10, 2265, "C418 - WARD", Arrays.asList("WARD", "MUSIC_DISC_WARD", "MUSIC_WARD", "C418_WARD", "RECORD_10")),
    RECORD_11("RECORD_11", org.bukkit.Material.RECORD_11, 2266, "C418 - 11", Arrays.asList("11", "MUSIC_DISC_11", "MUSIC_11", "C418_11")),
    RECORD_WAIT("RECORD_WAIT", org.bukkit.Material.RECORD_12, 2267, "C418 - WAIT", Arrays.asList("WAIT", "MUSIC_DISC_WAIT", "MUSIC_WAIT", "C418_WAIT", "RECORD_12"));

    private static final HashMap<Integer, Material> idMap = new HashMap<>();
    private static final HashMap<String, Material> nameMap = new HashMap<>();
    private static final HashMap<String, String> aliasMap = new HashMap<>();
    private final HashMap<Short, Material> children;
    private final Material parent;
    private final String name;
    private final String plural;
    private final String friendlyName;
    private final String lore;
    private final Integer id;
    private final short data;
    private final org.bukkit.Material bukkitMaterial;
    private final List<String> aliases;

    Material(String name, Material parent, String lore) {
        this(name, null, parent, lore, null, new ArrayList<>());
    }

    Material(String name, String plural, Material parent, String lore) {
        this(name, plural, parent, lore, null, new ArrayList<>());
    }

    Material(String name, String plural, Material parent, String lore, String friendlyName) {
        this(name, plural, parent, lore, friendlyName, new ArrayList<>());
    }

    Material(String name, Material parent, String lore, List<String> aliases) {
        this(name, null, parent, lore, null, aliases);
    }

    Material(String name, String plural, Material parent, String lore, List<String> aliases) {
        this(name, plural, parent, lore, null, aliases);
    }

    Material(String name, Material parent, String lore, String friendlyName, List<String> aliases) {
        this(name, null, parent, lore, friendlyName, aliases);
    }

    Material(String name, String plural, Material parent, String lore, String friendlyName, List<String> aliases) {
        this.name = name;
        this.friendlyName = friendlyName;
        this.plural = plural;
        this.data = 0;
        this.lore = lore;
        this.id = null;
        this.aliases = aliases;
        this.parent = parent;
        this.children = new HashMap<>();
        this.bukkitMaterial = this.parent.bukkitMaterial;
    }

    Material(String name, org.bukkit.Material bukkitMaterial, int id) {
        this(name, bukkitMaterial, id, new ArrayList<>());
    }

    Material(String name, org.bukkit.Material bukkitMaterial, int id, List<String> aliases) {
        this(name, bukkitMaterial, id, null, aliases);
    }

    Material(String name, org.bukkit.Material bukkitMaterial, int id, String friendlyName) {
        this(name, bukkitMaterial, id, friendlyName, new ArrayList<>());
    }

    Material(String name, org.bukkit.Material bukkitMaterial, int id, String friendlyName, List<String> aliases) {
        this(name, bukkitMaterial, null, id, friendlyName, aliases);
    }

    Material(String name, Material parent, short data) {
        this(name, parent, data, null, new ArrayList<>());
    }

    Material(String name, Material parent, short data, String friendlyName) {
        this(name, parent, data, friendlyName, new ArrayList<>());
    }

    Material(String name, Material parent, short data, List<String> aliases) {
        this(name, parent, data, null, aliases);
    }

    Material(String name, Material parent, short data, String friendlyName, List<String> aliases) {
        this(name, null, parent, data, friendlyName, aliases);
    }

    Material(String name, org.bukkit.Material bukkitMaterial, String plural, int id) {
        this(name, bukkitMaterial, plural, id, new ArrayList<>());
    }

    Material(String name, org.bukkit.Material bukkitMaterial, String plural, int id, List<String> aliases) {
        this(name, bukkitMaterial, plural, id, null, aliases);
    }

    Material(String name, org.bukkit.Material bukkitMaterial, String plural, int id, String friendlyName) {
        this(name, bukkitMaterial, plural, id, friendlyName, new ArrayList<>());
    }

    Material(String name, org.bukkit.Material bukkitMaterial, String plural, int id, String friendlyName, List<String> aliases) {
        this.name = name;
        this.friendlyName = friendlyName;
        this.plural = plural;
        this.bukkitMaterial = bukkitMaterial;
        this.id = id;
        this.data = 0;
        this.lore = null;
        this.aliases = aliases;
        this.parent = this;
        this.children = new HashMap<>();
    }

    Material(String name, String plural, Material parent, short data) {
        this(name, plural, parent, data, null, new ArrayList<>());
    }

    Material(String name, String plural, Material parent, short data, String friendlyName) {
        this(name, plural, parent, data, friendlyName, new ArrayList<>());
    }

    Material(String name, String plural, Material parent, short data, List<String> aliases) {
        this(name, plural, parent, data, null, aliases);
    }

    Material(String name, String plural, Material parent, short data, String friendlyName, List<String> aliases) {
        this.name = name;
        this.friendlyName = friendlyName;
        this.plural = plural;
        this.data = data;
        this.id = null;
        this.lore = null;
        this.aliases = aliases;
        this.parent = parent;
        this.children = new HashMap<>();
        this.bukkitMaterial = this.parent.bukkitMaterial;
        this.parent.addChild(this.data, this);
    }

    private void addChild(short data, Material child) {
        this.children.put(data, child);
    }

    /**
     * Retrieves the parent material.
     * @return The parent material, or the current material if there is no parent.
     */
    public Material getParent() {
        return this.parent;
    }

    /**
     * Retrieves the String representation of the current Material.
     * @return The String representation of the current Material.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Retrieves the friendly name for this material.
     * @return The friendly name of this Material.
     */
    public String getFriendlyName() {
        return Utils.capFirst(this.friendlyName == null ? this.name.replaceAll("_", " ") : this.friendlyName);
    }

    /**
     * Retrieves the friendly name for the specified amount.
     * @param amount The amount of items to see if it should be the plural or normal friendly name.
     * @return The friendly potentially plural name.
     */
    public String getFriendlyName(int amount) {
        return amount == 1 || this.plural == null ? getFriendlyName() : Utils.capFirst(this.plural);
    }

    /**
     * Checks if this material has lore to include.
     * @return True if there is lore to include, false otherwise.
     */
    public boolean hasLore() {
        return this.lore != null;
    }

    /**
     * Retrieves the lore for this material if it has any.
     * @return The lore of this material.
     */
    public String getLore() {
        return this.lore;
    }

    /**
     * The id of the material.
     * @return The id of the material.
     */
    public int getID() {
        return this.parent.id;
    }

    private boolean mapID() {
        return this.id != null;
    }

    public short getData() {
        return this.data;
    }

    /**
     * Retrieves the list of aliases.
     * @return The list of aliases.
     */
    public List<String> getAliases() {
        return this.aliases;
    }

    /**
     * Retrieves a child of the current material.
     * @param data The damage value to get a more specific child.
     * @return The child with the specified damage value.
     */
    public Material getChild(short data) {
        return this.children.get(data) == null ? this : this.children.get(data);
    }

    /**
     * Checks if the current material has any children.
     * @return True if this material has children, false otherwise.
     */
    public boolean hasChildren() {
        return !this.children.isEmpty();
    }

    /**
     * Gets the bukkit version of the material.
     * @return The bukkit version of the material, in the form of MaterialData to not loose the damage value.
     */
    @SuppressWarnings("deprecation")
    public MaterialData getBukkitMaterial() {
        return new MaterialData(this.bukkitMaterial, (byte) this.data);
    }

    /**
     * Checks if the current material has a durability bar.
     * @return True if the current material has a durability bar, false otherwise.
     */
    public boolean isTool() {
        return isTool(this.bukkitMaterial);
    }

    /**
     * Retrieves the material with the specified id.
     * @param id The id of the material to retrieve.
     * @return The material with the specified id.
     */
    public static Material fromID(int id) {
        return idMap.get(id);
    }

    /**
     * Retrieves the material with the specified name or alias.
     * @param name The name of the material to retrieve.
     * @return The material with the specified name or alias.
     */
    public static Material fromString(String name) {//Tries to get based on alias and then on exact name if no alias
        name = name.toUpperCase().replaceAll(" ", "").replaceAll("_", "");
        String n = aliasMap.get(name);
        return n == null ? nameMap.get(name) : nameMap.get(n);
    }

    /**
     * Gets the material that is a child of the specified material with the given damage value.
     * @param m    The material to get the child of.
     * @param data The damage value of the material.
     * @return The child with the specified damage value of the specified material.
     */
    public static Material fromData(Material m, short data) {
        return m == null ? null : m.getChild(data);
    }

    /**
     * Gets the material with the specified id and damage value.
     * @param id   The id of the material to retrieve.
     * @param data The damage value of the material with the specified id.
     * @return The material with the specified id and damage value.
     */
    public static Material fromData(int id, short data) {
        return fromData(fromID(id), data);
    }

    /**
     * Gets the material with the specified name and damage value.
     * @param name The name of the material to retrieve.
     * @param data The damage value of the material with the specified name.
     * @return The material with the specified name and damage value.
     */
    public static Material fromData(String name, short data) {
        return fromData(fromString(name), data);
    }

    /**
     * Maps the different materials for purposes of getting retrieving based on aliases.
     */
    public static void mapMaterials() {
        for (Material m : values()) {
            if (m.mapID())
                idMap.put(m.getID(), m);
            nameMap.put(m.getName().replaceAll("_", ""), m);
            for (String alias : m.getAliases())
                aliasMap.put(alias.replaceAll("_", ""), m.getName().replace("_", ""));
        }
    }

    /**
     * Checks if the specified bukkit material has a durability bar.
     * @param type The bukkit material type to check.
     * @return True if the specified bukkit material has a durability bar, false otherwise.
     */
    public static boolean isTool(org.bukkit.Material type) {
        //Wood tools
        if (type.equals(org.bukkit.Material.WOOD_AXE) || type.equals(org.bukkit.Material.WOOD_HOE) || type.equals(org.bukkit.Material.WOOD_PICKAXE) ||
                type.equals(org.bukkit.Material.WOOD_SWORD) || type.equals(org.bukkit.Material.WOOD_SPADE))
            return true;
        //Stone tools
        if (type.equals(org.bukkit.Material.STONE_AXE) || type.equals(org.bukkit.Material.STONE_HOE) || type.equals(org.bukkit.Material.STONE_PICKAXE) ||
                type.equals(org.bukkit.Material.STONE_SWORD) || type.equals(org.bukkit.Material.STONE_SPADE))
            return true;
        //Iron tools
        if (type.equals(org.bukkit.Material.IRON_AXE) || type.equals(org.bukkit.Material.IRON_HOE) || type.equals(org.bukkit.Material.IRON_PICKAXE) ||
                type.equals(org.bukkit.Material.IRON_SWORD) || type.equals(org.bukkit.Material.IRON_SPADE))
            return true;
        //Gold tools
        if (type.equals(org.bukkit.Material.GOLD_AXE) || type.equals(org.bukkit.Material.GOLD_HOE) || type.equals(org.bukkit.Material.GOLD_PICKAXE) ||
                type.equals(org.bukkit.Material.GOLD_SWORD) || type.equals(org.bukkit.Material.GOLD_SPADE))
            return true;
        //Diamond tools
        if (type.equals(org.bukkit.Material.DIAMOND_AXE) || type.equals(org.bukkit.Material.DIAMOND_HOE) || type.equals(org.bukkit.Material.DIAMOND_PICKAXE) ||
                type.equals(org.bukkit.Material.DIAMOND_SWORD) || type.equals(org.bukkit.Material.DIAMOND_SPADE))
            return true;
        //Leather Armor
        if (type.equals(org.bukkit.Material.LEATHER_BOOTS) || type.equals(org.bukkit.Material.LEATHER_CHESTPLATE) ||
                type.equals(org.bukkit.Material.LEATHER_HELMET) || type.equals(org.bukkit.Material.LEATHER_LEGGINGS))
            return true;
        //Chainmail Armor
        if (type.equals(org.bukkit.Material.CHAINMAIL_BOOTS) || type.equals(org.bukkit.Material.CHAINMAIL_CHESTPLATE) ||
                type.equals(org.bukkit.Material.CHAINMAIL_HELMET) || type.equals(org.bukkit.Material.CHAINMAIL_LEGGINGS))
            return true;
        //Iron Armor
        if (type.equals(org.bukkit.Material.IRON_BOOTS) || type.equals(org.bukkit.Material.IRON_CHESTPLATE) ||
                type.equals(org.bukkit.Material.IRON_HELMET) || type.equals(org.bukkit.Material.IRON_LEGGINGS))
            return true;
        //Gold Armor
        if (type.equals(org.bukkit.Material.GOLD_BOOTS) || type.equals(org.bukkit.Material.GOLD_CHESTPLATE) ||
                type.equals(org.bukkit.Material.GOLD_HELMET) || type.equals(org.bukkit.Material.GOLD_LEGGINGS))
            return true;
        //Diamond Armor
        if (type.equals(org.bukkit.Material.DIAMOND_BOOTS) || type.equals(org.bukkit.Material.DIAMOND_CHESTPLATE) ||
                type.equals(org.bukkit.Material.DIAMOND_HELMET) || type.equals(org.bukkit.Material.DIAMOND_LEGGINGS))
            return true;
        //Other things that can have data values
        return type.equals(org.bukkit.Material.ANVIL) || type.equals(org.bukkit.Material.CARROT_STICK) || type.equals(org.bukkit.Material.FISHING_ROD) ||
                type.equals(org.bukkit.Material.FLINT_AND_STEEL) || type.equals(org.bukkit.Material.SHEARS) || type.equals(org.bukkit.Material.BOW) ||
                type.equals(org.bukkit.Material.ELYTRA);
    }
}